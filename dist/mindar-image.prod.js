/*! For license information please see mindar-image.prod.js.LICENSE.txt */
(()=>{var t={113:function(t){t.exports=function(t){var e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(r,s,function(e){return t[e]}.bind(null,s));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e),n.d(e,"encode",(function(){return T})),n.d(e,"decode",(function(){return W})),n.d(e,"decodeAsync",(function(){return K})),n.d(e,"decodeArrayStream",(function(){return X})),n.d(e,"decodeStream",(function(){return Y})),n.d(e,"Decoder",(function(){return B})),n.d(e,"Encoder",(function(){return N})),n.d(e,"ExtensionCodec",(function(){return I})),n.d(e,"ExtData",(function(){return p})),n.d(e,"EXT_TIMESTAMP",(function(){return g})),n.d(e,"encodeDateToTimeSpec",(function(){return x})),n.d(e,"encodeTimeSpecToTimestamp",(function(){return b})),n.d(e,"decodeTimestampToTimeSpec",(function(){return w})),n.d(e,"encodeTimestampExtension",(function(){return y})),n.d(e,"decodeTimestampExtension",(function(){return v}));var r=function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,s,i=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(t){s={error:t}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(s)throw s.error}}return a},s=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(r(arguments[e]));return t},i="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function a(t){for(var e=t.length,n=0,r=0;r<e;){var s=t.charCodeAt(r++);if(0!=(4294967168&s))if(0==(4294965248&s))n+=2;else{if(s>=55296&&s<=56319&&r<e){var i=t.charCodeAt(r);56320==(64512&i)&&(++r,s=((1023&s)<<10)+(1023&i)+65536)}n+=0==(4294901760&s)?3:4}else n++}return n}var o=i?new TextEncoder:void 0,l="undefined"!=typeof process?200:0,u=(null==o?void 0:o.encodeInto)?function(t,e,n){o.encodeInto(t,e.subarray(n))}:function(t,e,n){e.set(o.encode(t),n)};function h(t,e,n){for(var r=e,i=r+n,a=[],o="";r<i;){var l=t[r++];if(0==(128&l))a.push(l);else if(192==(224&l)){var u=63&t[r++];a.push((31&l)<<6|u)}else if(224==(240&l)){u=63&t[r++];var h=63&t[r++];a.push((31&l)<<12|u<<6|h)}else if(240==(248&l)){var c=(7&l)<<18|(u=63&t[r++])<<12|(h=63&t[r++])<<6|63&t[r++];c>65535&&(c-=65536,a.push(c>>>10&1023|55296),c=56320|1023&c),a.push(c)}else a.push(l);a.length>=4096&&(o+=String.fromCharCode.apply(String,s(a)),a.length=0)}return a.length>0&&(o+=String.fromCharCode.apply(String,s(a))),o}var c=i?new TextDecoder:null,d="undefined"!=typeof process?200:0,p=function(t,e){this.type=t,this.data=e};function f(t,e,n){var r=Math.floor(n/4294967296),s=n;t.setUint32(e,r),t.setUint32(e+4,s)}function m(t,e){return 4294967296*t.getInt32(e)+t.getUint32(e+4)}var g=-1;function b(t){var e,n=t.sec,r=t.nsec;if(n>=0&&r>=0&&n<=17179869183){if(0===r&&n<=4294967295){var s=new Uint8Array(4);return(e=new DataView(s.buffer)).setUint32(0,n),s}var i=n/4294967296,a=4294967295&n;return s=new Uint8Array(8),(e=new DataView(s.buffer)).setUint32(0,r<<2|3&i),e.setUint32(4,a),s}return s=new Uint8Array(12),(e=new DataView(s.buffer)).setUint32(0,r),f(e,4,n),s}function x(t){var e=t.getTime(),n=Math.floor(e/1e3),r=1e6*(e-1e3*n),s=Math.floor(r/1e9);return{sec:n+s,nsec:r-1e9*s}}function y(t){return t instanceof Date?b(x(t)):null}function w(t){var e=new DataView(t.buffer,t.byteOffset,t.byteLength);switch(t.byteLength){case 4:return{sec:e.getUint32(0),nsec:0};case 8:var n=e.getUint32(0);return{sec:4294967296*(3&n)+e.getUint32(4),nsec:n>>>2};case 12:return{sec:m(e,4),nsec:e.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+t.length)}}function v(t){var e=w(t);return new Date(1e3*e.sec+e.nsec/1e6)}var k={type:g,encode:y,decode:v},I=function(){function t(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(k)}return t.prototype.register=function(t){var e=t.type,n=t.encode,r=t.decode;if(e>=0)this.encoders[e]=n,this.decoders[e]=r;else{var s=1+e;this.builtInEncoders[s]=n,this.builtInDecoders[s]=r}},t.prototype.tryToEncode=function(t,e){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(r=this.builtInEncoders[n])&&null!=(s=r(t,e)))return new p(-1-n,s);for(n=0;n<this.encoders.length;n++){var r,s;if(null!=(r=this.encoders[n])&&null!=(s=r(t,e)))return new p(n,s)}return t instanceof p?t:null},t.prototype.decode=function(t,e,n){var r=e<0?this.builtInDecoders[-1-e]:this.decoders[e];return r?r(t,e,n):new p(e,t)},t.defaultCodec=new t,t}();function S(t){return t instanceof Uint8Array?t:ArrayBuffer.isView(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t instanceof ArrayBuffer?new Uint8Array(t):Uint8Array.from(t)}var C=function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},N=function(){function t(t,e,n,r,s,i,a){void 0===t&&(t=I.defaultCodec),void 0===n&&(n=100),void 0===r&&(r=2048),void 0===s&&(s=!1),void 0===i&&(i=!1),void 0===a&&(a=!1),this.extensionCodec=t,this.context=e,this.maxDepth=n,this.initialBufferSize=r,this.sortKeys=s,this.forceFloat32=i,this.ignoreUndefined=a,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return t.prototype.encode=function(t,e){if(e>this.maxDepth)throw new Error("Too deep objects in depth "+e);null==t?this.encodeNil():"boolean"==typeof t?this.encodeBoolean(t):"number"==typeof t?this.encodeNumber(t):"string"==typeof t?this.encodeString(t):this.encodeObject(t,e)},t.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},t.prototype.ensureBufferSizeToWrite=function(t){var e=this.pos+t;this.view.byteLength<e&&this.resizeBuffer(2*e)},t.prototype.resizeBuffer=function(t){var e=new ArrayBuffer(t),n=new Uint8Array(e),r=new DataView(e);n.set(this.bytes),this.view=r,this.bytes=n},t.prototype.encodeNil=function(){this.writeU8(192)},t.prototype.encodeBoolean=function(t){!1===t?this.writeU8(194):this.writeU8(195)},t.prototype.encodeNumber=function(t){Number.isSafeInteger(t)?t>=0?t<128?this.writeU8(t):t<256?(this.writeU8(204),this.writeU8(t)):t<65536?(this.writeU8(205),this.writeU16(t)):t<4294967296?(this.writeU8(206),this.writeU32(t)):(this.writeU8(207),this.writeU64(t)):t>=-32?this.writeU8(224|t+32):t>=-128?(this.writeU8(208),this.writeI8(t)):t>=-32768?(this.writeU8(209),this.writeI16(t)):t>=-2147483648?(this.writeU8(210),this.writeI32(t)):(this.writeU8(211),this.writeI64(t)):this.forceFloat32?(this.writeU8(202),this.writeF32(t)):(this.writeU8(203),this.writeF64(t))},t.prototype.writeStringHeader=function(t){if(t<32)this.writeU8(160+t);else if(t<256)this.writeU8(217),this.writeU8(t);else if(t<65536)this.writeU8(218),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too long string: "+t+" bytes in UTF-8");this.writeU8(219),this.writeU32(t)}},t.prototype.encodeString=function(t){var e=t.length;if(i&&e>l){var n=a(t);this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),u(t,this.bytes,this.pos),this.pos+=n}else n=a(t),this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),function(t,e,n){for(var r=t.length,s=n,i=0;i<r;){var a=t.charCodeAt(i++);if(0!=(4294967168&a)){if(0==(4294965248&a))e[s++]=a>>6&31|192;else{if(a>=55296&&a<=56319&&i<r){var o=t.charCodeAt(i);56320==(64512&o)&&(++i,a=((1023&a)<<10)+(1023&o)+65536)}0==(4294901760&a)?(e[s++]=a>>12&15|224,e[s++]=a>>6&63|128):(e[s++]=a>>18&7|240,e[s++]=a>>12&63|128,e[s++]=a>>6&63|128)}e[s++]=63&a|128}else e[s++]=a}}(t,this.bytes,this.pos),this.pos+=n},t.prototype.encodeObject=function(t,e){var n=this.extensionCodec.tryToEncode(t,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(t))this.encodeArray(t,e);else if(ArrayBuffer.isView(t))this.encodeBinary(t);else{if("object"!=typeof t)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(t));this.encodeMap(t,e)}},t.prototype.encodeBinary=function(t){var e=t.byteLength;if(e<256)this.writeU8(196),this.writeU8(e);else if(e<65536)this.writeU8(197),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large binary: "+e);this.writeU8(198),this.writeU32(e)}var n=S(t);this.writeU8a(n)},t.prototype.encodeArray=function(t,e){var n,r,s=t.length;if(s<16)this.writeU8(144+s);else if(s<65536)this.writeU8(220),this.writeU16(s);else{if(!(s<4294967296))throw new Error("Too large array: "+s);this.writeU8(221),this.writeU32(s)}try{for(var i=C(t),a=i.next();!a.done;a=i.next()){var o=a.value;this.encode(o,e+1)}}catch(t){n={error:t}}finally{try{a&&!a.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}},t.prototype.countWithoutUndefined=function(t,e){var n,r,s=0;try{for(var i=C(e),a=i.next();!a.done;a=i.next())void 0!==t[a.value]&&s++}catch(t){n={error:t}}finally{try{a&&!a.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}return s},t.prototype.encodeMap=function(t,e){var n,r,s=Object.keys(t);this.sortKeys&&s.sort();var i=this.ignoreUndefined?this.countWithoutUndefined(t,s):s.length;if(i<16)this.writeU8(128+i);else if(i<65536)this.writeU8(222),this.writeU16(i);else{if(!(i<4294967296))throw new Error("Too large map object: "+i);this.writeU8(223),this.writeU32(i)}try{for(var a=C(s),o=a.next();!o.done;o=a.next()){var l=o.value,u=t[l];this.ignoreUndefined&&void 0===u||(this.encodeString(l),this.encode(u,e+1))}}catch(t){n={error:t}}finally{try{o&&!o.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}},t.prototype.encodeExtension=function(t){var e=t.data.length;if(1===e)this.writeU8(212);else if(2===e)this.writeU8(213);else if(4===e)this.writeU8(214);else if(8===e)this.writeU8(215);else if(16===e)this.writeU8(216);else if(e<256)this.writeU8(199),this.writeU8(e);else if(e<65536)this.writeU8(200),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large extension object: "+e);this.writeU8(201),this.writeU32(e)}this.writeI8(t.type),this.writeU8a(t.data)},t.prototype.writeU8=function(t){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,t),this.pos++},t.prototype.writeU8a=function(t){var e=t.length;this.ensureBufferSizeToWrite(e),this.bytes.set(t,this.pos),this.pos+=e},t.prototype.writeI8=function(t){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,t),this.pos++},t.prototype.writeU16=function(t){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,t),this.pos+=2},t.prototype.writeI16=function(t){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,t),this.pos+=2},t.prototype.writeU32=function(t){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,t),this.pos+=4},t.prototype.writeI32=function(t){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,t),this.pos+=4},t.prototype.writeF32=function(t){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,t),this.pos+=4},t.prototype.writeF64=function(t){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,t),this.pos+=8},t.prototype.writeU64=function(t){this.ensureBufferSizeToWrite(8),function(t,e,n){var r=n/4294967296,s=n;t.setUint32(e,r),t.setUint32(e+4,s)}(this.view,this.pos,t),this.pos+=8},t.prototype.writeI64=function(t){this.ensureBufferSizeToWrite(8),f(this.view,this.pos,t),this.pos+=8},t}(),$={};function T(t,e){void 0===e&&(e=$);var n=new N(e.extensionCodec,e.context,e.maxDepth,e.initialBufferSize,e.sortKeys,e.forceFloat32,e.ignoreUndefined);return n.encode(t,1),n.getUint8Array()}function E(t){return(t<0?"-":"")+"0x"+Math.abs(t).toString(16).padStart(2,"0")}var R=function(){function t(t,e){void 0===t&&(t=16),void 0===e&&(e=16),this.maxKeyLength=t,this.maxLengthPerKey=e,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return t.prototype.canBeCached=function(t){return t>0&&t<=this.maxKeyLength},t.prototype.get=function(t,e,n){var r=this.caches[n-1],s=r.length;t:for(var i=0;i<s;i++){for(var a=r[i],o=a.bytes,l=0;l<n;l++)if(o[l]!==t[e+l])continue t;return a.value}return null},t.prototype.store=function(t,e){var n=this.caches[t.length-1],r={bytes:t,value:e};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)},t.prototype.decode=function(t,e,n){var r=this.get(t,e,n);if(null!=r)return r;var s=h(t,e,n),i=Uint8Array.prototype.slice.call(t,e,e+n);return this.store(i,s),s},t}(),A=function(t,e){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(t,a)}catch(t){i=[6,t],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},F=function(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t="function"==typeof __values?__values(t):t[Symbol.iterator](),e={},r("next"),r("throw"),r("return"),e[Symbol.asyncIterator]=function(){return this},e);function r(n){e[n]=t[n]&&function(e){return new Promise((function(r,s){!function(t,e,n,r){Promise.resolve(r).then((function(e){t({value:e,done:n})}),e)}(r,s,(e=t[n](e)).done,e.value)}))}}},D=function(t){return this instanceof D?(this.v=t,this):new D(t)},M=function(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(t,e||[]),i=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(t){s[t]&&(r[t]=function(e){return new Promise((function(n,r){i.push([t,e,n,r])>1||o(t,e)}))})}function o(t,e){try{(n=s[t](e)).value instanceof D?Promise.resolve(n.value.v).then(l,u):h(i[0][2],n)}catch(t){h(i[0][3],t)}var n}function l(t){o("next",t)}function u(t){o("throw",t)}function h(t,e){t(e),i.shift(),i.length&&o(i[0][0],i[0][1])}},_=new DataView(new ArrayBuffer(0)),O=new Uint8Array(_.buffer),L=function(){try{_.getInt8(0)}catch(t){return t.constructor}throw new Error("never reached")}(),z=new L("Insufficient data"),P=new R,B=function(){function t(t,e,n,r,s,i,a,o){void 0===t&&(t=I.defaultCodec),void 0===n&&(n=4294967295),void 0===r&&(r=4294967295),void 0===s&&(s=4294967295),void 0===i&&(i=4294967295),void 0===a&&(a=4294967295),void 0===o&&(o=P),this.extensionCodec=t,this.context=e,this.maxStrLength=n,this.maxBinLength=r,this.maxArrayLength=s,this.maxMapLength=i,this.maxExtLength=a,this.cachedKeyDecoder=o,this.totalPos=0,this.pos=0,this.view=_,this.bytes=O,this.headByte=-1,this.stack=[]}return t.prototype.setBuffer=function(t){this.bytes=S(t),this.view=function(t){if(t instanceof ArrayBuffer)return new DataView(t);var e=S(t);return new DataView(e.buffer,e.byteOffset,e.byteLength)}(this.bytes),this.pos=0},t.prototype.appendBuffer=function(t){if(-1!==this.headByte||this.hasRemaining()){var e=this.bytes.subarray(this.pos),n=S(t),r=new Uint8Array(e.length+n.length);r.set(e),r.set(n,e.length),this.setBuffer(r)}else this.setBuffer(t)},t.prototype.hasRemaining=function(t){return void 0===t&&(t=1),this.view.byteLength-this.pos>=t},t.prototype.createNoExtraBytesError=function(t){var e=this.view,n=this.pos;return new RangeError("Extra "+(e.byteLength-n)+" byte(s) found at buffer["+t+"]")},t.prototype.decodeSingleSync=function(){var t=this.decodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return t},t.prototype.decodeSingleAsync=function(t){var e,n,r,s;return function(t,e,n,r){return new(n||(n=Promise))((function(s,i){function a(t){try{l(r.next(t))}catch(t){i(t)}}function o(t){try{l(r.throw(t))}catch(t){i(t)}}function l(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,o)}l((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,(function(){var i,a,o,l,u,h,c,d;return A(this,(function(p){switch(p.label){case 0:i=!1,p.label=1;case 1:p.trys.push([1,6,7,12]),e=F(t),p.label=2;case 2:return[4,e.next()];case 3:if((n=p.sent()).done)return[3,5];if(o=n.value,i)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(o);try{a=this.decodeSync(),i=!0}catch(t){if(!(t instanceof L))throw t}this.totalPos+=this.pos,p.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=p.sent(),r={error:l},[3,12];case 7:return p.trys.push([7,,10,11]),n&&!n.done&&(s=e.return)?[4,s.call(e)]:[3,9];case 8:p.sent(),p.label=9;case 9:return[3,11];case 10:if(r)throw r.error;return[7];case 11:return[7];case 12:if(i){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,a]}throw h=(u=this).headByte,c=u.pos,d=u.totalPos,new RangeError("Insufficient data in parcing "+E(h)+" at "+d+" ("+c+" in the current buffer)")}}))}))},t.prototype.decodeArrayStream=function(t){return this.decodeMultiAsync(t,!0)},t.prototype.decodeStream=function(t){return this.decodeMultiAsync(t,!1)},t.prototype.decodeMultiAsync=function(t,e){return M(this,arguments,(function(){var n,r,s,i,a,o,l,u,h;return A(this,(function(c){switch(c.label){case 0:n=e,r=-1,c.label=1;case 1:c.trys.push([1,13,14,19]),s=F(t),c.label=2;case 2:return[4,D(s.next())];case 3:if((i=c.sent()).done)return[3,12];if(a=i.value,e&&0===r)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(a),n&&(r=this.readArraySize(),n=!1,this.complete()),c.label=4;case 4:c.trys.push([4,9,,10]),c.label=5;case 5:return[4,D(this.decodeSync())];case 6:return[4,c.sent()];case 7:return c.sent(),0==--r?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((o=c.sent())instanceof L))throw o;return[3,10];case 10:this.totalPos+=this.pos,c.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=c.sent(),u={error:l},[3,19];case 14:return c.trys.push([14,,17,18]),i&&!i.done&&(h=s.return)?[4,D(h.call(s))]:[3,16];case 15:c.sent(),c.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},t.prototype.decodeSync=function(){t:for(;;){var t=this.readHeadByte(),e=void 0;if(t>=224)e=t-256;else if(t<192)if(t<128)e=t;else if(t<144){if(0!=(r=t-128)){this.pushMapState(r),this.complete();continue t}e={}}else if(t<160){if(0!=(r=t-144)){this.pushArrayState(r),this.complete();continue t}e=[]}else{var n=t-160;e=this.decodeUtf8String(n,0)}else if(192===t)e=null;else if(194===t)e=!1;else if(195===t)e=!0;else if(202===t)e=this.readF32();else if(203===t)e=this.readF64();else if(204===t)e=this.readU8();else if(205===t)e=this.readU16();else if(206===t)e=this.readU32();else if(207===t)e=this.readU64();else if(208===t)e=this.readI8();else if(209===t)e=this.readI16();else if(210===t)e=this.readI32();else if(211===t)e=this.readI64();else if(217===t)n=this.lookU8(),e=this.decodeUtf8String(n,1);else if(218===t)n=this.lookU16(),e=this.decodeUtf8String(n,2);else if(219===t)n=this.lookU32(),e=this.decodeUtf8String(n,4);else if(220===t){if(0!==(r=this.readU16())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(221===t){if(0!==(r=this.readU32())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(222===t){if(0!==(r=this.readU16())){this.pushMapState(r),this.complete();continue t}e={}}else if(223===t){if(0!==(r=this.readU32())){this.pushMapState(r),this.complete();continue t}e={}}else if(196===t){var r=this.lookU8();e=this.decodeBinary(r,1)}else if(197===t)r=this.lookU16(),e=this.decodeBinary(r,2);else if(198===t)r=this.lookU32(),e=this.decodeBinary(r,4);else if(212===t)e=this.decodeExtension(1,0);else if(213===t)e=this.decodeExtension(2,0);else if(214===t)e=this.decodeExtension(4,0);else if(215===t)e=this.decodeExtension(8,0);else if(216===t)e=this.decodeExtension(16,0);else if(199===t)r=this.lookU8(),e=this.decodeExtension(r,1);else if(200===t)r=this.lookU16(),e=this.decodeExtension(r,2);else{if(201!==t)throw new Error("Unrecognized type byte: "+E(t));r=this.lookU32(),e=this.decodeExtension(r,4)}this.complete();for(var s=this.stack;s.length>0;){var i=s[s.length-1];if(0===i.type){if(i.array[i.position]=e,i.position++,i.position!==i.size)continue t;s.pop(),e=i.array}else{if(1===i.type){if(void 0,"string"!=(a=typeof e)&&"number"!==a)throw new Error("The type of key must be string or number but "+typeof e);i.key=e,i.type=2;continue t}if(i.map[i.key]=e,i.readCount++,i.readCount!==i.size){i.key=null,i.type=1;continue t}s.pop(),e=i.map}}return e}var a},t.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},t.prototype.complete=function(){this.headByte=-1},t.prototype.readArraySize=function(){var t=this.readHeadByte();switch(t){case 220:return this.readU16();case 221:return this.readU32();default:if(t<160)return t-144;throw new Error("Unrecognized array type byte: "+E(t))}},t.prototype.pushMapState=function(t){if(t>this.maxMapLength)throw new Error("Max length exceeded: map length ("+t+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:t,key:null,readCount:0,map:{}})},t.prototype.pushArrayState=function(t){if(t>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+t+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:t,array:new Array(t),position:0})},t.prototype.decodeUtf8String=function(t,e){var n;if(t>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+t+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+e+t)throw z;var r,s=this.pos+e;return r=this.stateIsMapKey()&&(null===(n=this.cachedKeyDecoder)||void 0===n?void 0:n.canBeCached(t))?this.cachedKeyDecoder.decode(this.bytes,s,t):i&&t>d?function(t,e,n){var r=t.subarray(e,e+n);return c.decode(r)}(this.bytes,s,t):h(this.bytes,s,t),this.pos+=e+t,r},t.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},t.prototype.decodeBinary=function(t,e){if(t>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+t+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(t+e))throw z;var n=this.pos+e,r=this.bytes.subarray(n,n+t);return this.pos+=e+t,r},t.prototype.decodeExtension=function(t,e){if(t>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+t+") > maxExtLength ("+this.maxExtLength+")");var n=this.view.getInt8(this.pos+e),r=this.decodeBinary(t,e+1);return this.extensionCodec.decode(r,n,this.context)},t.prototype.lookU8=function(){return this.view.getUint8(this.pos)},t.prototype.lookU16=function(){return this.view.getUint16(this.pos)},t.prototype.lookU32=function(){return this.view.getUint32(this.pos)},t.prototype.readU8=function(){var t=this.view.getUint8(this.pos);return this.pos++,t},t.prototype.readI8=function(){var t=this.view.getInt8(this.pos);return this.pos++,t},t.prototype.readU16=function(){var t=this.view.getUint16(this.pos);return this.pos+=2,t},t.prototype.readI16=function(){var t=this.view.getInt16(this.pos);return this.pos+=2,t},t.prototype.readU32=function(){var t=this.view.getUint32(this.pos);return this.pos+=4,t},t.prototype.readI32=function(){var t=this.view.getInt32(this.pos);return this.pos+=4,t},t.prototype.readU64=function(){var t,e,n=(t=this.view,e=this.pos,4294967296*t.getUint32(e)+t.getUint32(e+4));return this.pos+=8,n},t.prototype.readI64=function(){var t=m(this.view,this.pos);return this.pos+=8,t},t.prototype.readF32=function(){var t=this.view.getFloat32(this.pos);return this.pos+=4,t},t.prototype.readF64=function(){var t=this.view.getFloat64(this.pos);return this.pos+=8,t},t}(),U={};function W(t,e){void 0===e&&(e=U);var n=new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength);return n.setBuffer(t),n.decodeSingleSync()}var V=function(t,e){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(t,a)}catch(t){i=[6,t],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}},G=function(t){return this instanceof G?(this.v=t,this):new G(t)},H=function(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(t,e||[]),i=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(t){s[t]&&(r[t]=function(e){return new Promise((function(n,r){i.push([t,e,n,r])>1||o(t,e)}))})}function o(t,e){try{(n=s[t](e)).value instanceof G?Promise.resolve(n.value.v).then(l,u):h(i[0][2],n)}catch(t){h(i[0][3],t)}var n}function l(t){o("next",t)}function u(t){o("throw",t)}function h(t,e){t(e),i.shift(),i.length&&o(i[0][0],i[0][1])}};function j(t){if(null==t)throw new Error("Assertion Failure: value must not be null nor undefined")}function q(t){return null!=t[Symbol.asyncIterator]?t:function(t){return H(this,arguments,(function(){var e,n,r,s;return V(this,(function(i){switch(i.label){case 0:e=t.getReader(),i.label=1;case 1:i.trys.push([1,,9,10]),i.label=2;case 2:return[4,G(e.read())];case 3:return n=i.sent(),r=n.done,s=n.value,r?[4,G(void 0)]:[3,5];case 4:return[2,i.sent()];case 5:return j(s),[4,G(s)];case 6:return[4,i.sent()];case 7:return i.sent(),[3,2];case 8:return[3,10];case 9:return e.releaseLock(),[7];case 10:return[2]}}))}))}(t)}function K(t,e){return void 0===e&&(e=U),function(t,e,n,r){return new(n||(n=Promise))((function(s,i){function a(t){try{l(r.next(t))}catch(t){i(t)}}function o(t){try{l(r.throw(t))}catch(t){i(t)}}function l(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,o)}l((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,(function(){var n;return function(t,e){var n,r,s,i,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((s=(s=a.trys).length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){a.label=i[1];break}if(6===i[0]&&a.label<s[1]){a.label=s[1],s=i;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(i);break}s[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(t,a)}catch(t){i=[6,t],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}(this,(function(r){return n=q(t),[2,new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeSingleAsync(n)]}))}))}function X(t,e){void 0===e&&(e=U);var n=q(t);return new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeArrayStream(n)}function Y(t,e){void 0===e&&(e=U);var n=q(t);return new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeStream(n)}}])},485:(t,e,n)=>{"use strict";n.d(e,{Z:()=>i});var r=n(645),s=n.n(r)()((function(t){return t[1]}));s.push([t.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:rgba(0,0,0,0);z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:#000;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media(min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media(max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right, white 10px, transparent 10px) 0 0,linear-gradient(to right, white 10px, transparent 10px) 0 100%,linear-gradient(to left, white 10px, transparent 10px) 100% 0,linear-gradient(to left, white 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, white 10px, transparent 10px) 0 0,linear-gradient(to bottom, white 10px, transparent 10px) 100% 0,linear-gradient(to top, white 10px, transparent 10px) 0 100%,linear-gradient(to top, white 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}",""]);const i=s},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var s={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(s[a]=!0)}for(var o=0;o<t.length;o++){var l=[].concat(t[o]);r&&s[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),e.push(l))}},e}},720:t=>{t.exports=n;var e=null;try{e=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function n(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function r(t){return!0===(t&&t.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},i={};function a(t,e){var n,r,a;return e?(a=0<=(t>>>=0)&&t<256)&&(r=i[t])?r:(n=l(t,(0|t)<0?-1:0,!0),a&&(i[t]=n),n):(a=-128<=(t|=0)&&t<128)&&(r=s[t])?r:(n=l(t,t<0?-1:0,!1),a&&(s[t]=n),n)}function o(t,e){if(isNaN(t))return e?b:g;if(e){if(t<0)return b;if(t>=p)return k}else{if(t<=-f)return I;if(t+1>=f)return v}return t<0?o(-t,e).neg():l(t%d|0,t/d|0,e)}function l(t,e,r){return new n(t,e,r)}n.fromInt=a,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function h(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return g;if("number"==typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return h(t.substring(1),e,n).neg();for(var s=o(u(n,8)),i=g,a=0;a<t.length;a+=8){var l=Math.min(8,t.length-a),c=parseInt(t.substring(a,a+l),n);if(l<8){var d=o(u(n,l));i=i.mul(d).add(o(c))}else i=(i=i.mul(s)).add(o(c))}return i.unsigned=e,i}function c(t,e){return"number"==typeof t?o(t,e):"string"==typeof t?h(t,e):l(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}n.fromString=h,n.fromValue=c;var d=4294967296,p=d*d,f=p/2,m=a(1<<24),g=a(0);n.ZERO=g;var b=a(0,!0);n.UZERO=b;var x=a(1);n.ONE=x;var y=a(1,!0);n.UONE=y;var w=a(-1);n.NEG_ONE=w;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},S.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var e=o(t),n=this.div(e),r=n.mul(e).sub(this);return n.toString(t)+r.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var s=o(u(t,6),this.unsigned),i=this,a="";;){var l=i.div(s),h=(i.sub(l.mul(s)).toInt()>>>0).toString(t);if((i=l).isZero())return h+a;for(;h.length<6;)h="0"+h;a=""+h+a}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(t){return r(t)||(t=c(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&this.high===t.high&&this.low===t.low},S.eq=S.equals,S.notEquals=function(t){return!this.eq(t)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(t){return this.comp(t)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(t){return this.comp(t)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(t){return this.comp(t)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(t){return this.comp(t)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(t){if(r(t)||(t=c(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},S.neg=S.negate,S.add=function(t){r(t)||(t=c(t));var e=this.high>>>16,n=65535&this.high,s=this.low>>>16,i=65535&this.low,a=t.high>>>16,o=65535&t.high,u=t.low>>>16,h=0,d=0,p=0,f=0;return p+=(f+=i+(65535&t.low))>>>16,d+=(p+=s+u)>>>16,h+=(d+=n+o)>>>16,h+=e+a,l((p&=65535)<<16|(f&=65535),(h&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(t){return r(t)||(t=c(t)),this.add(t.neg())},S.sub=S.subtract,S.multiply=function(t){if(this.isZero())return g;if(r(t)||(t=c(t)),e)return l(e.mul(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned);if(t.isZero())return g;if(this.eq(I))return t.isOdd()?I:g;if(t.eq(I))return this.isOdd()?I:g;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(m)&&t.lt(m))return o(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,i=this.low>>>16,a=65535&this.low,u=t.high>>>16,h=65535&t.high,d=t.low>>>16,p=65535&t.low,f=0,b=0,x=0,y=0;return x+=(y+=a*p)>>>16,b+=(x+=i*p)>>>16,x&=65535,b+=(x+=a*d)>>>16,f+=(b+=s*p)>>>16,b&=65535,f+=(b+=i*d)>>>16,b&=65535,f+=(b+=a*h)>>>16,f+=n*p+s*d+i*h+a*u,l((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(t){if(r(t)||(t=c(t)),t.isZero())throw Error("division by zero");var n,s,i;if(e)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?l((this.unsigned?e.div_u:e.div_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return b;if(t.gt(this.shru(1)))return y;i=b}else{if(this.eq(I))return t.eq(x)||t.eq(w)?I:t.eq(I)?x:(n=this.shr(1).div(t).shl(1)).eq(g)?t.isNegative()?x:w:(s=this.sub(t.mul(n)),i=n.add(s.div(t)));if(t.eq(I))return this.unsigned?b:g;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=g}for(s=this;s.gte(t);){n=Math.max(1,Math.floor(s.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),h=a<=48?1:u(2,a-48),d=o(n),p=d.mul(t);p.isNegative()||p.gt(s);)p=(d=o(n-=h,this.unsigned)).mul(t);d.isZero()&&(d=x),i=i.add(d),s=s.sub(p)}return i},S.div=S.divide,S.modulo=function(t){return r(t)||(t=c(t)),e?l((this.unsigned?e.rem_u:e.rem_s)(this.low,this.high,t.low,t.high),e.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return l(~this.low,~this.high,this.unsigned)},S.and=function(t){return r(t)||(t=c(t)),l(this.low&t.low,this.high&t.high,this.unsigned)},S.or=function(t){return r(t)||(t=c(t)),l(this.low|t.low,this.high|t.high,this.unsigned)},S.xor=function(t){return r(t)||(t=c(t)),l(this.low^t.low,this.high^t.high,this.unsigned)},S.shiftLeft=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):l(0,this.low<<t-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(t){return r(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?l(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):l(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(t){if(r(t)&&(t=t.toInt()),0==(t&=63))return this;var e=this.high;return t<32?l(this.low>>>t|e<<32-t,e>>>t,this.unsigned):l(32===t?e:e>>>t-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},S.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},S.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},n.fromBytes=function(t,e,r){return r?n.fromBytesLE(t,e):n.fromBytesBE(t,e)},n.fromBytesLE=function(t,e){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},n.fromBytesBE=function(t,e){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},377:(t,e,n)=>{var r=n(832),s=n(652),i=n(801),a=n(30),o=n(618),l=n(49),u=n(971);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},832:function(t,e,n){var r;!function(t,s,i){function a(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},49:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},652:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},618:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[i]=n^t,e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,i=-32;i<l;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=a,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},30:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},971:(t,e,n)=>{var r;!function(s,i){var a,o=this,l=256,u=i.pow(l,6),h=i.pow(2,52),c=2*h,d=255;function p(t,e,n){var r=[],d=b(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(s)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),x(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,x(s)]}}():t,3),r),p=new f(r),y=function(){for(var t=p.g(6),e=u,n=0;t<h;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=c;)t/=2,e/=2,n>>>=1;return(t+n)/e};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(i.random=t,e):t})(y,d,"global"in e?e.global:this==i,e.state)}function f(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+t[s%n]+(e=a[s])],a[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,a=r.S;t--;)e=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+e])+(a[i]=e)];return r.i=s,r.j=i,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function b(t,e){for(var n,r=t+"",s=0;s<r.length;)e[d&s]=d&(n^=19*e[d&s])+r.charCodeAt(s++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=p,b(i.random(),s),t.exports){t.exports=p;try{a=n(906)}catch(t){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}([],Math)},379:(t,e,n)=>{"use strict";var r,s=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),i=[];function a(t){for(var e=-1,n=0;n<i.length;n++)if(i[n].identifier===t){e=n;break}return e}function o(t,e){for(var n={},r=[],s=0;s<t.length;s++){var o=t[s],l=e.base?o[0]+e.base:o[0],u=n[l]||0,h="".concat(l," ").concat(u);n[l]=u+1;var c=a(h),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==c?(i[c].references++,i[c].updater(d)):i.push({identifier:h,updater:m(d,e),references:1}),r.push(h)}return r}function l(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var a=s(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var u,h=(u=[],function(t,e){return u[t]=e,u.filter(Boolean).join("\n")});function c(t,e,n,r){var s=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=h(e,s);else{var i=document.createTextNode(s),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}function d(t,e,n){var r=n.css,s=n.media,i=n.sourceMap;if(s?t.setAttribute("media",s):t.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var p=null,f=0;function m(t,e){var n,r,s;if(e.singleton){var i=f++;n=p||(p=l(e)),r=c.bind(null,n,i,!1),s=c.bind(null,n,i,!0)}else n=l(e),r=d.bind(null,n,e),s=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else s()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=o(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var s=a(n[r]);i[s].references--}for(var l=o(t,e),u=0;u<n.length;u++){var h=a(n[u]);0===i[h].references&&(i[h].updater(),i.splice(h,1))}n=l}}}},906:()=>{},993:()=>{},352:()=>{},589:()=>{},758:()=>{}},e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),n.p="",(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>gi,computeFlatOffset:()=>Ei,computeOutShape:()=>xi,getNormalizedAxes:()=>ki,isSliceContinous:()=>Ti,maskToAxes:()=>bi,parseSliceParams:()=>Ri,sliceInfo:()=>Ai,startForAxis:()=>Ni,startIndicesWithElidedDims:()=>Ii,stopForAxis:()=>$i,stopIndicesWithElidedDims:()=>Si,stridesForAxis:()=>Ci,stridesWithElidedDims:()=>yi});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>gh,computeOutShape:()=>mh,segOpComputeOptimalWindowSize:()=>fh});var r={};n.r(r),n.d(r,{ERF_A1:()=>_u,ERF_A2:()=>Ou,ERF_A3:()=>Lu,ERF_A4:()=>zu,ERF_A5:()=>Pu,ERF_P:()=>Mu,PARALLELIZE_THRESHOLD:()=>wu,SELU_SCALE:()=>Du,SELU_SCALEALPHA:()=>Fu,applyActivation:()=>dl,assertAndGetBroadcastShape:()=>pi,assertAxesAreInnerMostDims:()=>ho,assertParamsConsistent:()=>xu,assignToTypedArray:()=>Hu,axesAreInnerMostDims:()=>ao,calculateShapes:()=>Au,checkEinsumDimSizes:()=>Zu,checkPadOnDimRoundingMode:()=>ha,combineLocations:()=>oo,complexWithEvenIndex:()=>Wu,complexWithOddIndex:()=>Vu,computeConv2DInfo:()=>ta,computeConv3DInfo:()=>ea,computeDefaultPad:()=>na,computeDilation2DInfo:()=>Zi,computeOptimalWindowSize:()=>vu,computeOutAndReduceShapes:()=>lo,computeOutShape:()=>yu,computePool2DInfo:()=>Ji,computePool3DInfo:()=>Qi,convertConv2DDataFormat:()=>ua,decodeEinsumEquation:()=>Xu,eitherStridesOrDilationsAreOne:()=>la,expandShapeToKeepDim:()=>uo,exponent:()=>qu,exponents:()=>ju,fromStringArrayToUint8:()=>xh,fromUint8ToStringArray:()=>bh,getAxesPermutation:()=>co,getBroadcastDims:()=>ci,getComplexWithIndex:()=>Gu,getEinsumComputePath:()=>Ju,getEinsumPermutation:()=>Yu,getFusedBiasGradient:()=>cl,getFusedDyActivation:()=>hl,getImageCenter:()=>ku,getInnerMostAxes:()=>fo,getPermuted:()=>Su,getReductionAxes:()=>di,getReshaped:()=>Iu,getReshapedPermuted:()=>Cu,getSliceBeginCoords:()=>Nu,getSliceSize:()=>$u,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>nh,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>rh,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>sh,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>oh,getSparseReshapeInputOutputMismatchErrorMessage:()=>uh,getSparseReshapeInputOutputMultipleErrorMessage:()=>lh,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>ih,getSparseReshapeNegativeOutputDimErrorMessage:()=>ah,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ph,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>hh,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>ch,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>dh,getUndoAxesPermutation:()=>po,isIdentityPermutation:()=>Qu,log:()=>sr,mergeRealAndImagArrays:()=>Bu,prepareAndValidate:()=>Tu,prepareSplitSize:()=>eh,segment_util:()=>e,shouldFuse:()=>pl,slice_util:()=>t,splitRealAndImagArrays:()=>Uu,tupleValuesAreOne:()=>oa,upcastType:()=>Qr,validateInput:()=>Ru,validateUpdateShape:()=>Eu,warn:()=>rr});var s={};n.r(s),n.d(s,{addImpl:()=>Ty,bincountImpl:()=>ww,bincountReduceImpl:()=>vw,ceilImpl:()=>Sw,concatImpl:()=>Rw,equalImpl:()=>dv,expImpl:()=>Iv,expm1Impl:()=>Tv,floorImpl:()=>Hv,gatherNdImpl:()=>Qv,gatherV2Impl:()=>ek,greaterEqualImpl:()=>ak,greaterImpl:()=>rk,lessEqualImpl:()=>yk,lessImpl:()=>gk,linSpaceImpl:()=>kk,logImpl:()=>Sk,maxImpl:()=>Pk,maximumImpl:()=>Wk,minimumImpl:()=>Jk,multiplyImpl:()=>sv,negImpl:()=>lI,notEqualImpl:()=>gI,prodImpl:()=>EI,rangeImpl:()=>AI,rsqrtImpl:()=>VI,sigmoidImpl:()=>my,simpleAbsImpl:()=>Ly,sliceImpl:()=>gw,sparseFillEmptyRowsImpl:()=>uS,sparseReshapeImpl:()=>cS,sparseSegmentReductionImpl:()=>pS,sqrtImpl:()=>xS,squaredDifferenceImpl:()=>kS,stridedSliceImpl:()=>$S,stringNGramsImpl:()=>RS,stringSplitImpl:()=>DS,stringToHashBucketFastImpl:()=>_S,subImpl:()=>Mv,tileImpl:()=>BS,topKImpl:()=>VS,transposeImpl:()=>Gy,uniqueImpl:()=>XS});var i={};n.r(i);var a={};n.r(a);class o{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class l{refCount(t){return u("refCount")}incRef(t){return u("incRef")}timerAvailable(){return!0}time(t){return u("time")}read(t){return u("read")}readSync(t){return u("readSync")}readToGPU(t,e){return u("readToGPU")}numDataIds(){return u("numDataIds")}disposeData(t,e){return u("disposeData")}write(t,e,n){return u("write")}move(t,e,n,r,s){return u("move")}memory(){return u("memory")}floatPrecision(){return u("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return u("dispose")}}function u(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function h(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,p(t,e,n)}function c(t,e,n){return Math.max(t,Math.min(e,n))}function d(t){return t%2==0?t:t+1}function p(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function f(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function m(t,e,n=""){f(y(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function g(t){f(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function b(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||R(t)&&!n)for(let r=0;r<t.length;++r)b(t[r],e,n);else e.push(t);return e}function x(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function y(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function w(t){return t%1==0}function v(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function k(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function I(t,e=(t=>0),n){return new Promise(((r,s)=>{let i=0;const a=()=>{if(t())return void r();i++;const o=e(i);null!=n&&i>=n?s():setTimeout(a,o)};a()}))}function S(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function C(t,e){const n=e.length;return f((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),f(t.every((t=>w(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function N(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||s?null:C(e,t).sort();let a=0;for(let e=0;e<t.length;++e){if(null!=i){if(i[a]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==i[a]||i[a]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),i[a]<=e&&a++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function $(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function T(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function E(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function R(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function A(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function F(t){return"string"==typeof t||t instanceof String}function D(t){return"number"==typeof t}function M(t){return Array.isArray(t)?M(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":D(t)?"float32":F(t)?"string":"boolean"==typeof t?"bool":"float32"}function _(t){return!!(t&&t.constructor&&t.call&&t.apply)}function O(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function L(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function z(t,e,n,r=!1){const s=new Array;if(1===e.length){const i=e[0]*(r?2:1);for(let e=0;e<i;e++)s[e]=n[t+e]}else{const i=e[0],a=e.slice(1),o=a.reduce(((t,e)=>t*e))*(r?2:1);for(let e=0;e<i;e++)s[e]=z(t+e*o,a,n,r)}return s}function P(t,e,n=!1){if(0===t.length)return e[0];const r=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return z(0,t,e,n)}function B(t,e){const n=U(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function U(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function W(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return P(t,new Float32Array(n));if("int32"===e)return P(t,new Int32Array(n));if("bool"===e)return P(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function V(t){t.forEach((e=>{f(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function G(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function H(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function j(t){return t&&t.then&&"function"==typeof t.then}class q{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=K,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(j(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function K(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}function X(){return Z}let Y,Z=null;function J(){if(null==Y){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}Y=t}return Y}function Q(t,e){const n=function(){const t=J();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const tt="Abs",et="Acos",nt="Acosh",rt="Add",st="AddN",it="All",at="Any",ot="ArgMax",lt="ArgMin",ut="Asin",ht="Asinh",ct="Atan",dt="Atanh",pt="Atan2",ft="AvgPool",mt="AvgPoolGrad",gt="AvgPool3D",bt="AvgPool3DGrad",xt="BatchMatMul",yt="BatchToSpaceND",wt="Bincount",vt="BroadcastArgs",kt="Cast",It="Ceil",St="ClipByValue",Ct="Complex",Nt="ComplexAbs",$t="Concat",Tt="Conv2D",Et="Conv2DBackpropFilter",Rt="Conv2DBackpropInput",At="Conv3D",Ft="Conv3DBackpropFilterV2",Dt="Conv3DBackpropInputV2",Mt="Cos",_t="Cosh",Ot="Cumsum",Lt="CropAndResize",zt="DenseBincount",Pt="DepthToSpace",Bt="DepthwiseConv2dNative",Ut="DepthwiseConv2dNativeBackpropFilter",Wt="DepthwiseConv2dNativeBackpropInput",Vt="Diag",Gt="Dilation2D",Ht="Dilation2DBackpropInput",jt="Dilation2DBackpropFilter",qt="RealDiv",Kt="Einsum",Xt="Elu",Yt="EluGrad",Zt="Erf",Jt="Equal",Qt="Exp",te="ExpandDims",ee="Expm1",ne="FFT",re="Fill",se="FlipLeftRight",ie="Floor",ae="FloorDiv",oe="FusedBatchNorm",le="GatherV2",ue="GatherNd",he="Greater",ce="GreaterEqual",de="Identity",pe="IFFT",fe="Imag",me="IsFinite",ge="IsInf",be="IsNan",xe="LeakyRelu",ye="Less",we="LessEqual",ve="LinSpace",ke="Log",Ie="Log1p",Se="LogicalAnd",Ce="LogicalNot",Ne="LogicalOr",$e="LRN",Te="LRNGrad",Ee="Max",Re="Maximum",Ae="MaxPool",Fe="MaxPoolGrad",De="MaxPool3D",Me="MaxPool3DGrad",_e="MaxPoolWithArgmax",Oe="Mean",Le="Min",ze="Minimum",Pe="MirrorPad",Be="Mod",Ue="Multinomial",We="Multiply",Ve="Neg",Ge="NotEqual",He="NonMaxSuppressionV3",je="NonMaxSuppressionV4",qe="NonMaxSuppressionV5",Ke="OnesLike",Xe="OneHot",Ye="Pack",Ze="PadV2",Je="Pow",Qe="Prelu",tn="Prod",en="Range",nn="Real",rn="Reciprocal",sn="Relu",an="Reshape",on="ResizeNearestNeighbor",ln="ResizeNearestNeighborGrad",un="ResizeBilinear",hn="ResizeBilinearGrad",cn="Relu6",dn="Reverse",pn="Round",fn="Rsqrt",mn="ScatterNd",gn="Select",bn="Selu",xn="Slice",yn="Sin",wn="Sinh",vn="Sign",kn="Sigmoid",In="Softplus",Sn="Sqrt",Cn="Sum",Nn="SpaceToBatchND",$n="SplitV",Tn="Softmax",En="SparseFillEmptyRows",Rn="SparseReshape",An="SparseSegmentMean",Fn="SparseSegmentSum",Dn="SparseToDense",Mn="SquaredDifference",_n="Square",On="StridedSlice",Ln="StringNGrams",zn="StringSplit",Pn="StringToHashBucketFast",Bn="Sub",Un="Tan",Wn="Tanh",Vn="Tile",Gn="TopK",Hn="Transform",jn="Transpose",qn="Unique",Kn="Unpack",Xn="UnsortedSegmentSum",Yn="ZerosLike",Zn="Step",Jn="FromPixels",Qn="RotateWithOffset",tr="_FusedMatMul",er="FusedConv2D",nr="FusedDepthwiseConv2D";function rr(...t){X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(...t)}function sr(...t){X().getBool("IS_TEST")||X().getBool("PROD")||console.log(...t)}const ir=Q("kernelRegistry",(()=>new Map)),ar=Q("gradRegistry",(()=>new Map));function or(t,e){const n=dr(t,e);return ir.get(n)}function lr(t){return ar.get(t)}function ur(t){const e=ir.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===t&&n.push(a)}return n}function hr(t){const{kernelName:e,backendName:n}=t,r=dr(e,n);ir.has(r)&&rr(`The kernel '${e}' for backend '${n}' is already registered`),ir.set(r,t)}function cr(t){const{kernelName:e}=t;ar.has(e)&&X().getBool("DEBUG")&&rr(`Overriding the gradient for '${e}'`),ar.set(e,t)}function dr(t,e){return`${e}_${t}`}var pr=n(720);const fr=n.n(pr)()||pr;function mr(t){return fr.fromString(t,!0,16)}const gr=mr("c3a5c85c97cb3127"),br=mr("b492b66fbe98f273"),xr=mr("9ae16a3b2f90404f");function yr(t){return t.xor(t.shru(47))}function wr(t,e,n){const r=t.slice(e,e+n);return fr.fromBytes(Array.from(r),!0,!0)}function vr(t,e){return wr(t,e,8)}function kr(t,e){return wr(t,e,4)}function Ir(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function Sr(t,e,n=mr("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let s=e.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Cr(t,e,n,r){return function(t,e,n,r,s,i){s=s.add(t),i=Ir(i.add(s).add(r),21);const a=s;return s=(s=s.add(e)).add(n),i=i.add(Ir(s,44)),[s.add(r),i.add(a)]}(vr(t,e),vr(t,e+8),vr(t,e+16),vr(t,e+24),n,r)}function Nr(t,e=t.length){const n=fr.fromNumber(81,!0);if(e<=32)return e<=16?function(t,e=t.length){if(e>=8){const n=xr.add(2*e),r=vr(t,0).add(xr),s=vr(t,e-8);return Sr(Ir(s,37).mul(n).add(r),Ir(r,25).add(s).mul(n),n)}if(e>=4){const n=xr.add(2*e);return Sr(kr(t,0).shl(3).add(e),kr(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),r=e+(t[e-1]<<2);return yr(xr.mul(n).xor(gr.mul(r))).mul(xr)}return xr}(t,e):function(t,e=t.length){const n=xr.add(2*e),r=vr(t,0).mul(br),s=vr(t,8),i=vr(t,e-8).mul(n),a=vr(t,e-16).mul(xr);return Sr(Ir(r.add(s),43).add(Ir(i,30)).add(a),r.add(Ir(s.add(xr),18)).add(i),n)}(t,e);if(e<=64)return function(t,e=t.length){const n=xr.add(2*e),r=vr(t,0).mul(xr),s=vr(t,8),i=vr(t,e-8).mul(n),a=vr(t,e-16).mul(xr),o=Ir(r.add(s),43).add(Ir(i,30)).add(a),l=Sr(o,r.add(Ir(s.add(xr),18)).add(i),n),u=vr(t,16).mul(n),h=vr(t,24),c=o.add(vr(t,e-32)).mul(n),d=l.add(vr(t,e-24)).mul(n);return Sr(Ir(u.add(h),43).add(Ir(c,30)).add(d),u.add(Ir(h.add(r),18)).add(c),n)}(t,e);let r=n,s=n.mul(br).add(113),i=yr(s.mul(xr).add(113)).mul(xr),a=[fr.UZERO,fr.UZERO],o=[fr.UZERO,fr.UZERO];r=r.mul(xr).add(vr(t,0));let l=0;const u=64*(e-1>>6),h=u+(e-1&63)-63;do{r=Ir(r.add(s).add(a[0]).add(vr(t,l+8)),37).mul(br),s=Ir(s.add(a[1]).add(vr(t,l+48)),42).mul(br),r=r.xor(o[1]),s=s.add(a[0]).add(vr(t,l+40)),i=Ir(i.add(o[0]),33).mul(br),a=Cr(t,l,a[1].mul(br),r.add(o[0])),o=Cr(t,l+32,i.add(o[1]),s.add(vr(t,l+16))),[i,r]=[r,i],l+=64}while(l!==u);const c=br.add(i.and(255).shl(1));return l=h,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=Ir(r.add(s).add(a[0]).add(vr(t,l+8)),37).mul(c),s=Ir(s.add(a[1]).add(vr(t,l+48)),42).mul(c),r=r.xor(o[1].mul(9)),s=s.add(a[0].mul(9).add(vr(t,l+40))),i=Ir(i.add(o[0]),33).mul(c),a=Cr(t,l,a[1].mul(c),r.add(o[0])),o=Cr(t,l+32,i.add(o[1]),s.add(vr(t,l+16))),[i,r]=[r,i],Sr(Sr(a[0],o[0],c).add(yr(s).mul(gr)).add(i),Sr(a[1],o[1],c).add(r),c)}function $r(t,e){return"string"===e?Rr(t):Tr([t],e)}function Tr(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=b(t)),X().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function Er(){return X().platform.now()}function Rr(t,e="utf-8"){return e=e||"utf-8",X().platform.encode(t,e)}function Ar(t,e="utf-8"){return e=e||"utf-8",X().platform.decode(t,e)}class Fr{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Mr)}profileKernel(t,e,n){let r;const s=()=>{r=n()};let i;const a=Er();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const t of r)t.dataSync();i=Promise.resolve({kernelMs:Er()-a})}if(X().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{Dr(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:i.then((t=>t.kernelMs)),extraInfo:i.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:i}=t;n.forEach((t=>{Promise.all([t.data(),r,i]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function Dr(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Mr{logKernelProfile(t,e,n,r,s,i){const a="number"==typeof r?k(`${r}ms`,9):r.error,o=k(t,25),l=e.rank,u=e.size,h=k(e.shape.toString(),14);let c="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;c+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${h}\t%c${u}\t%c${c}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function _r(t,e,n,r){const s=L(e),i=function(t,e,n,r){const s=x(e),i=r[r.length-1],a=new Array(i).fill(0),o=e.length,l="complex64"===n?Pr(t):t;if(o>1)for(let t=0;t<s/i;t++){const e=t*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],Or(l[e+t],0,n).length)}return a}(t,e,n,s),a=e.length,o=zr(t,e,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function Or(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:F(t)?`'${t}'`:"bool"===n?Lr(t):parseFloat(t.toFixed(7)).toString(),k(r,e)}function Lr(t){return 0===t?"false":"true"}function zr(t,e,n,r,s,i=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[Or(Pr(t)[0],0,n)]:"bool"===n?[Lr(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*a;let r=Array.from(t.slice(0,e)),i=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(r=Pr(r),i=Pr(i)),["["+r.map(((t,e)=>Or(t,s[e],n))).join(", ")+", ..., "+i.map(((t,e)=>Or(t,s[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Pr(t):Array.from(t)).map(((t,e)=>Or(t,s[e],n))).join(", ")+"]"]}const u=e.slice(1),h=r.slice(1),c=r[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const r=e*c,i=r+c;d.push(...zr(t.slice(r,i),u,n,h,s,!1))}d.push("...");for(let e=o-3;e<o;e++){const r=e*c,i=r+c;d.push(...zr(t.slice(r,i),u,n,h,s,e===o-1))}}else for(let e=0;e<o;e++){const r=e*c,i=r+c;d.push(...zr(t.slice(r,i),u,n,h,s,e===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Pr(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Br{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=x(t),null!=n){const t=n.length;f(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||T(e,this.size),this.strides=L(t)}set(t,...e){0===e.length&&(e=[0]),f(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Ur().makeTensor(this.values,this.shape,this.dtype)}}let Ur=null,Wr=null,Vr=null;class Gr{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=x(t),this.strides=L(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Wr.buffer(this.shape,this.dtype,t)}bufferSync(){return Wr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return P(this.shape,t,"complex64"===this.dtype)}arraySync(){return P(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=Ur().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>Ar(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Ur().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Ur().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>Ar(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Ur().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Ur().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Wr.print(this,t)}clone(){return this.throwIfDisposed(),Wr.clone(this)}toString(t=!1){return _r(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Wr.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Ur().makeVariable(this,t,e,n)}}function Hr(){return Q("Tensor",(()=>Gr))}Object.defineProperty(Gr,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),Hr();class jr extends Gr{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!y(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Ur().disposeTensor(this),this.dataId=t.dataId,Ur().incRef(this,null)}dispose(){Ur().disposeVariable(this),this.isDisposedInternal=!0}}var qr,Kr,Xr,Yr,Zr;Object.defineProperty(jr,Symbol.hasInstance,{value:t=>t instanceof Gr&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(qr||(qr={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Kr||(Kr={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Xr||(Xr={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Yr||(Yr={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Zr||(Zr={}));const Jr={float32:Yr,int32:Kr,bool:Xr,complex64:Zr};function Qr(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Jr[t][e]}function ts(t){return Qr(t,"int32")}function es(t,e){if(t.dtype===e.dtype)return[t,e];const n=Qr(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function ns(t,e){return e.some((e=>e.id===t.id))}function rs(t){const e=[];return ss(t,e,new Set),e}function ss(t,e,n){if(null==t)return;if(t instanceof Gr)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),ss(r,e,n))}}function is(t){return null!=t.kernelName}class as{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class os{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new as}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(rr(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Fr(this.backendInstance),!0}setupRegisteredKernels(){ur(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){ur(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof l||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,rr(`Initialization of backend ${t} failed`),rr(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return rr(`Initialization of backend ${t} failed`),rr(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e),i=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return os.nextTensorId++}nextVariableId(){return os.nextVariableId++}clone(t){const e=us.runKernel(de,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t};return us.runKernel(kt,e,{dtype:"float32"})}})),[],{}),e}runKernel(t,e,n){if(null==this.backendName&&this.backend,null==or(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-e-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=is(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(is(t)){const{kernelName:e,inputs:s,attrs:i}=t;null==this.backendName&&this.backend;const l=or(e,this.backendName);f(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),a=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,a);const u=a.map((t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:r}=t;return this.makeTensorFromDataId(e,n,r)}));if(r){const t=this.getTensorsForGradient(e,s,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,s=t=>{r&&(n=t.map((t=>this.keep(this.clone(t)))))};a=()=>{const t=this.backend.numDataIds();o=this.tidy((()=>e(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:h}=t,c=is(t)?null:t.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs):e=a()})),r&&this.addTapeNode(l,u,e,c,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((t=>null!=u[t]?u[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=lr(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(f(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(e).map((t=>e[t]))):i=t.map((t=>e[t]));const a=n.filter(((t,e)=>s[e]));return i.concat(a)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&F(t[0])&&(s=t.map((t=>Rr(t))));const i=r.write(s,e,n),a=new Gr(e,n,i,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,r){const s=new Gr(e,n=n||"float32",t,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new jr(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*A(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof jr||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*A(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=lr(t);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=U(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=rs(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(f(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));f(s instanceof Gr,(()=>"The result y returned by f() must be a tensor."));const i=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const i=t[n],a=i.inputs;for(const t in a){const n=a[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){i.outputs.forEach((t=>r[t.id]=!0)),o=!0,s[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(i[n.outputs[t].id]){for(const t in r)i[r[t].id]=!0,a[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&a[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=B(x(t),"float32");return us.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const i=e[s],a=[];if(i.outputs.forEach((e=>{const n=t[e.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const e in i.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const a=i.inputs[e];if(!y(s.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==t[a.id])t[a.id]=s;else{const e=t[a.id];t[a.id]=r(e,s),e.dispose()}}}}(t,i,(t=>this.tidy(t)),hs);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return f(_(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;f(e.every((t=>t instanceof Gr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc({forwardFunc:(r,s)=>(n=t(...e,s),f(n.value instanceof Gr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),f(_(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,r)=>{const s=n.gradFunc(t,r),i=Array.isArray(s)?s:[s];f(i.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),f(i.every((t=>t instanceof Gr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((t,e)=>{a[e]=()=>t})),a},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Er(),n=await this.backend.time(t);return n.wallMs=Er()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new as;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ls(){const t=J();if(null==t._tfengine){const e=new q(t);t._tfengine=new os(e)}var e;return e=t._tfengine.ENV,Z=e,Ur=()=>t._tfengine,t._tfengine}os.nextTensorId=0,os.nextVariableId=0;const us=ls();function hs(t,e){const n={a:t,b:e};return us.runKernel(rt,n)}function cs(t){if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function ds(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const ps=X();function fs(t,e){let n=t;if(R(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||R(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&X().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ms(t,r,[]),r}function ms(t,e,n){if(n=n||[],!Array.isArray(t)&&!R(t))return void f(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));f(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),f(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)ms(t[e],r,n.concat(e))}function gs(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function bs(t,e,n,r="numeric"){if(t instanceof Gr)return gs(r,t.dtype,e,n),t;let s=M(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),gs(r,s,e,n),null==t||!R(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=fs(t,s);R(t)||Array.isArray(t)||(t=[t]);const a="string"!==s?Tr(t,s):b(t,[],!0);return us.makeTensor(a,i,s)}function xs(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,s)=>bs(t,`${e}[${s}]`,n,r)))}function ys(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{us.startScope(n);try{const e=r(...t);return j(e)&&console.error("Cannot return a Promise inside of tidy."),us.endScope(e),e}catch(t){throw us.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}ps.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ps.registerFlag("IS_BROWSER",(()=>ds())),ps.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ps.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ps.registerFlag("PROD",(()=>!1)),ps.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ps.getBool("DEBUG"))),ps.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ps.registerFlag("IS_TEST",(()=>!1)),ps.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ps.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const ws=ys({complex_:function(t,e){const n=bs(t,"real","complex"),r=bs(e,"imag","complex");m(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return us.runKernel(Ct,s)}});function vs(t,e,n,r){if(null==r&&(r=M(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!R(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){V(e);const t=x(e),r=x(n);f(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==x(e.slice(t));f(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return R(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?Tr(t,r):b(t,[],!0),us.makeTensor(t,e,r)}function ks(t,e,n){return vs(t,e,fs(t,n),n)}async function Is(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let i=0;i<s.length;++i){const a=s[i],o=Array.isArray(t)?t[i].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:Ss(await Promise.all(r)),specs:n}}function Ss(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const Cs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ns(t){return Cs?Buffer.byteLength(t):new Blob([t]).size}function $s(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function Ts(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}function Es(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Ns(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Ns(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}class Rs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Rs.instance&&(Rs.instance=new Rs),Rs.instance}static registerSaveRouter(t){Rs.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Rs.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Rs.getHandlers(t,"save")}static getLoadHandlers(t,e){return Rs.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Rs.getInstance().loadRouters:Rs.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const As="tensorflowjs",Fs="models_store",Ds="model_info_store";function Ms(){if(!X().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function _s(t){const e=t.result;e.createObjectStore(Fs,{keyPath:"modelPath"}),e.createObjectStore(Ds,{keyPath:"modelPath"})}class Os{constructor(t){if(this.indexedDB=Ms(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(As,1);r.onupgradeneeded=()=>_s(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(Fs,"readonly"),r=e.objectStore(Fs).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=Es(e),i=s.transaction(Ds,"readwrite");let a=i.objectStore(Ds);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(Fs,"readwrite");const o=l.objectStore(Fs).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{a=i.objectStore(Ds);const e=a.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}Os.URL_SCHEME="indexeddb://";const Ls=t=>{return X().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Os.URL_SCHEME)?(e=t.slice(Os.URL_SCHEME.length),new Os(e)):null;var e};Rs.registerSaveRouter(Ls),Rs.registerLoadRouter(Ls);class zs{constructor(){this.indexedDB=Ms()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(As,1);n.onupgradeneeded=()=>_s(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Ds,"readonly"),i=s.objectStore(Ds).getAll();i.onsuccess=()=>{const e={};for(const t of i.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},i.onerror=t=>(r.close(),e(i.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Os.URL_SCHEME)?e.slice(Os.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(As,1);r.onupgradeneeded=()=>_s(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(Ds,"readwrite"),a=i.objectStore(Ds),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=a.delete(t),i=()=>{l=s.transaction(Fs,"readwrite");const r=l.objectStore(Fs).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=i,r.onerror=t=>(i(),s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const Ps="/",Bs="tensorflowjs_models",Us="info",Ws="model_topology",Vs="weight_specs",Gs="weight_data",Hs="model_metadata";function js(t){return{info:[Bs,t,Us].join(Ps),topology:[Bs,t,Ws].join(Ps),weightSpecs:[Bs,t,Vs].join(Ps),weightData:[Bs,t,Gs].join(Ps),modelMetadata:[Bs,t,Hs].join(Ps)}}function qs(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function Ks(t){const e=t.split(Ps);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Ps)}class Xs{constructor(t){if(!X().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=js(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Es(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(Cs)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData));const s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(t){throw qs(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(e.trainingConfig=t.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(Cs){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(i),e}}Xs.URL_SCHEME="localstorage://";const Ys=t=>{return X().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Xs.URL_SCHEME)?(e=t.slice(Xs.URL_SCHEME.length),new Xs(e)):null;var e};Rs.registerSaveRouter(Ys),Rs.registerLoadRouter(Ys);class Zs{constructor(){f(X().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),f("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Bs+Ps,n=Ps+Us;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[Ks(s)]=JSON.parse(this.LS.getItem(s)))}return t}async removeModel(t){var e;const n=js(t=(e=t).startsWith(Xs.URL_SCHEME)?e.slice(Xs.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return qs(n),r}}class Js{constructor(){this.managers={}}static getInstance(){return null==Js.instance&&(Js.instance=new Js),Js.instance}static registerManager(t,e){f(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),f(t.length>0,(()=>"scheme must not be an empty string."));const n=Js.getInstance();f(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Qs{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(X().get("IS_BROWSER")){X().setPlatform("browser",new Qs);try{Js.registerManager(Xs.URL_SCHEME,new Zs)}catch(t){}try{Js.registerManager(Os.URL_SCHEME,new zs)}catch(t){}}let ti;function ei(t,e="float32",n){return e=e||"float32",V(t),new Br(t,e,n)}X().get("IS_NODE")&&X().setPlatform("node",new class{constructor(){this.util=n(758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=X().global.fetch?X().global.fetch(t,e):(null==ti&&(ti=n(352)),ti(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const ni=ys({cast_:function(t,e){const n=bs(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return us.runKernel(kt,r,s)}}),ri=ys({clone_:function(t){const e={x:bs(t,"x","clone","string_or_numeric")};return us.runKernel(de,e)}});function si(t){return new Promise((t=>setTimeout(t))).then(t)}ls(),Wr={buffer:ei,cast:ni,clone:ri,print:function(t,e=!1){console.log(t.toString(e))}};class ii{constructor(t){if(!X().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(ii.URL_SCHEME)&&(t=t.slice(ii.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Ts(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await si((()=>s.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await si((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Es(t)}}}}function ai(t,e,n,r){!function(t){f(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){f(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),f(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),f(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((i=>(i.then((i=>{const a=n+ ++s/t.length*(r-n);return e(a),i})),i))))}async function oi(t,e){null==e&&(e={});const n=null==e.fetchFunc?X().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await ai(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await ai(s,e.onProgress,.5,1)}ii.URL_SCHEME="downloads://",Rs.registerSaveRouter((t=>X().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ii.URL_SCHEME)?function(t="model"){return new ii(t)}(t.slice(ii.URL_SCHEME.length)):null));class li{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(f("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=X().platform.fetch,f(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&f(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=Ts(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);e.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Es(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),null!=t.weightsManifest){const[r,s]=await e(t.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),n}(e,(t=>this.loadWeights(t)))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),s=this.weightPathPrefix||n,i=[];for(const e of t)i.push(...e.weights);const a=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):a.push(s+t+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[i,$s(await oi(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ui(t){return null!=t.match(li.URL_SCHEME_REGEX)}li.URL_SCHEME_REGEX=/^https?:\/\//;const hi=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>ui(t))):ui(t),n)return function(t,e){return new li(t,e)}(t,e)}return null};function ci(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=t[i]||1;(e[e.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}function di(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],i=e.length-r-1,a=e[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function pi(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let i=e[e.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}let fi;Rs.registerSaveRouter(hi),Rs.registerLoadRouter(hi);const mi=ys({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,i=!1,a=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)i=!0;else if(null!=t.getContext)a=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);o=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=or(Jn,us.backendName)){const n={pixels:t},r={numChannels:e};return us.runKernel(Jn,n,r)}const[l,u]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let h,c;if(a)h=t.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)h=t.data;else if(i||s||o){if(null==fi)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");fi=new OffscreenCanvas(1,1).getContext("2d")}else fi=document.createElement("canvas").getContext("2d");fi.canvas.width=l,fi.canvas.height=u,fi.drawImage(t,0,0,l,u),h=fi.getImageData(0,0,l,u).data}if(4===e)c=new Int32Array(h);else{const t=l*u;c=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)c[n*e+t]=h[4*n+t]}return function(t,e,n){if(g(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=fs(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return vs(t,e,r,n)}(c,[u,l,e],"int32")}});function gi(t,e,n){const r=t.shape.length;f(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),f(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)f(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function bi(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function xi(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function yi(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}function wi(t,e,n){return n<=t?n:n-(e-1)}function vi(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function ki(t,e,n,r,s,i,a,o,l){const u=t.length;let h=new Array(u),c=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;h=Ii(a,l,u,r,t),c=Si(o,l,u,s,t),d=yi(i,l,u,t)}else for(let e=0;e<u;e++)h[e]=Ni(a,r,i,t,e,l),c[e]=$i(o,s,i,t,e,l),d[e]=Ci(i,e,l);return{begin:h,end:c,strides:d}}function Ii(t,e,n,r,s){const i=[...s],a=vi(n,e);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=0;else{const a=wi(e,n,s);let o=r[a];t&1<<a&&(o=0),i[s]=o}return i}function Si(t,e,n,r,s){const i=[...s],a=vi(n,e);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=wi(e,n,s);let o=r[a];t&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let t=0;t<i.length;t++){const e=s[t];i[t]<0&&(i[t]+=e),i[t]=c(0,i[t],s[t])}return i}function Ci(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Ni(t,e,n,r,s,i){let a=e[s];const o=n[s]||1;(t&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=c(0,a,l-1),a}function $i(t,e,n,r,s,i){let a=e[s];const o=n[s]||1;(t&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=o>0?c(0,a,l):c(-1,a,l-1),a}function Ti(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Ei(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Ri(t,e,n){let r;const s=t.shape.length;let i;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{f(-1!==t,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((e,n)=>e>=0?e:(f(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,i]}function Ai(t,e,n,r,s,i,a,o,l){let u;if(null==r?(u=new Array(e.length),u.fill(1)):u=r,null!=a&&0!=(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const c={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let t=0;t<c.dims;t++)h&&0!=(1<<t&o)&&c.numAddAxisAfterEllipsis++,1<<t&a&&(h=!0);h||(c.ellipsisMask|=1<<c.dims,c.dims++);const d={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<s;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(-2),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);null!=t.begin&&(e.begin[n]=t.begin[r]),null!=t.end&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(-1),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}}(c,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let e=0;e<t.length;++e){if(0===d.strides[e])throw Error(`strides[${e}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<e),r=t[e];if(-1===r){g.push(n?1:-1);continue}const s=[d.beginMask&1<<e,d.endMask&1<<e],i=[d.strides[e]>0?0:-1,d.strides[e]>0?r:r-1];if(n&&d.strides[e]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[e];const a=!!(d.beginMask&1<<e&&d.endMask&1<<e);if(d.beginValid&&d.endValid){if(n){const t=d.begin[e]<0?r+d.begin[e]:d.begin[e];if(d.begin[e]=t,d.end[e]=d.begin[e]+1,t<0||t>=r)throw Error(`slice index ${d.begin[e]} of dimension ${e} out of bounds.`)}else d.begin[e]=Fi(d.begin[e],0,d.strides[e],r,s,i),d.end[e]=Fi(d.end[e],1,d.strides[e],r,s,i);const t=1===d.strides[e]&&0===d.begin[e]&&d.end[e]===r;p=p&&t,f=f&&(0===e&&1===d.strides[e]||t)}else p=p&&1===d.strides[e]&&a,f=f&&(0===e&&1===d.strides[e]||a);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[e]-d.begin[e],l=!0):n?(o=1,l=!0):a&&r>=0&&(o=d.strides[e]<0?-r:r,l=!0),l){let t;t=0===o||o<0!=d.strides[e]<0?0:Math.trunc(o/d.strides[e])+(o%d.strides[e]!=0?1:0),g.push(t)}else g.push(-1)}for(let t=0;t<d.finalShapeGatherIndices.length;++t){const e=d.finalShapeGatherIndices[t];e>=0?b.push(g[e]):-2===e&&b.push(1)}return{finalShapeSparse:b.filter(((t,e)=>-2!==d.finalShapeGatherIndices[e])),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Fi(t,e,n,r,s,i){if(s[e])return n>0?i[e]:i[e+1&1];{const e=t<0?r+t:t;return e<i[0]?i[0]:e>i[1]?i[1]:e}}class Di{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Mi{constructor(){this.classNameMap={}}static getMap(){return null==Mi.instance&&(Mi.instance=new Mi),Mi.instance}static register(t){Mi.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function _i(t){f(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),f("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),f(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Mi.register(t)}function Oi(){return us}function Li(){return us.memory()}function zi(t,e){return us.tidy(t,e)}function Pi(t){rs(t).forEach((t=>t.dispose()))}function Bi(t){return us.keep(t)}function Ui(t,e,n=1){return us.registerBackend(t,e,n)}function Wi(){return us.backend}function Vi(t){return us.customGrad(t)}function Gi(t,e){if((R(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&R(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return vs(t,[],[],e)}Vr=function(t){X().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Hi extends Di{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return Pi(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){f(_(t),(()=>"The f passed in variableGrads(f) must be a function")),f(null==e||Array.isArray(e)&&e.every((t=>t instanceof jr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in us.registeredVariables)e.push(us.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;f((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:i,grads:a}=us.gradients(t,e,null,!0);f(a.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),f(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=a[e]&&(o[t.name]=a[e])})),null!=r&&r.forEach((t=>o[t.name]=null)),{value:i,grads:o}}(t,e)}dispose(){null!=this.iterations_&&Pi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Gi(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Hi,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const ji=ys({abs_:function(t){const e=bs(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return us.runKernel(Nt,t)}{const t={x:e};return us.runKernel(tt,t)}}}),qi=ys({add_:function(t,e){let n=bs(t,"a","add"),r=bs(e,"b","add");[n,r]=es(n,r);const s={a:n,b:r};return us.runKernel(rt,s)}}),Ki=ys({all_:function(t,e=null,n=!1){const r={x:bs(t,"x","all","bool")},s={axis:e,keepDims:n};return us.runKernel(it,r,s)}}),Xi=ys({any_:function(t,e=null,n=!1){const r={x:bs(t,"x","any","bool")},s={axis:e,keepDims:n};return us.runKernel(at,r,s)}}),Yi=ys({argMax_:function(t,e=0){const n={x:bs(t,"x","argMax")},r={axis:e};return us.runKernel(ot,n,r)}});function Zi(t,e,n,r,s="NHWC",i){return ta(t,[...e,t[3]],n,i,r,null,null,ua(s))}function Ji(t,e,n,r,s,i,a="channelsLast"){const[o,l]=ra(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,t[1],t[1]]}return ta(t,u,n,r,s,i,!1,a)}function Qi(t,e,n,r,s,i,a="NDHWC"){const[o,l,u]=sa(e);let h,c;if("NDHWC"===a)c="channelsLast",h=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);c="channelsFirst",h=[o,l,u,t[1],t[1]]}return ea(t,h,n,r,s,!1,c,i)}function ta(t,e,n,r,s,i,a=!1,o="channelsLast"){let[l,u,h,c]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,c]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,c,u,h]=t}const[d,p,,f]=e,[m,g]=ra(n),[b,x]=ra(r),y=ia(d,b),w=ia(p,x),{padInfo:v,outHeight:k,outWidth:I}=function(t,e,n,r,s,i,a,o,l){let u,h,c;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=na(t,e,n));const i=t[1];return[aa((t[0]-e+2*r)/n+1,s),aa((i-e+2*r)/n+1,s)]}([e,n],i,r,t,o);h=s[0],c=s[1]}else if("same"===t){h=Math.ceil(e/r),c=Math.ceil(n/s);const t=Math.max(0,(h-1)*r+i-e),o=Math.max(0,(c-1)*s+a-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-i+1)/r),c=Math.ceil((n-a+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},h=aa((e-i+d+p)/r+1,o),c=aa((n-a+f+m)/s+1,o)}}return{padInfo:u,outHeight:h,outWidth:c}}(s,u,h,m,g,y,w,i,o),S=a?f*c:f;let C;return"channelsFirst"===o?C=[l,S,k,I]:"channelsLast"===o&&(C=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:c,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:t,outShape:C,filterShape:e}}function ea(t,e,n,r,s,i=!1,a="channelsLast",o){let[l,u,h,c,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,h,c,d]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,h,c]=t}const[p,f,m,,g]=e,[b,x,y]=sa(n),[w,v,k]=sa(r),I=ia(p,w),S=ia(f,v),C=ia(m,k),{padInfo:N,outDepth:$,outHeight:T,outWidth:E}=function(t,e,n,r,s,i,a,o,l,u,h){let c,d,p,f;if("number"==typeof t){c={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,s,i){null==s&&(s=na(t,e,r));const a=t[1],o=t[2];return[aa((t[0]-e+2*s)/r+1,i),aa((a-e+2*s)/r+1,i),aa((o-e+2*s)/r+1,i),1]}([e,n,r,1],o,0,s,t,h);d=i[0],p=i[1],f=i[2]}else if("same"===t){d=Math.ceil(e/s),p=Math.ceil(n/i),f=Math.ceil(r/a);const t=(d-1)*s+o-e,h=(p-1)*i+l-n,m=(f-1)*a+u-r,g=Math.floor(t/2),b=t-g,x=Math.floor(h/2),y=h-x,w=Math.floor(m/2);c={top:x,bottom:y,left:w,right:m-w,front:g,back:b,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/s),p=Math.ceil((n-l+1)/i),f=Math.ceil((r-u+1)/a)}return{padInfo:c,outDepth:d,outHeight:p,outWidth:f}}(s,u,h,c,b,x,y,I,S,C,o),R=i?g*d:g;let A;return"channelsFirst"===a?A=[l,R,$,T,E]:"channelsLast"===a&&(A=[l,$,T,E,R]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:h,inWidth:c,inChannels:d,outDepth:$,outHeight:T,outWidth:E,outChannels:R,padInfo:N,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:t,outShape:A,filterShape:e}}function na(t,e,n,r=1){const s=ia(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function ra(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function sa(t){return"number"==typeof t?[t,t,t]:t}function ia(t,e){return e<=1?t:t+(t-1)*(e-1)}function aa(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function oa(t){const[e,n,r]=ra(t);return 1===e&&1===n&&1===r}function la(t,e){return oa(t)||oa(e)}function ua(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function ha(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)f(w(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`));else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach((e=>{e.forEach((e=>{f(w(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`))}))}))}}}const ca=ys({reshape_:function(t,e){const n={x:bs(t,"x","reshape","string_or_numeric")},r={shape:e};return us.runKernel(an,n,r)}}),da=ys({avgPool_:function(t,e,n,r,s){const i=bs(t,"x","avgPool","float32");f(la(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=ca(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),ha("avgPool",r,s);const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let h=us.runKernel(ft,l,u);return h=ni(h,i.dtype),o?ca(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),pa=ys({avgPool3d_:function(t,e,n,r,s,i="NDHWC"){const a=bs(t,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=ca(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),f(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),f("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),ha("avgPool3d",r,s);const u={x:o},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i};let c=us.runKernel(gt,u,h);return c=ni(c,o.dtype),l?ca(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),fa=ys({batchNorm_:function(t,e,n,r,s,i){null==i&&(i=.001);const a=bs(t,"x","batchNorm"),o=bs(e,"mean","batchNorm"),l=bs(n,"variance","batchNorm");let u,h;null!=s&&(u=bs(s,"scale","batchNorm")),null!=r&&(h=bs(r,"offset","batchNorm")),f(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==h||o.rank===h.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const c=function(t){let e;return e=0===t.rank||1===t.rank?ca(t,[1,1,1,t.size]):2===t.rank?ca(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?ca(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(a),d={x:c,scale:u,offset:h,mean:o,variance:l},p={varianceEpsilon:i},m=us.runKernel(oe,d,p);return ca(m,a.shape)}}),ma=ys({batchNorm2d_:function(t,e,n,r,s,i){const a=bs(t,"x","batchNorm"),o=bs(e,"mean","batchNorm"),l=bs(n,"variance","batchNorm");let u,h;return null!=s&&(u=bs(s,"scale","batchNorm")),null!=r&&(h=bs(r,"offset","batchNorm")),f(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),f(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),f(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&f(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=h&&f(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),fa(a,o,l,h,u,i)}}),ga=ys({batchNorm3d_:function(t,e,n,r,s,i){const a=bs(t,"x","batchNorm"),o=bs(e,"mean","batchNorm"),l=bs(n,"variance","batchNorm");let u,h;return null!=s&&(u=bs(s,"scale","batchNorm")),null!=r&&(h=bs(r,"offset","batchNorm")),f(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),f(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),f(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&f(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=h&&f(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),fa(a,o,l,h,u,i)}}),ba=ys({batchNorm4d_:function(t,e,n,r,s,i){const a=bs(t,"x","batchNorm"),o=bs(e,"mean","batchNorm"),l=bs(n,"variance","batchNorm");let u,h;return null!=s&&(u=bs(s,"scale","batchNorm")),null!=r&&(h=bs(r,"offset","batchNorm")),f(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),f(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),f(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&f(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=h&&f(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),fa(a,o,l,h,u,i)}}),xa=ys({clipByValue_:function(t,e,n){const r=bs(t,"x","clipByValue");f(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},i={clipValueMin:e,clipValueMax:n};return us.runKernel(St,s,i)}}),ya=ys({concat_:function(t,e=0){f(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=xs(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return ri(n[0]);const r=n,s={axis:e};return us.runKernel($t,r,s)}}),wa=ys({concat1d_:function(t){return ya(t,0)}}),va=ys({concat2d_:function(t,e){return ya(t,e)}}),ka=ys({concat3d_:function(t,e){return ya(t,e)}}),Ia=ys({concat4d_:function(t,e){return ya(t,e)}}),Sa=ys({conv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=bs(t,"x","conv2d","float32"),l=bs(e,"filter","conv2d","float32");let u=o,h=!1;3===o.rank&&(h=!0,u=ca(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),f(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),ha("conv2d",r,a);const c="NHWC"===s?u.shape[3]:u.shape[1];f(c===l.shape[2],(()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${l.shape[2]}.`)),f(la(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},m=us.runKernel(Tt,d,p);return h?ca(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Ca=ys({conv1d_:function(t,e,n,r,s="NWC",i=1,a){const o=bs(t,"x","conv1d"),l=bs(e,"filter","conv1d");let u=o,h=!1;2===o.rank&&(h=!0,u=ca(o,[1,o.shape[0],o.shape[1]])),f(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),f(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),ha("conv1d",r,a),f(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),f(la(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),f("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const c=ca(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=ca(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Sa(d,c,[1,n],r,"NHWC",[1,i],a);return ca(p,h?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Na=ys({conv2DBackpropInput_:function(t,e,n,r,s,i="NHWC",a){f(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=ca(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),f(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),f(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),f(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===i?o[3]:o[1],c="NHWC"===i?l.shape[3]:l.shape[1];f(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),f(c===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[3]}.`)),ha("conv2dDerInput",s,a);const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},m=us.runKernel(Rt,d,p);return u?ca(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),$a=ys({conv2dTranspose_:function(t,e,n,r,s,i){const a=bs(t,"x","conv2dTranspose"),o=bs(e,"filter","conv2dTranspose");return Na(n,a,o,r,s,"NHWC",i)}}),Ta=ys({conv3d_:function(t,e,n,r,s="NDHWC",i=[1,1,1]){const a=bs(t,"x","conv3d"),o=bs(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=ca(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),f(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),f(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),f(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),f(la(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),f("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const h={x:l,filter:o},c={strides:n,pad:r,dataFormat:s,dilations:i},d=us.runKernel(At,h,c);return u?ca(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ea=ys({conv3DBackpropInput_:function(t,e,n,r,s){f(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,a=e,o=!1;4===e.rank&&(o=!0,a=ca(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];f(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),f(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),f(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),f(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),f(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const h={dy:a,filter:n},c={pad:s,strides:r,inputShape:i},d=us.runKernel(Dt,h,c);return o?ca(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ra=ys({conv3dTranspose_:function(t,e,n,r,s){const i=bs(t,"x","conv3dTranspose"),a=bs(e,"filter","conv3dTranspose");return Ea(n,i,a,r,s)}}),Aa=ys({depthwiseConv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=bs(t,"x","depthwiseConv2d","float32"),l=bs(e,"filter","depthwiseConv2d","float32");let u=o,h=!1;3===o.rank&&(h=!0,u=ca(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),f(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),f(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),ha("depthwiseConv2d",r,a);const c={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},p=us.runKernel(Bt,c,d);return h?ca(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Fa=ys({floorDiv_:function(t,e){let n=bs(t,"a","floorDiv"),r=bs(e,"b","floorDiv");[n,r]=es(n,r);const s={a:n,b:r};return us.runKernel(ae,s)}}),Da=ys({div_:function(t,e){let n=bs(t,"a","div"),r=bs(e,"b","div");if([n,r]=es(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Fa(n,r);const s={a:n,b:r};return us.runKernel(qt,s,{})}}),Ma=ys({elu_:function(t){const e={x:bs(t,"x","elu","float32")};return us.runKernel(Xt,e)}}),_a=ys({equal_:function(t,e){let n=bs(t,"a","equal","string_or_numeric"),r=bs(e,"b","equal","string_or_numeric");[n,r]=es(n,r),pi(n.shape,r.shape);const s={a:n,b:r};return us.runKernel(Jt,s)}}),Oa=ys({exp_:function(t){const e={x:bs(t,"x","exp")};return us.runKernel(Qt,e)}}),La=ys({expandDims_:function(t,e=0){const n=bs(t,"x","expandDims","string_or_numeric");f(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:e};return us.runKernel(te,r,s)}}),za=ys({tile_:function(t,e){const n=bs(t,"x","tile","string_or_numeric");f(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r={x:n},s={reps:e};return us.runKernel(Vn,r,s)}}),Pa=ys({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=ei([t,e],r),i=t<=e?t:e;for(let t=0;t<i;++t)s.set(1,t,t);const a=ca(s.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return za(La(a,0),[n[0],1,1]);if(2===n.length)return za(La(La(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return za(La(La(La(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Ba(t,e,n){const r={shape:t,value:e,dtype:n};return us.runKernel(re,{},r)}const Ua=ys({floor_:function(t){const e={x:bs(t,"x","floor","float32")};return us.runKernel(ie,e)}}),Wa=ys({gather_:function(t,e,n=0,r=0){const s={x:bs(t,"x","gather"),indices:bs(e,"indices","gather","int32")},i={axis:n,batchDims:r};return us.runKernel(le,s,i)}}),Va=ys({greater_:function(t,e){let n=bs(t,"a","greater","string_or_numeric"),r=bs(e,"b","greater","string_or_numeric");[n,r]=es(n,r),pi(n.shape,r.shape);const s={a:n,b:r};return us.runKernel(he,s)}}),Ga=ys({greaterEqual_:function(t,e){let n=bs(t,"a","greaterEqual","string_or_numeric"),r=bs(e,"b","greaterEqual","string_or_numeric");[n,r]=es(n,r),pi(n.shape,r.shape);const s={a:n,b:r};return us.runKernel(ce,s)}}),Ha=ys({leakyRelu_:function(t,e=.2){const n={x:bs(t,"x","leakyRelu")},r={alpha:e};return us.runKernel(xe,n,r)}}),ja=ys({log_:function(t){const e={x:bs(t,"x","log","float32")};return us.runKernel(ke,e)}}),qa=ys({log1p_:function(t){const e={x:bs(t,"x","log1p")};return us.runKernel(Ie,e)}}),Ka=ys({max_:function(t,e=null,n=!1){const r={x:bs(t,"x","max")},s={reductionIndices:e,keepDims:n};return us.runKernel(Ee,r,s)}}),Xa=ys({mul_:function(t,e){let n=bs(t,"a","mul"),r=bs(e,"b","mul");[n,r]=es(n,r);const s={a:n,b:r};return us.runKernel(We,s)}}),Ya=ys({sub_:function(t,e){let n=bs(t,"a","sub"),r=bs(e,"b","sub");[n,r]=es(n,r);const s={a:n,b:r};return us.runKernel(Bn,s)}}),Za=ys({sum_:function(t,e=null,n=!1){let r=bs(t,"x","sum");"bool"===r.dtype&&(r=ni(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return us.runKernel(Cn,s,i)}}),Ja=ys({logSoftmax_:function(t,e=-1){const n=bs(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const r=Vi(((t,n)=>{const r=Ka(t,e,!0),s=Ya(t,r),i=Ya(ni(s,"float32"),ja(Za(Oa(s),e,!0)));return n([i]),{value:i,gradFunc:(t,n)=>{const[r]=n,s=Oa(r);return Ya(t,Xa(Za(t,e,!0),s))}}}));return r(n)}}),Qa=ys({logicalAnd_:function(t,e){const n=bs(t,"a","logicalAnd","bool"),r=bs(e,"b","logicalAnd","bool");pi(n.shape,r.shape);const s={a:n,b:r};return us.runKernel(Se,s)}}),to=ys({matMul_:function(t,e,n=!1,r=!1){let s=bs(t,"a","matMul"),i=bs(e,"b","matMul");[s,i]=es(s,i);const a={a:s,b:i},o={transposeA:n,transposeB:r};return us.runKernel(xt,a,o)}}),eo=ys({maxPool_:function(t,e,n,r,s){const i=bs(t,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=ca(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),f(la(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),ha("maxPool",r,s);const l={x:a},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s},h=us.runKernel(Ae,l,u);return o?ca(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),no=ys({maxPool3d_:function(t,e=[1,1,1],n,r,s,i="NDHWC"){const a=bs(t,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=ca(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),f(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),f("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),ha("maxPool3d",r,s);const u={x:o},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i},c=us.runKernel(De,u,h);return l?ca(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),ro=ys({maximum_:function(t,e){let n=bs(t,"a","maximum"),r=bs(e,"b","maximum");[n,r]=es(n,r),"bool"===n.dtype&&(n=ni(n,"int32"),r=ni(r,"int32")),pi(n.shape,r.shape);const s={a:n,b:r};return us.runKernel(Re,s)}}),so=ys({mean_:function(t,e=null,n=!1){const r={x:bs(t,"x","mean")},s={axis:e,keepDims:n};return us.runKernel(Oe,r,s)}}),io=ys({minimum_:function(t,e){let n=bs(t,"a","minimum"),r=bs(e,"b","minimum");[n,r]=es(n,r),"bool"===n.dtype&&(n=ni(n,"int32"),r=ni(r,"int32")),pi(n.shape,r.shape);const s={a:n,b:r};return us.runKernel(ze,s)}});function ao(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function oo(t,e,n){const r=t.length+e.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[i++]):s.push(e[a++]);return s}function lo(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function uo(t,e){return oo(t,e.map((t=>1)),e)}function ho(t,e,n){f(ao(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function co(t,e){if(ao(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function po(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function fo(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const mo=ys({square_:function(t){const e=bs(t,"x","square");return us.runKernel("Square",{x:e},{})}}),go=ys({moments_:function(t,e=null,n=!1){const r=C(e,(t=bs(t,"x","moments")).shape),s=so(t,r,n);let i=s.shape;n||(i=uo(s.shape,r));const a=mo(Ya(ni(t,"float32"),ca(s,i)));return{mean:s,variance:so(a,r,n)}}}),bo=ys({neg_:function(t){const e={x:bs(t,"x","neg")};return us.runKernel(Ve,e)}}),xo=ys({notEqual_:function(t,e){let n=bs(t,"a","notEqual","string_or_numeric"),r=bs(e,"b","notEqual","string_or_numeric");[n,r]=es(n,r),pi(n.shape,r.shape);const s={a:n,b:r};return us.runKernel(Ge,s)}}),yo=ys({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s={indices:bs(t,"indices","oneHot","int32")},i={depth:e,onValue:n,offValue:r};return us.runKernel(Xe,s,i)}});function wo(t,e="float32"){if("complex64"===e){const e=wo(t,"float32"),n=wo(t,"float32");return ws(e,n)}const n=U(x(t),e);return us.makeTensor(n,t,e)}function vo(t,e="float32"){if("complex64"===e){const e=vo(t,"float32"),n=wo(t,"float32");return ws(e,n)}const n=B(x(t),e);return us.makeTensor(n,t,e)}const ko=ys({onesLike_:function(t){const e={x:bs(t,"x","onesLike")};return us.runKernel(Ke,e)}}),Io=ys({pad_:function(t,e,n=0){const r=bs(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},i={x:r};return us.runKernel(Ze,i,s)}}),So=ys({prelu_:function(t,e){const n={x:bs(t,"x","prelu"),alpha:bs(e,"alpha","prelu")};return us.runKernel(Qe,n)}});var Co=n(377);class No{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=Co.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class $o{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Co.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const To=ys({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new No(e,n,r,!1,s),a=ei(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),Eo=ys({randomUniform_:function(t,e=0,n=1,r="float32",s){const i=ei(t,r),a=new $o(e,n,null,s);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),Ro=ys({relu_:function(t){const e={x:bs(t,"x","relu")};return us.runKernel(sn,e)}}),Ao=ys({reverse_:function(t,e){const n={x:bs(t,"x","reverse")},r={dims:e};return us.runKernel(dn,n,r)}}),Fo=ys({selu_:function(t){const e={x:bs(t,"x","selu")};return us.runKernel(bn,e)}}),Do=ys({separableConv2d_:function(t,e,n,r,s,i=[1,1],a="NHWC"){const o=bs(t,"x","separableConv2d"),l=bs(e,"depthwiseFilter","separableConv2d"),u=bs(n,"pointwiseFilter","separableConv2d");let h=o,c=!1;if(3===o.rank&&(c=!0,h=ca(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");f(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),f(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),f(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),f(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),f(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];f(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const m=Aa(h,l,r,s,a,i),g=Sa(m,u,1,"valid",a);return c?ca(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Mo=ys({sigmoid_:function(t){const e={x:bs(t,"x","sigmoid","float32")};return us.runKernel(kn,e)}}),_o=ys({slice_:function(t,e,n){const r=bs(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:e,size:n};return us.runKernel(xn,s,i)}}),Oo=ys({slice1d_:function(t,e,n){const r=bs(t,"x","slice1d");return f(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),_o(r,[e],[n])}}),Lo=ys({slice2d_:function(t,e,n){const r=bs(t,"x","slice2d");return f(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),_o(r,e,n)}}),zo=ys({slice3d_:function(t,e,n){const r=bs(t,"x","slice3d");return f(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),_o(r,e,n)}}),Po=ys({slice4d_:function(t,e,n){const r=bs(t,"x","slice4d");return f(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),_o(r,e,n)}}),Bo=ys({softmax_:function(t,e=-1){const n=bs(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return us.runKernel(Tn,r,s)}}),Uo=ys({softplus_:function(t){const e={x:bs(t,"x","softplus")};return us.runKernel(In,e)}}),Wo=ys({split_:function(t,e,n=0){const r={x:bs(t,"x","split")},s={numOrSizeSplits:e,axis:n};return us.runKernel($n,r,s)}}),Vo=ys({sqrt_:function(t){const e={x:bs(t,"x","sqrt","float32")};return us.runKernel(Sn,e)}}),Go=ys({squeeze_:function(t,e){const n=bs(t,"x","squeeze");return ca(n,N(n.shape,e).newShape)}}),Ho=ys({stack_:function(t,e=0){const n=xs(t,"tensors","stack","string_or_numeric");f(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&f(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:e};return us.runKernel(Ye,r,s)}}),jo=ys({tanh_:function(t){const e={x:bs(t,"x","tanh","float32")};return us.runKernel(Wn,e)}});function qo(t,e){g(t);const n=fs(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return vs(t,null,n,e)}const Ko=ys({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new No(e,n,r,!0,s),a=ei(t,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}}),Xo=ys({unstack_:function(t,e=0){const n=bs(t,"x","unstack","string_or_numeric");f(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:e};return us.runKernel(Kn,r,s)}}),Yo=ys({broadcastTo_:function(t,e){let n=bs(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=ca(n,t)}const s=n.shape,i=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])i[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===i.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return ri(n);const a={x:n},o={reps:i};return us.runKernel(Vn,a,o)}}),Zo=ys({where_:function(t,e,n){const r=bs(e,"a","where"),s=bs(n,"b","where"),i=bs(t,"condition","where","bool"),a=pi(pi(i.shape,r.shape),s.shape),o={condition:Yo(i,a),t:Yo(r,a),e:Yo(s,a)};return us.runKernel(gn,o)}}),Jo=ys({zerosLike_:function(t){const e={x:bs(t,"x","zerosLike")};return us.runKernel(Yn,e)}}),Qo=ys({transpose_:function(t,e){const n=bs(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),f(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{f(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return us.runKernel(jn,r,s)}}),tl=ys({dropout_:function(t,e,n,r){const s=bs(t,"x","dropout");if(f("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),f(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Gr?s.clone():s;const i=function(t,e){if(null==e)return t.shape.slice();if(y(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),a=1-e,o=Da(Ua(qi(Eo(i,0,1,"float32",r),a)),a);return Xa(s,o)}}),el=ys({imag_:function(t){const e={input:bs(t,"input","imag")};return us.runKernel(fe,e)}}),nl=ys({real_:function(t){const e={input:bs(t,"input","real")};return us.runKernel(nn,e)}}),rl=ys({fft_:function(t){f("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return us.runKernel(ne,e)}}),sl=ys({rfft_:function(t,e){f("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,s=_o(t,r,i),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=ya([t,wo(r)],t.shape.length-1),n=e}else s=t;const i=Jo(s),a=ca(ws(s,i),[r,n]),o=rl(a),l=Math.floor(n/2)+1,u=nl(o),h=el(o),c=Wo(u,[l,n-l],u.shape.length-1),d=Wo(h,[l,n-l],h.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,ca(ws(c[0],d[0]),p)}}),il=ys({ifft_:function(t){f("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return us.runKernel(pe,e)}}),al=ys({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=ca(t,[n,e]);r=il(s)}else{const s=[n,2*(e-1)],i=ca(nl(t),[n,e]),a=ca(el(t),[n,e]),o=Ao(_o(i,[0,1],[n,e-2]),1),l=Xa(Ao(_o(a,[0,1],[n,e-2]),1),Gi(-1)),u=ya([i,o],1),h=ya([a,l],1),c=ca(ws(u,h),[s[0],s[1]]);r=il(c)}if(r=nl(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=ca(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),ol=ys({conv2DBackpropFilter_:function(t,e,n,r,s,i="NHWC",a){let o=t;3===t.rank&&(o=ca(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=ca(e,[1,e.shape[0],e.shape[1],e.shape[2]])),f(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),f(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),f(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],h="NHWC"===i?l.shape[3]:l.shape[1];f(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),f(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),ha("conv2dDerFilter",s,a);const c={x:o,dy:l},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:n};return us.runKernel(Et,c,d)}}),ll=ys({relu6_:function(t){const e={x:bs(t,"x","relu6")};return us.runKernel(cn,e)}}),ul=ys({step_:function(t,e=0){const n={x:bs(t,"x","step")},r={alpha:e};return us.runKernel(Zn,n,r)}});function hl(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Xa(t,ul(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function cl(t,e){let n=e;const r=di(t.shape,e.shape);return r.length>0&&(n=Za(n,r)),ca(n,t.shape)}function dl(t,e,n,r){if("linear"===e)return t;if("relu"===e)return Ro(t);if("elu"===e)return Ma(t);if("relu6"===e)return ll(t);if("prelu"===e)return So(t,n);if("leakyrelu"===e)return Ha(t,r);if("sigmoid"===e)return Mo(t);throw new Error(`Unknown fused activation ${e}.`)}const pl=(t,e)=>!(t>0)||"linear"===e,fl=ys({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===pl(us.state.gradientDepth,l)){let c=Sa(t,e,n,r,s,i,a);return null!=o&&(c=qi(c,o)),dl(c,l,u,h)}const c=bs(t,"x","conv2d","float32"),d=bs(e,"filter","conv2d","float32");let p=c,m=!1;3===c.rank&&(m=!0,p=ca(c,[1,c.shape[0],c.shape[1],c.shape[2]])),f(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),f(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),ha("fused conv2d",r,a),f(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),f(la(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),f("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const g=ta(p.shape,d.shape,n,i,r,a);let b,x;null!=o&&(b=bs(o,"bias","fused conv2d"),[b]=es(b,c),pi(g.outShape,b.shape)),null!=u&&(x=bs(u,"prelu weights","fused conv2d"));const y=(t,e)=>{const[s,a,o,u]=e,h=hl(t,o,l);f(oa(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const c=[Na(a.shape,h,s,n,r),ol(a,h,s.shape,n,r)];if(null!=u){const t=cl(u,h);c.push(t)}return c},w={x:p,filter:d,bias:b,preluActivationWeights:x},v={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:h};if(null==o){const t=Vi(((t,e,n)=>{let r=us.runKernel(er,w,v);return n([e,t,r]),m&&(r=ca(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return t(p,d)}{const t=Vi(((t,e,n,r)=>{let s=us.runKernel(er,w,v);return r([e,t,s,n]),m&&(s=ca(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return t(p,d,b)}}}),ml=ys({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,s,i=[1,1],a){let o=t;3===t.rank&&(o=ca(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=ca(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},h={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:n};return us.runKernel(Ut,u,h)}}),gl=ys({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,s,i=[1,1],a){let o=e,l=!1;3===e.rank&&(l=!0,o=ca(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},h={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:t},c=us.runKernel(Wt,u,h);return l?ca(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});ys({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===pl(us.state.gradientDepth,l)){let c=Aa(t,e,n,r,s,i,a);return null!=o&&(c=qi(c,o)),dl(c,l,u,h)}const c=bs(t,"x","depthwiseConv2d","float32"),d=bs(e,"filter","depthwiseConv2d","float32");let p=c,m=!1;3===c.rank&&(m=!0,p=ca(c,[1,c.shape[0],c.shape[1],c.shape[2]])),f(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),f(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),f(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==i&&(i=[1,1]),f(la(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),ha("fused depthwiseConv2d",r,a);const g=ta(p.shape,d.shape,n,i,r,a,!0);let b,x;null!=o&&(b=bs(o,"bias","fused conv2d"),[b]=es(b,c),pi(g.outShape,b.shape)),null!=u&&(x=bs(u,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{f(oa(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[s,o,u,h]=e,c=hl(t,u,l),d=gl(o.shape,c,s,n,r,i,a),p=ml(o,c,s.shape,n,r,i,a);return null!=h?[d,p,cl(b,c)]:[d,p]},w={x:p,filter:d,bias:b,preluActivationWeights:x},v={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:h};if(null==o){const t=Vi(((t,e,n)=>{let r=us.runKernel(nr,w,v);return n([e,t,r]),m&&(r=ca(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return t(p,d)}{const t=Vi(((t,e,n,r)=>{let s=us.runKernel(nr,w,v);return r([e,t,s,n]),m&&(s=ca(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return t(p,d,b)}}});const bl=ys({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o}){if(!1===pl(us.state.gradientDepth,i)){let l=to(t,e,n,r);return null!=s&&(l=qi(l,s)),dl(l,i,a,o)}let l=bs(t,"a","fused matMul"),u=bs(e,"b","fused matMul");[l,u]=es(l,u);const h=n?l.shape[l.rank-2]:l.shape[l.rank-1],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),g=u.shape.slice(0,-2),b=x(m),y=x(g);f(h===c,(()=>`Error in fused matMul: inner shapes (${h}) and (${c}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=pi(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),v=ca(l,n?[b,h,d]:[b,d,h]),k=ca(u,r?[y,p,c]:[y,c,p]);let I,S;null!=s&&(I=bs(s,"bias","fused matMul"),[I]=es(I,l),pi(w,I.shape)),null!=a&&(S=bs(a,"prelu weights","fused matMul"));const C=(t,e)=>{const[a,o,l,u]=e,h=hl(ca(t,l.shape),l,i);let c,d;return n||r?!n&&r?(c=to(h,o,!1,!1),d=to(h,a,!0,!1)):n&&!r?(c=to(o,h,!1,!0),d=to(a,h,!1,!1)):(c=to(o,h,!0,!0),d=to(h,a,!0,!0)):(c=to(h,o,!1,!0),d=to(a,h,!0,!1)),null!=s?[c,d,cl(u,h)]:[c,d]},N={a:v,b:k,bias:I,preluActivationWeights:S},$={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};if(null==s){const t=Vi(((t,e,n)=>{const r=us.runKernel(tr,N,$);return n([t,e,r]),{value:ca(r,w),gradFunc:C}}));return t(v,k)}{const t=Vi(((t,e,n,r)=>{const s=us.runKernel(tr,N,$);return r([t,e,s,n]),{value:ca(s,w),gradFunc:C}}));return t(v,k,I)}}});function xl(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+r-1);s[i]=e-n*Math.cos(a)}return qo(s,"float32")}ys({hammingWindow_:function(t){return xl(t,.54,.46)}});const yl=ys({hannWindow_:function(t){return xl(t,.5,.5)}});function wl(t,e,n){if(g(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=fs(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return vs(t,e,r,n)}const vl=ys({frame_:function(t,e,n,r=!1,s=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(_o(t,i,e)),i+=n;if(r)for(;i<t.size;){const r=i+e-t.size,o=ya([_o(t,i,e-r),Ba([r],s)]);a.push(o),i+=n}return 0===a.length?wl([],[0,e]):ca(ya(a),[a.length,e])}});ys({stft_:function(t,e,n,r,s=yl){var i;null==r&&(i=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const a=vl(t,e,n),o=Xa(a,s(e));return sl(o,r)}});const kl=ys({cropAndResize_:function(t,e,n,r,s="bilinear",i=0){const a=bs(t,"image","cropAndResize"),o=bs(e,"boxes","cropAndResize","float32"),l=bs(n,"boxInd","cropAndResize","int32"),u=o.shape[0];f(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),f(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),f(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),f(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),f(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),f("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const h={image:a,boxes:o,boxInd:l},c={method:s,extrapolationValue:i,cropSize:r};return us.runKernel(Lt,h,c)}}),Il=ys({flipLeftRight_:function(t){const e=bs(t,"image","flipLeftRight","float32");f(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return us.runKernel(se,n,{})}}),Sl=ys({grayscaleToRGB_:function(t){const e=bs(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];f(e.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`)),f(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,za(e,s)}}),Cl=ys({rotateWithOffset_:function(t,e,n=0,r=.5){const s=bs(t,"image","rotateWithOffset","float32");f(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},a={radians:e,fillValue:n,center:r};return us.runKernel(Qn,i,a)}});function Nl(t,e,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=t.shape[0];return n=Math.min(n,a),f(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),f(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),f(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),f(1===e.rank,(()=>"scores must be a 1D tensor")),f(e.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`)),f(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}const $l=ys({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=bs(t,"boxes","nonMaxSuppression","float32"),a=bs(e,"scores","nonMaxSuppression","float32"),o=Nl(i,a,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return us.runKernel(He,{boxes:i,scores:a},l)}});function Tl(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=n(e,t[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}(t,e,n||El)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function El(t,e){return t>e?1:t<e?-1:0}function Rl(t,e,n,r,s){return Dl(t,e,n,r,s,0)}function Al(t,e,n,r,s,i){return Dl(t,e,n,r,s,0,!1,i,!0)}function Fl(t,e,n,r,s,i){return Dl(t,e,n,r,s,i,!0)}function Dl(t,e,n,r,s,i,a=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>s&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(Ol);const h=i>0?-.5/i:0,c=[],d=[];for(;c.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=e;if(n<s)break;let o=!1;for(let n=c.length-1;n>=a;--n){const a=Ml(t,i,c[n]);if(a>=r){o=!0;break}if(e.score=e.score*_l(r,h,a),e.score<=s)break}e.suppressBeginIndex=c.length,o||(e.score===n?(c.push(i),d.push(e.score)):e.score>s&&Tl(u,e,Ol))}const p=c.length,f=n-p;o&&f>0&&(c.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:c};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Ml(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),h=Math.min(s[1],s[3]),c=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(l-a),f=(c-u)*(d-h);if(p<=0||f<=0)return 0;const m=Math.max(i,u),g=Math.max(a,h),b=Math.min(o,c),x=Math.min(l,d),y=Math.max(b-m,0)*Math.max(x-g,0);return y/(p+f-y)}function _l(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function Ol(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const Ll=ys({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=bs(t,"boxes","nonMaxSuppression"),o=bs(e,"scores","nonMaxSuppression"),l=Nl(a,o,n,r,s,i),u={boxes:a,scores:o},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma},c=us.runKernel(qe,u,h);return{selectedIndices:c[0],selectedScores:c[1]}}}),zl=ys({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=bs(t,"boxes","nonMaxSuppression"),o=bs(e,"scores","nonMaxSuppression"),l=Nl(a,o,n,r,s,null),u={boxes:a,scores:o},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},c=us.runKernel(je,u,h);return{selectedIndices:c[0],validOutputs:c[1]}}}),Pl=ys({resizeBilinear_:function(t,e,n=!1,r=!1){const s=bs(t,"images","resizeBilinear");f(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),f(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),f(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=ca(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:e},u=us.runKernel(un,o,l);return a?ca(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Bl=ys({resizeNearestNeighbor_:function(t,e,n=!1,r=!1){const s=bs(t,"images","resizeNearestNeighbor");f(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),f(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),f("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),f(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=ca(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:e},u=us.runKernel(on,o,l);return a?ca(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Ul=ys({bincount_:function(t,e,n){const r=bs(t,"x","bincount"),s=bs(e,"weights","bincount");f("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),f(n>=0,(()=>`size must be non-negative, but got ${n}.`)),f(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},a={size:n};return us.runKernel(wt,i,a)}}),Wl=ys({lessEqual_:function(t,e){let n=bs(t,"a","lessEqual","string_or_numeric"),r=bs(e,"b","lessEqual","string_or_numeric");[n,r]=es(n,r),pi(n.shape,r.shape);const s={a:n,b:r};return us.runKernel(we,s)}}),Vl=ys({round_:function(t){const e={x:bs(t,"x","round")};return us.runKernel(pn,e)}});function Gl(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return us.runKernel(en,{},s)}const Hl=ys({threshold_:function(t,e="binary",n=!1,r=.5){const s=bs(t,"image","threshold"),i=s.shape[0]*s.shape[1];let a,o,l,u,h=Xa(qo([r]),255);if(f(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),f(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),f("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),f("otsu"===e||"binary"===e,(()=>`Method must be binary or otsu, but was ${e}`)),3===s.shape[2]){[a,o,l]=Wo(s,[1,1,1],-1);const t=Xa(a,.2989),e=Xa(o,.587),n=Xa(l,.114);u=qi(qi(t,e),n)}else u=t;"otsu"===e&&(h=function(t,e){let n,r,s,i,a,o,l=qo([-1]),u=qo([0]),h=qo([0]);for(let c=0;c<t.size-1;c++){n=_o(t,0,c+1),r=_o(t,c+1),a=Da(Za(n),e),o=Da(Za(r),e);const d=Za(Xa(n,Gl(0,n.size)));s=Da(d,Za(n));const p=Ba(r.shape,n.size),f=qi(Gl(0,r.size),p),m=Xa(r,f);i=Da(Za(m),Za(r));const g=Ya(s,i),b=Ya(s,i),x=Xa(a,o);h=Xa(Xa(x,g),b);const y=Va(h,u);u=Zo(y,h,u),l=Zo(y,qo([c]),l)}return l}(Ul(ni(Vl(u),"int32"),ks([]),256),i));const c=n?Wl(u,h):Va(u,h);return ni(Xa(c,255),"int32")}}),jl=ys({transform_:function(t,e,n="nearest",r="constant",s=0,i){const a=bs(t,"image","transform","float32"),o=bs(e,"transforms","transform","float32");f(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),f(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),f(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return us.runKernel(Hn,l,u)}}),ql=ys({bandPart_:function(t,e,n){f(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),f(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=bs(t,"a","bandPart");f(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,a]=r.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),n<0&&(n=a);const o=ca(Gl(0,i,1,"int32"),[-1,1]),l=Gl(0,a,1,"int32"),u=Ya(o,l),h=Qa(Wl(u,Gi(+e,"int32")),Ga(u,Gi(-n,"int32"))),c=wo([i,a],r.dtype);return ca(Ho(Xo(ca(r,[-1,i,a])).map((t=>Zo(h,t,c)))),s)}}),Kl=ys({min_:function(t,e=null,n=!1){const r={x:bs(t,"x","min")},s={axis:e,keepDims:n};return us.runKernel(Le,r,s)}}),Xl=ys({pow_:function(t,e){let n=bs(t,"base","pow"),r=bs(e,"exp","pow");[n,r]=es(n,r);const s={a:n,b:r};return us.runKernel(Je,s)}});function Yl(t,e,n=null){if(0===t.rank)return ji(t);if(1!==t.rank&&null===n)return Yl(ca(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Za(ji(t),n);if(e===1/0)return Ka(ji(t),n);if(e===-1/0)return Kl(ji(t),n);if("euclidean"===e||2===e)return Vo(Za(Xl(ji(t),Gi(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Ka(Za(ji(t),n[0]),n[1]-1);if(e===1/0)return Ka(Za(ji(t),n[1]),n[0]);if(e===-1/0)return Kl(Za(ji(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Vo(Za(mo(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Zl=ys({norm_:function(t,e="euclidean",n=null,r=!1){const s=Yl(t=bs(t,"x","norm"),e,n);let i=s.shape;if(r){const e=C(n,t.shape);i=uo(s.shape,e)}return ca(s,i)}}),Jl=ys({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,f(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)f(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Wo(t,t.shape[0],0).map((t=>Go(t,[0])));f(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(us.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=Xa(Za(Xa(n[r],t)),n[r]);t=Ya(t,e)}return Da(t,Zl(t,"euclidean"))})));return e?Ho(n,0):n}});function Ql(t,e=!1){return us.tidy((()=>{f(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=Pa(n),i=ri(t);const a=wl([[1]],[1,1]);let o=ri(a);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=i,l=o,u=s;[o,i,s]=us.tidy((()=>{const e=_o(i,[t,t],[n-t,1]),l=Zl(e),u=_o(i,[t,t],[1,1]),h=Zo(Va(u,0),wl([[-1]]),wl([[1]])),c=Ya(u,Xa(h,l)),d=Da(e,c);o=1===d.shape[0]?ri(a):ya([a,_o(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=bo(Da(to(h,c),l)),f=_o(i,[t,0],[n-t,r]),m=Xa(p,o),g=Qo(o);if(0===t)i=Ya(f,to(m,to(g,f)));else{const e=Ya(f,to(m,to(g,f)));i=ya([_o(i,[0,0],[t,r]),e],0)}const b=Qo(m),x=_o(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=Ya(x,to(to(x,o),b));else{const e=Ya(x,to(to(x,o),b));s=ya([_o(s,[0,0],[n,t]),e],1)}return[o,i,s]})),Pi([e,l,u])}return!e&&n>r&&(s=_o(s,[0,0],[n,r]),i=_o(i,[0,0],[r,r])),[s,i]}))}const tu=ys({qr_:function(t,e=!1){if(f(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return Ql(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=Xo(ca(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],i=[];return r.forEach((t=>{const[n,r]=Ql(t,e);s.push(n),i.push(r)})),[ca(Ho(s,0),t.shape),ca(Ho(i,0),t.shape)]}}});var eu;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(eu||(eu={}));const nu=ys({computeWeightedLoss_:function(t,e,n=eu.SUM_BY_NONZERO_WEIGHTS){const r=bs(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=bs(e,"weights","computeWeightedLoss"));const i=null==s?r:Xa(r,s);if(n===eu.NONE)return i;if(n===eu.SUM)return Za(i);if(n===eu.MEAN){if(null==s)return so(i);{const t=r.size/s.size,e=Da(Za(i),Za(s));return t>1?Da(e,Gi(t)):e}}if(n===eu.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Da(Za(i),Gi(r.size));{const t=Xa(s,vo(r.shape)),e=ni(Za(xo(t,Gi(0))),"float32");return Da(Za(i),e)}}throw Error(`Unknown reduction: ${n}`)}});ys({absoluteDifference_:function(t,e,n,r=eu.SUM_BY_NONZERO_WEIGHTS){const s=bs(t,"labels","absoluteDifference"),i=bs(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=bs(n,"weights","absoluteDifference")),m(s.shape,i.shape,"Error in absoluteDifference: ");const o=ji(Ya(s,i));return nu(o,a,r)}}),ys({cosineDistance_:function(t,e,n,r,s=eu.SUM_BY_NONZERO_WEIGHTS){const i=bs(t,"labels","cosineDistance"),a=bs(e,"predictions","cosineDistance");let o=null;null!=r&&(o=bs(r,"weights","cosineDistance")),m(i.shape,a.shape,"Error in cosineDistance: ");const l=Gi(1),u=Ya(l,Za(Xa(i,a),n,!0));return nu(u,o,s)}}),ys({hingeLoss_:function(t,e,n,r=eu.SUM_BY_NONZERO_WEIGHTS){let s=bs(t,"labels","hingeLoss");const i=bs(e,"predictions","hingeLoss");let a=null;null!=n&&(a=bs(n,"weights","hingeLoss")),m(s.shape,i.shape,"Error in hingeLoss: ");const o=Gi(1);s=Ya(Xa(Gi(2),s),o);const l=Ro(Ya(o,Xa(s,i)));return nu(l,a,r)}}),ys({huberLoss_:function(t,e,n,r=1,s=eu.SUM_BY_NONZERO_WEIGHTS){const i=bs(t,"labels","huberLoss"),a=bs(e,"predictions","huberLoss");let o=null;null!=n&&(o=bs(n,"weights","huberLoss")),m(i.shape,a.shape,"Error in huberLoss: ");const l=Gi(r),u=ji(Ya(a,i)),h=io(u,l),c=Ya(u,h),d=qi(Xa(Gi(.5),mo(h)),Xa(l,c));return nu(d,o,s)}}),ys({logLoss_:function(t,e,n,r=1e-7,s=eu.SUM_BY_NONZERO_WEIGHTS){const i=bs(t,"labels","logLoss"),a=bs(e,"predictions","logLoss");let o=null;null!=n&&(o=bs(n,"weights","logLoss")),m(i.shape,a.shape,"Error in logLoss: ");const l=Gi(1),u=Gi(r),h=bo(Xa(i,ja(qi(a,u)))),c=Xa(Ya(l,i),ja(qi(Ya(l,a),u))),d=Ya(h,c);return nu(d,o,s)}});const ru=ys({squaredDifference_:function(t,e){let n=bs(t,"a","squaredDifference"),r=bs(e,"b","squaredDifference");[n,r]=es(n,r),pi(n.shape,r.shape);const s={a:n,b:r};return us.runKernel(Mn,s,{})}});ys({meanSquaredError_:function(t,e,n,r=eu.SUM_BY_NONZERO_WEIGHTS){const s=bs(t,"labels","meanSquaredError"),i=bs(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=bs(n,"weights","meanSquaredError")),m(s.shape,i.shape,"Error in meanSquaredError: ");const o=ru(s,i);return nu(o,a,r)}}),ys({sigmoidCrossEntropy_:function(t,e,n,r=0,s=eu.SUM_BY_NONZERO_WEIGHTS){let i=bs(t,"multiClassLabels","sigmoidCrossEntropy");const a=bs(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=bs(n,"weights","sigmoidCrossEntropy")),m(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Gi(r),e=Gi(1),n=Gi(.5);i=qi(Xa(i,Ya(e,t)),Xa(n,t))}const l=function(t,e){const n=bs(t,"labels","sigmoidCrossEntropyWithLogits"),r=bs(e,"logits","sigmoidCrossEntropyWithLogits");m(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Ro(r),i=Xa(r,n),a=qa(Oa(bo(ji(r))));return qi(Ya(s,i),a)}(i,a);return nu(l,o,s)}});const su=ys({logSumExp_:function(t,e=null,n=!1){const r=bs(t,"x","logSumExp"),s=C(e,r.shape),i=Ka(r,s,!0),a=Ya(r,i),o=Oa(a),l=Za(o,s),u=ja(l),h=qi(ca(i,u.shape),u);if(n){const t=uo(h.shape,s);return ca(h,t)}return h}});ys({softmaxCrossEntropy_:function(t,e,n,r=0,s=eu.SUM_BY_NONZERO_WEIGHTS){let i=bs(t,"onehotLabels","softmaxCrossEntropy");const a=bs(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=bs(n,"weights","softmaxCrossEntropy")),m(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Gi(r),e=Gi(1),n=Gi(i.shape[1]);i=qi(Xa(i,Ya(e,t)),Da(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);const r=Vi(((t,e,r)=>{const s=su(e,[n],!0),i=Ya(ni(e,"float32"),s);r([t,i]);const a=bo(Xa(i,t));return{value:Za(a,[n]),gradFunc:(t,e)=>{const[r,s]=e,i=uo(t.shape,[n]);return[Xa(ca(t,i),Ya(ni(r,"float32"),Oa(s))),Xa(ca(t,i),Ya(Oa(s),ni(r,"float32")))]}}}));return r(t,e)}(i,a);return nu(l,o,s)}}),ys({sparseFillEmptyRows_:function(t,e,n,r){const s=bs(t,"indices","sparseFillEmptyRows","int32"),i=bs(e,"values","sparseFillEmptyRows"),a=bs(n,"denseShape","sparseFillEmptyRows","int32"),o=bs(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:i,denseShape:a,defaultValue:o},u=us.runKernel(En,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),ys({sparseReshape_:function(t,e,n){const r=bs(t,"inputIndices","sparseReshape","int32"),s=bs(e,"inputShape","sparseReshape","int32"),i=bs(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:r,inputShape:s,newShape:i},o=us.runKernel(Rn,a);return{outputIndices:o[0],outputShape:o[1]}}}),ys({sparseSegmentMean_:function(t,e,n){const r=bs(t,"data","sparseSegmentMean"),s=bs(e,"indices","sparseSegmentMean","int32"),i=bs(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return us.runKernel(An,a)}}),ys({sparseSegmentSum_:function(t,e,n){const r=bs(t,"data","sparseSegmentSum"),s=bs(e,"indices","sparseSegmentSum","int32"),i=bs(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return us.runKernel(Fn,a)}}),ys({stringNGrams_:function(t,e,n,r,s,i,a,o){const l=bs(t,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=bs(e,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:r,leftPad:s,rightPad:i,padWidth:a,preserveShortSequences:o},c={data:l,dataSplits:u},d=us.runKernel(Ln,c,h);return{nGrams:d[0],nGramsSplits:d[1]}}}),ys({stringSplit_:function(t,e,n=!0){const r=bs(t,"input","stringSplit","string"),s=bs(e,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const i={skipEmpty:n},a={input:r,delimiter:s},o=us.runKernel(zn,a,i);return{indices:o[0],values:o[1],shape:o[2]}}}),ys({stringToHashBucketFast_:function(t,e){const n=bs(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return us.runKernel(Pn,s,r)}});const iu={flipLeftRight:Il,grayscaleToRGB:Sl,resizeNearestNeighbor:Bl,resizeBilinear:Pl,rotateWithOffset:Cl,cropAndResize:kl,nonMaxSuppression:$l,nonMaxSuppressionAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=bs(t,"boxes","nonMaxSuppressionAsync"),a=bs(e,"scores","nonMaxSuppressionAsync"),o=Nl(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],h=l[1],{selectedIndices:c}=Rl(u,h,n,r,s);return i!==t&&i.dispose(),a!==e&&a.dispose(),qo(c,"int32")},nonMaxSuppressionWithScore:Ll,nonMaxSuppressionWithScoreAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=bs(t,"boxes","nonMaxSuppressionAsync"),o=bs(e,"scores","nonMaxSuppressionAsync"),l=Nl(a,o,n,r,s,i);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),h=u[0],c=u[1],{selectedIndices:d,selectedScores:p}=Fl(h,c,n,r,s,i);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:qo(d,"int32"),selectedScores:qo(p)}},nonMaxSuppressionPadded:zl,nonMaxSuppressionPaddedAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=bs(t,"boxes","nonMaxSuppressionAsync"),o=bs(e,"scores","nonMaxSuppressionAsync"),l=Nl(a,o,n,r,s,null),u=l.maxOutputSize,h=l.iouThreshold,c=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Al(d,p,u,h,c,i);return a!==t&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:qo(f,"int32"),validOutputs:Gi(m,"int32")}},threshold:Hl,transform:jl},au={bandPart:ql,gramSchmidt:Jl,qr:tu};class ou extends Hi{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=us.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=us.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:zi((()=>Jo(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:zi((()=>Jo(r).variable(!1)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;zi((()=>{const t=qi(Xa(i,this.rho),Xa(mo(s),1-this.rho)),e=Xa(Da(Vo(qi(a,this.epsilon)),Vo(qi(i,this.epsilon))),s),n=qi(Xa(a,this.rho),Xa(mo(e),1-this.rho));i.assign(t),a.assign(n);const o=qi(Xa(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Pi(this.accumulatedGrads.map((t=>t.variable))),Pi(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}ou.className="Adadelta",_i(ou);class lu extends Hi{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=us.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:zi((()=>Ba(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable;zi((()=>{const t=qi(i,mo(s));i.assign(t);const e=qi(Xa(Da(s,Vo(qi(t,us.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Pi(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}lu.className="Adagrad",_i(lu);class uu extends Hi{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],zi((()=>{this.accBeta1=Gi(e).variable(),this.accBeta2=Gi(n).variable()})),null==r&&(this.epsilon=us.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);zi((()=>{const n=Ya(1,this.accBeta1),r=Ya(1,this.accBeta2);e.forEach(((e,s)=>{const i=us.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:zi((()=>Jo(i).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:zi((()=>Jo(i).variable(!1)))});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=qi(Xa(o,this.beta1),Xa(a,1-this.beta1)),h=qi(Xa(l,this.beta2),Xa(mo(a),1-this.beta2)),c=Da(u,n),d=Da(h,r);o.assign(u),l.assign(h);const p=qi(Xa(Da(c,qi(Vo(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(Xa(this.accBeta1,this.beta1)),this.accBeta2.assign(Xa(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Pi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Pi(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),zi((()=>{this.accBeta1.assign(Xl(this.beta1,this.iterations_+1)),this.accBeta2.assign(Xl(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}uu.className="Adam",_i(uu);class hu extends Hi{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],zi((()=>{this.iteration=Gi(0).variable(),this.accBeta1=Gi(e).variable()})),null==r&&(this.epsilon=us.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);zi((()=>{const n=Ya(1,this.accBeta1),r=Da(-this.learningRate,qi(Xa(this.iteration,this.decay),1));e.forEach(((e,s)=>{const i=us.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Jo(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:Jo(i).variable(!1)});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=qi(Xa(o,this.beta1),Xa(a,1-this.beta1)),h=Xa(l,this.beta2),c=ji(a),d=ro(h,c);o.assign(u),l.assign(d);const p=qi(Xa(Da(r,n),Da(u,qi(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(qi(this.iteration,1)),this.accBeta1.assign(Xa(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Pi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Pi(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}hu.className="Adamax",_i(hu);class cu extends Hi{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=us.registeredVariables[e];zi((()=>{const t=qi(Xa(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Bi(Gi(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}cu.className="SGD",_i(cu);class du extends cu{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Gi(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=us.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:zi((()=>Jo(r).variable(t)))}}const s=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&zi((()=>{let t;const e=qi(Xa(this.m,s),i);t=this.useNesterov?qi(Xa(this.c,qi(i,Xa(e,this.m))),r):qi(Xa(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Pi(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}du.className="Momentum",_i(du);class pu extends Hi{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=us.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=us.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:zi((()=>Jo(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:zi((()=>Jo(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:zi((()=>Jo(r).variable(s)))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;zi((()=>{const t=qi(Xa(a,this.decay),Xa(mo(i),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=qi(Xa(e,this.decay),Xa(i,1-this.decay)),l=Da(Xa(i,this.learningRate),Vo(Ya(t,qi(mo(s),this.epsilon)))),u=qi(Xa(o,this.momentum),l);a.assign(t),e.assign(s),o.assign(u);const h=Ya(r,u);r.assign(h)}else{const t=qi(Xa(a,this.decay),Xa(mo(i),1-this.decay)),e=qi(Xa(o,this.momentum),Da(Xa(i,this.learningRate),Vo(qi(t,this.epsilon))));a.assign(t),o.assign(e);const n=Ya(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Pi(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Pi(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Pi(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}pu.className="RMSProp",_i(pu);class fu{static sgd(t){return new cu(t)}static momentum(t,e,n=!1){return new du(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new pu(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new uu(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new ou(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new hu(t,e,n,r,s)}static adagrad(t,e=.1){return new lu(t,e)}}const mu={sgd:fu.sgd,momentum:fu.momentum,adadelta:fu.adadelta,adagrad:fu.adagrad,rmsprop:fu.rmsprop,adamax:fu.adamax,adam:fu.adam},gu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function bu(){return new Promise((t=>gu((()=>t()))))}function xu(t,e){const n=t[0].length;t.forEach(((t,e)=>{f(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),f(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let i=0;i<n;i++)f(i===e||t[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function yu(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const wu=30;function vu(t){return t<=wu?t:O(t,Math.floor(Math.sqrt(t)))}function ku(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Iu(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function Su(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Cu(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function Nu(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function $u(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function Tu(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===x(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,i=s[s.length-1];let a=1;for(let t=0;t<s.length-1;++t)a*=s[t];const o=t.shape,l=s.slice();l.pop();let u=1;for(let t=i;t<n;++t)u*=o[t],l.push(o[t]);const h=[...L(t.shape).map((t=>t/u)),1].slice(0,i);return[l,a,u,h]}function Eu(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(i+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(i+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(i+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function Ru(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}Eu(n,e,t)}function Au(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=n.length;let a=1;for(let t=s;t<i;++t)a*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:x(e.shape)/o,sliceSize:a,strides:[...L(n.slice(0,s)),1],outputSize:x(n)}}const Fu=1.7580993408473768,Du=1.0507009873554805,Mu=.3275911,_u=.254829592,Ou=-.284496736,Lu=1.421413741,zu=-1.453152027,Pu=1.061405429;function Bu(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Uu(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Wu(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Vu(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Gu(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Hu(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function ju(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const i=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function qu(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}const Ku=/->/g;function Xu(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(Ku,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=t.split("->");f(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const i=r.split(","),a=i.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let t=0;t<s.length;++t){const e=s[t];if(!i.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let t=0;t<r.length;++t){const e=r[t];-1===o.indexOf(e)&&","!==e&&o.push(e)}const l=new Array(i.length);for(let t=0;t<a;++t){if(new Set(i[t].split("")).size!==i[t].length)throw new Error(`Found duplicate axes in input component ${i[t]}. Support for duplicate axes in input is not implemented yet.`);l[t]=[];for(let e=0;e<i[t].length;++e)l[t].push(o.indexOf(i[t][e]))}const u=o.length,h=[];for(let t=s.length;t<u;++t)h.push(t);return{allDims:o,summedDims:h,idDims:l}}function Yu(t,e){let n=new Array(t);n.fill(-1);for(let t=0;t<e.length;++t)n[e[t]]=t;const r=[];for(let e=0;e<t;++e)-1===n[e]&&r.push(e);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:r}}function Zu(t,e,n){const r=new Array(t);for(let t=0;t<n.length;++t){const s=n[t].shape;for(let n=0;n<e[t].length;++n)void 0===r[e[t][n]]?r[e[t][n]]=s[n]:f(r[e[t][n]]===s[n],(()=>`Expected dimension ${r[e[t][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Ju(t,e){const n=t,r=[];let s=0;0===t.length&&n.push(-1),s=t.length+1;for(let t=0;t<s;++t)r.push([]);const i=[];for(let t=0;t<n.length;++t){const s=th(e,n[t]);for(const e of s)-1===i.indexOf(e)&&(r[t].push(e),i.push(e))}return{path:n,steps:r}}function Qu(t){return t.every(((t,e)=>t===e))}function th(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}function eh(t,e,n=0){let r=[];if("number"==typeof e)f(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);f(s<=1,(()=>"There should be only one negative value in split array."));const i=e.indexOf(-1);if(-1!==i){const r=e.reduce(((t,e)=>e>0?t+e:t));e[i]=t.shape[n]-r}f(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}function nh(t){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${t}`}function rh(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function sh(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}function ih(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function ah(t,e){return`size ${t} must be non-negative, not ${e}`}function oh(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function lh(t,e){return`Input to reshape is a SparseTensor with ${x(t)}\n  dense values, but the requested shape requires a multiple of ${x(e)}. inputShape=${t} outputShape= ${e}`}function uh(t,e){return`Input to reshape is a tensor with ${x(t)} dense values, but the requested shape has ${x(e)}. inputShape=${t} outputShape=${e}`}function hh(){return"segment ids must be >= 0"}function ch(){return"segment ids are not increasing"}function dh(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function ph(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}function fh(t,e){let n,r=!1;for(t<=wu?(n=t,r=!0):n=O(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=O(t,n+1);return n}function mh(t,e,n){const r=[],s=t.length;for(let i=0;i<s;i++)i!==e?r.push(t[i]):r.push(n);return r}function gh(t,e,n,r){const s=e.shape.length,i=t.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const a=t.shape[n],o=[];let l=1,u=1,h=1;for(let e=0;e<r;++e)o.push(t.shape[e]),l*=t.shape[e];for(let e=r;e<n;e++)o.push(t.shape[e]),u*=t.shape[e];for(let t=r;t<s;t++)o.push(e.shape[t]);for(let e=n+1;e<i;e++)o.push(t.shape[e]),h*=t.shape[e];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:a,outputShape:o}}function bh(t){try{return t.map((t=>Ar(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function xh(t){return t.map((t=>Rr(t)))}function yh(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=ei(t,"int32"),s=ei([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const i=r.indexToLoc(n[e]),a=e*t.length;s.values.set(i,a)}return s.toTensor()}const wh={kernelName:tt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,ul(ni(n,"float32"),-1))}}},vh={kernelName:et,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=mo(ni(n,"float32")),r=Vo(Ya(Gi(1),e));return bo(Da(t,r))}}}},kh={kernelName:nt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Vo(Ya(mo(ni(n,"float32")),1));return Da(t,e)}}}},Ih={kernelName:rt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=pi(n.shape,r.shape);return{a:()=>{let e=t;const r=di(n.shape,s);return r.length>0&&(e=Za(e,r)),ca(e,n.shape)},b:()=>{let e=t;const n=di(r.shape,s);return n.length>0&&(e=Za(e,n)),ca(e,r.shape)}}}},Sh={kernelName:st,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},Ch={kernelName:ot,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Jo(n)}}},Nh={kernelName:lt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Jo(n)}}},$h={kernelName:ut,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,Vo(Ya(Gi(1),mo(ni(n,"float32")))))}}},Th={kernelName:ht,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Vo(qi(Gi(1),mo(ni(n,"float32"))));return Da(t,e)}}}},Eh={kernelName:pt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=pi(n.shape,r.shape);return{a:()=>{const e=qi(mo(n),mo(r));let i=Xa(t,Da(r,e));const a=di(n.shape,s);return a.length>0&&(i=Za(i,a)),ca(i,n.shape)},b:()=>{const e=qi(mo(n),mo(r));let i=bo(Xa(t,Da(n,e)));const a=di(r.shape,s);return a.length>0&&(i=Za(i,a)),ca(i,r.shape)}}}},Rh={kernelName:ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,qi(mo(ni(n,"float32")),1))}}},Ah={kernelName:dt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,Ya(Gi(1),mo(ni(n,"float32"))))}}},Fh=ys({avgPool3dGrad_:function(t,e,n,r,s,i){const a=bs(t,"dy","avgPool3dGrad"),o=bs(e,"input","avgPool3dGrad");let l=a,u=o,h=!1;4===o.rank&&(h=!0,l=ca(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=ca(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),f(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),ha("avgPool3dGrad",s,i);const c={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:i},p=us.runKernel(bt,c,d);return h?ca(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Dh={kernelName:gt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>Fh(t,r,s,i,a,o)}}},Mh=ys({avgPoolGrad_:function(t,e,n,r,s){const i=bs(t,"dy","avgPoolGrad"),a=bs(e,"input","avgPoolGrad");f(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=ca(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=ca(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),f(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const h={dy:l,input:o},c={filterSize:n,strides:r,pad:s},d=us.runKernel(mt,h,c);return u?ca(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),_h={kernelName:ft,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:a}=n;return{x:()=>Mh(t,r,s,i,a)}}},Oh={kernelName:xt,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>to(t,s,!1,!1),b:()=>to(t,r,!0,!1)}:i&&!a?{a:()=>to(s,t,!1,!0),b:()=>to(r,t,!1,!1)}:{a:()=>to(s,t,!0,!0),b:()=>to(t,r,!0,!0)}:{a:()=>to(t,s,!1,!0),b:()=>to(r,t,!0,!1)}}},Lh=ys({spaceToBatchND_:function(t,e,n){const r=bs(t,"x","spaceToBatchND");f(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),f(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),f(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},i={blockShape:e,paddings:n};return us.runKernel(Nn,s,i)}}),zh={kernelName:yt,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Lh(t,r,s)}}},Ph={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,i=r.shape,a=Array.from(i);for(let t=s.length-1;t>=0;t--)if(s[t]===i[t])a[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let t=0;t<a.length;t++)a[t]>1&&o.push(t);return{x:()=>Za(t,o,!0)}}},Bh={kernelName:kt,gradFunc:t=>({x:()=>t.clone()})},Uh={kernelName:It,gradFunc:t=>({x:()=>Jo(t)})},Wh={kernelName:St,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>Zo(Qa(Ga(r,s),Wl(r,i)),t,Jo(t))}}},Vh={kernelName:Nt,inputsToSave:["x"],gradFunc:wh.gradFunc},Gh={kernelName:$t,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,i=C(s,e[0].shape)[0],a=r.map((t=>t[i]));return Wo(t,a,i).map((t=>()=>t))}},Hh={kernelName:Tt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return f(oa(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Na(r.shape,t,s,a,o,l),filter:()=>ol(r,t,s.shape,a,o,l)}}},jh={kernelName:Rt,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Sa(t,s,i,a,o,1,l),filter:()=>ol(t,r,s.shape,i,a,o,l)}}},qh=ys({conv3DBackpropFilter_:function(t,e,n,r,s){let i=t;4===t.rank&&(i=ca(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;4===a.rank&&(a=ca(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),f(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),f(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),f(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),f(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),f(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:r,pad:s,filterShape:n};return us.runKernel(Ft,o,l)}}),Kh={kernelName:At,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i}=n;f(oa(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=e;return{x:()=>Ea(a.shape,t,o,s,i),filter:()=>qh(a,t,o.shape,s,i)}}},Xh=ys({sin_:function(t){const e={x:bs(t,"x","sin","float32")};return us.runKernel(yn,e)}}),Yh={kernelName:Mt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(bo(Xh(ni(n,"float32"))),t)}}},Zh=ys({sinh_:function(t){const e={x:bs(t,"x","sinh")};return us.runKernel(wn,e)}}),Jh={kernelName:_t,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(Zh(ni(n,"float32")),t)}}},Qh=ys({cumsum_:function(t,e=0,n=!1,r=!1){const s={x:bs(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:r};return us.runKernel(Ot,s,i)}}),tc={kernelName:Ot,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const e=co([s],r.rank);let n=Qh(t,s,i,!a);return null!=e&&(n=Qo(n,e)),n}}}},ec={kernelName:Bt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;f(oa(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;return f(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),f(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),f(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),f(la(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),ha("depthwiseConv2d",i,a),{x:()=>gl(l.shape,t,u,s,i,o,a),filter:()=>ml(l,t,u.shape,s,i,o,a)}}},nc={kernelName:Gt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,i={x:r,filter:s,dy:t},a={x:r,filter:s,dy:t};return{x:()=>us.runKernel(Ht,i,n),filter:()=>us.runKernel(jt,a,n)}}},rc={kernelName:Xt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>us.runKernel(Yt,r)}}},sc={kernelName:Zt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Xa(Oa(bo(mo(n))),2/Math.sqrt(Math.PI));return{x:()=>Xa(t,r)}}},ic={kernelName:Qt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,n)}}},ac={kernelName:te,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>ca(t,n.shape)}}},oc={kernelName:ee,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,Oa(n))}}},lc={kernelName:ie,gradFunc:t=>({x:()=>Jo(t)})},uc={kernelName:ae,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=pi(n.shape,r.shape);return{a:()=>{const e=Da(t,ni(r,"float32")),i=di(n.shape,s);return i.length>0?ca(Za(e,i),n.shape):e},b:()=>{let e=Xa(t,ni(n,"float32"));const i=di(r.shape,s);i.length>0&&(e=ca(Za(e,i),r.shape));const a=mo(r);return bo(Da(e,ni(a,"float32")))}}}},hc=ys({rsqrt_:function(t){const e={x:bs(t,"x","rsqrt","float32")};return us.runKernel(fn,e)}}),cc={kernelName:oe,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=e,l=null==o?Gi(1):o,u=di(i.shape,s.shape),h=[];if(1===i.rank){for(let t=0;t<s.shape.length-1;++t)h.push(s.shape[t]);h.push(1)}const c=Ya(s,i),d=Xa(t,l),p=hc(qi(a,Gi(r))),f=Xa(Xa(Xa(p,p),p),Gi(-.5));return{x:()=>1===i.rank?ca(Xa(Xa(t,za(ca(p,[1,1,1,i.shape[0]]),h)),l),s.shape):ca(Xa(Xa(t,p),l),s.shape),mean:()=>{let t=Xa(Xa(p,Gi(-1)),d);return 1===i.rank&&(t=Za(t,u)),ca(t,i.shape)},variance:()=>{let t=Xa(Xa(f,c),d);return 1===i.rank&&(t=Za(t,u)),ca(t,i.shape)},scale:()=>{const e=Xa(c,p);let n=Xa(t,e);return 1===i.rank&&(n=Za(n,u)),ca(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=Za(e,u)),ca(e,i.shape)}}}},dc=ys({unsortedSegmentSum_:function(t,e,n){const r=bs(t,"x","unsortedSegmentSum"),s=bs(e,"segmentIds","unsortedSegmentSum","int32");f(w(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},a={numSegments:n};return us.runKernel(Xn,i,a)}}),pc={kernelName:le,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:i}=n,a=C(i,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,o=e.slice(0,a),l=o.length,u=e.slice(i,e.length).slice(1),h=u.length,c=fc(0,l),d=fc(l+1,l+1+h),p=mc([o,[n],u]),f=ca(t,p),m=ca(s,[n]),g=mc([[l],c,d]),b=Qo(f,g);let x=dc(b,m,r.shape[a]);const y=po(g);return x=Qo(x,y),x},indices:()=>s}}};function fc(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function mc(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const gc={kernelName:ce,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Jo(n),b:()=>Jo(r)}}},bc={kernelName:de,gradFunc:t=>({x:()=>ni(t,"float32")})},xc={kernelName:me,gradFunc:t=>({x:()=>Jo(t)})},yc={kernelName:ge,gradFunc:t=>({x:()=>Jo(t)})},wc={kernelName:be,gradFunc:t=>({x:()=>Jo(t)})},vc={kernelName:xe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:s}=n,i=Va(r,0);return{x:()=>Zo(i,t,Xa(t,s))}}},kc={kernelName:Ie,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,qi(n,1))}}},Ic={kernelName:ke,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,ni(n,"float32"))}}},Sc={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=Oa(r);return Ya(t,Xa(Za(t,s,!0),e))}}}},Cc=ys({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,i=1,a=.5){const o={x:t,y:e,dy:n},l={depthRadius:r,bias:s,alpha:i,beta:a};return us.runKernel(Te,o,l)}}),Nc={kernelName:$e,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>Cc(r,s,t,i,a,o,l)}}};function $c(t,e,n,r){return e.rank<n.rank&&(e=ca(e,uo(e.shape,r))),t.rank<n.rank&&(t=ca(t,uo(t.shape,r))),{x:()=>Xa(t,ni(_a(n,e),t.dtype))}}const Tc={kernelName:Ee,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,i=e[0],a=$c(t,e[1],i,C(s,i.shape));return{x:()=>a.x()}}},Ec=ys({less_:function(t,e){let n=bs(t,"a","less","string_or_numeric"),r=bs(e,"b","less","string_or_numeric");[n,r]=es(n,r),pi(n.shape,r.shape);const s={a:n,b:r};return us.runKernel(ye,s)}}),Rc={kernelName:Re,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Xa(t,ni(Ga(n,r),"float32")),b:()=>Xa(t,ni(Ec(n,r),"float32"))}}},Ac=ys({maxPool3dGrad_:function(t,e,n,r,s,i,a){const o=bs(t,"dy","maxPool3dGrad"),l=bs(e,"input","maxPool3dGrad"),u=bs(n,"output","maxPool3dGrad");let h=o,c=l,d=u,p=!1;4===l.rank&&(p=!0,h=ca(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=ca(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=ca(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),f(5===h.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`)),f(5===c.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),f(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),ha("maxPool3dGrad",i,a);const m={dy:h,input:c,output:d},g={filterSize:r,strides:s,pad:i,dimRoundingMode:a},b=us.runKernel(Me,m,g);return p?ca(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),Fc={kernelName:De,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>Ac(t,r,s,i,a,o,l)}}},Dc=ys({maxPoolGrad_:function(t,e,n,r,s,i,a){const o=bs(t,"dy","maxPoolGrad"),l=bs(e,"input","maxPoolGrad"),u=bs(n,"output","maxPoolGrad");f(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),f(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),f(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),ha("maxPoolGrad",i,a);const h={dy:o,input:l,output:u},c={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return us.runKernel(Fe,h,c)}}),Mc={kernelName:Ae,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Dc(t,r,s,i,a,o)}}},_c={kernelName:Oe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n,i=C(s,r.shape),a=x(lo(r.shape,i)[1]);return{x:()=>{const e=r.shape.slice();i.forEach((t=>{e[t]=1}));const n=ca(t,e);return Da(Xa(n,vo(r.shape,"float32")),a)}}}},Oc={kernelName:Le,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[i,a]=e,o=$c(t,a,i,C(s,i.shape));return{x:()=>o.x()}}},Lc={kernelName:ze,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Xa(t,ni(Wl(n,r),"float32")),b:()=>Xa(t,ni(Va(n,r),"float32"))}}},zc={kernelName:Pe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>_o(t,i,r.shape)}}},Pc={kernelName:Be,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=pi(n.shape,r.shape);return{a:()=>{const e=di(n.shape,s);return e.length>0?ca(Za(t,e),n.shape):t},b:()=>{const e=Xa(t,bo(Ua(Da(n,r)))),i=di(r.shape,s);return i.length>0?ca(Za(e,i),r.shape):e}}}},Bc={kernelName:We,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=pi(n.shape,r.shape);return{a:()=>{const e=Xa(t,ni(r,"float32")),i=di(n.shape,s);return i.length>0?ca(Za(e,i),n.shape):e},b:()=>{const e=Xa(t,ni(n,"float32")),i=di(r.shape,s);return i.length>0?ca(Za(e,i),r.shape):e}}}},Uc={kernelName:Ve,gradFunc:t=>({x:()=>bo(t)})},Wc={kernelName:Xe,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>wo(n.shape,"float32")}}},Vc={kernelName:Ke,gradFunc:t=>({x:()=>Jo(t)})},Gc={kernelName:Ye,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return Xo(t,r).map((t=>()=>t))}},Hc={kernelName:Ze,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map((t=>t[0]));return{x:()=>_o(t,i,r.shape)}}},jc={kernelName:Je,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,i=n,a=r,o=pi(i.shape,a.shape);return{a:()=>{const e=ni(a,"float32");let n=Xa(t,Xa(e,Xl(i,Ya(e,Gi(1)))));const r=di(i.shape,o);return r.length>0&&(n=Za(n,r)),ca(n,i.shape)},b:()=>{const e=Va(i,0),n=Zo(e,ja(i),Jo(i));let r=Xa(t,Xa(s,n));const l=di(a.shape,o);return l.length>0&&(r=Za(r,l)),ca(r,a.shape)}}}},qc={kernelName:Qe,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=Va(n,0);return{x:()=>Zo(s,t,Xa(t,r)),alpha:()=>{let e=Zo(s,Jo(t),Xa(t,n));const i=di(r.shape,t.shape);return i.length>0&&(e=Za(e,i)),ca(e,r.shape)}}}},Kc={kernelName:qt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=pi(n.shape,r.shape);return{a:()=>{const e=Da(t,ni(r,"float32")),i=di(n.shape,s);return i.length>0?ca(Za(e,i),n.shape):e},b:()=>{let e=Xa(t,ni(n,"float32"));const i=di(r.shape,s);i.length>0&&(e=ca(Za(e,i),r.shape));const a=mo(r);return bo(Da(e,ni(a,"float32")))}}}},Xc={kernelName:rn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,bo(mo(n)))}}},Yc={kernelName:cn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Xa(Wl(n,6),ul(n));return{x:()=>Xa(t,ni(r,"float32"))}}},Zc={kernelName:sn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,ni(ul(n),"float32"))}}},Jc={kernelName:an,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ca(t,n.shape)}}},Qc={kernelName:un,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>us.runKernel(hn,s,n)}}},td={kernelName:on,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>us.runKernel(ln,s,n)}}},ed={kernelName:dn,gradFunc:(t,e,n)=>{const{dims:r}=n,s=C(r,t.shape);return{x:()=>Ao(t,s)}}},nd={kernelName:pn,gradFunc:t=>({x:()=>Jo(t)})},rd={kernelName:fn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>bo(Da(t,Xa(Xl(n,1.5),2)))}}},sd=ys({logicalNot_:function(t){const e={x:bs(t,"x","logicalNot","bool")};return us.runKernel(Ce,e)}}),id={kernelName:gn,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>ni(Jo(n),"float32"),t:()=>Xa(t,ni(n,t.dtype)),e:()=>Xa(t,ni(sd(n),t.dtype))}}},ad={kernelName:bn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Va(n,Gi(0)),r=Gi(Fu),s=Gi(Du),i=Xa(t,s),a=Xa(Xa(t,r),Oa(ni(n,"float32")));return Zo(e,i,a)}}}},od={kernelName:kn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,Xa(n,Ya(Gi(1),n)))}}},ld={kernelName:vn,gradFunc:t=>({x:()=>Jo(t)})},ud=ys({cos_:function(t){const e={x:bs(t,"x","cos","float32")};return us.runKernel(Mt,e)}}),hd={kernelName:yn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(ud(ni(n,"float32")),t)}}},cd=ys({cosh_:function(t){const e={x:bs(t,"x","cosh","float32")};return us.runKernel(_t,e)}}),dd={kernelName:wn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(cd(ni(n,"float32")),t)}}},pd={kernelName:xn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:i}=n,a=r.shape,[o,l]=Ri(r,s,i),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],a[e]-o[e]-l[e]]);return{x:()=>Io(t,u)}}},fd={kernelName:Tn,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,i=Xa(t,r);return{logits:()=>Ya(i,Xa(Za(i,[s],!0),r))}}},md={kernelName:In,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,Mo(n))}}},gd=ys({batchToSpaceND_:function(t,e,n){const r=bs(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));f(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),f(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),f(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const i={x:r},a={blockShape:e,crops:n};return us.runKernel(yt,i,a)}}),bd={kernelName:Nn,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>gd(t,r,s)}}},xd={kernelName:$n,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>ya(t,r)}}},yd=[wh,vh,kh,Ih,Sh,Ch,Nh,$h,Th,Eh,Rh,Ah,Dh,_h,Oh,zh,Ph,Bh,Uh,Wh,Vh,Gh,jh,Hh,Kh,Yh,Jh,tc,ec,nc,Kc,rc,sc,ic,ac,oc,uc,lc,cc,pc,gc,bc,xc,yc,wc,vc,kc,Ic,Sc,Nc,Tc,Tc,Rc,Fc,Mc,_c,Oc,Lc,zc,Pc,Bc,Uc,Wc,Vc,Gc,Hc,Hc,jc,qc,Xc,Yc,Zc,Jc,Qc,td,ed,nd,rd,id,ad,od,ld,hd,dd,pd,fd,md,bd,bd,xd,xd,{kernelName:Sn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,Xa(Vo(ni(n,"float32")),2))}}},{kernelName:Mn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Gi(2);return{a:()=>Xa(t,Xa(s,Ya(n,r))),b:()=>Xa(t,Xa(s,Ya(r,n)))}}},{kernelName:_n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(t,Xa(ni(n,"float32"),2))}}},{kernelName:Zn,gradFunc:t=>({x:()=>Jo(t)})},{kernelName:Bn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=pi(n.shape,r.shape);return{a:()=>{let e=t;const r=di(n.shape,s);return r.length>0&&(e=Za(e,r)),ca(e,n.shape)},b:()=>{let e=t;const n=di(r.shape,s);return n.length>0&&(e=Za(e,n)),ca(bo(e),r.shape)}}}},{kernelName:Cn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:i}=n;C(i,r.shape).forEach((t=>{s[t]=1}));const a=ca(t,s),o=Xa(a,vo(r.shape,"float32"));return{x:()=>o}}},{kernelName:Un,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Da(t,mo(ud(n)))}}},{kernelName:Wn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Xa(Ya(Gi(1),mo(n)),t)}}},{kernelName:Vn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=Jo(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=qi(e,_o(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)e=qi(e,_o(t,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)e=qi(e,_o(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)e=qi(e,_o(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:jn,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,i=po(s);return{x:()=>Qo(t,i)}}},{kernelName:Kn,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>Ho(t,s)}}},{kernelName:Xn,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=ro(e,Jo(e)),r=Wa(t,n);let s=Ga(e,Gi(0,"int32"));const i=r.rank-s.rank;for(let t=0;t<i;++t)s=La(s,t+1);s=Qa(s,vo(r.shape,"bool"));const a=Jo(r);return Zo(s,r,a)}(t,n)}}},{kernelName:Yn,gradFunc:t=>({x:()=>Jo(t)})}];for(const t of yd)cr(t);Hr().prototype.abs=function(){return this.throwIfDisposed(),ji(this)};const wd=ys({acos_:function(t){const e={x:bs(t,"x","acos")};return us.runKernel(et,e)}});Hr().prototype.acos=function(){return this.throwIfDisposed(),wd(this)};const vd=ys({acosh_:function(t){const e={x:bs(t,"x","acosh")};return us.runKernel(nt,e)}});Hr().prototype.acosh=function(){return this.throwIfDisposed(),vd(this)},Hr().prototype.add=function(t){return this.throwIfDisposed(),qi(this,t)},Hr().prototype.all=function(t,e){return this.throwIfDisposed(),Ki(this,t,e)},Hr().prototype.any=function(t,e){return this.throwIfDisposed(),Xi(this,t,e)},Hr().prototype.argMax=function(t){return this.throwIfDisposed(),Yi(this,t)};const kd=ys({argMin_:function(t,e=0){const n={x:bs(t,"x","argMin")},r={axis:e};return us.runKernel(lt,n,r)}});Hr().prototype.argMin=function(t){return this.throwIfDisposed(),kd(this,t)},Hr().prototype.asScalar=function(){return this.throwIfDisposed(),f(1===this.size,(()=>"The array must have only 1 element.")),ca(this,[])},Hr().prototype.asType=function(t){return this.throwIfDisposed(),ni(this,t)},Hr().prototype.as1D=function(){return this.throwIfDisposed(),ca(this,[this.size])},Hr().prototype.as2D=function(t,e){return this.throwIfDisposed(),ca(this,[t,e])},Hr().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),ca(this,[t,e,n])},Hr().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),ca(this,[t,e,n,r])},Hr().prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),ca(this,[t,e,n,r,s])};const Id=ys({asin_:function(t){const e={x:bs(t,"x","asin")};return us.runKernel(ut,e)}});Hr().prototype.asin=function(){return this.throwIfDisposed(),Id(this)};const Sd=ys({asinh_:function(t){const e={x:bs(t,"x","asinh")};return us.runKernel(ht,e)}});Hr().prototype.asinh=function(){return this.throwIfDisposed(),Sd(this)};const Cd=ys({atan_:function(t){const e={x:bs(t,"x","atan")};return us.runKernel(ct,e)}});Hr().prototype.atan=function(){return this.throwIfDisposed(),Cd(this)};const Nd=ys({atan2_:function(t,e){let n=bs(t,"a","atan2"),r=bs(e,"b","atan2");[n,r]=es(n,r);const s={a:n,b:r};return us.runKernel(pt,s)}});Hr().prototype.atan2=function(t){return this.throwIfDisposed(),Nd(this,t)};const $d=ys({atanh_:function(t){const e={x:bs(t,"x","atanh")};return us.runKernel(dt,e)}});Hr().prototype.atanh=function(){return this.throwIfDisposed(),$d(this)},Hr().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),da(this,t,e,n,r)},Hr().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),gd(this,t,e)},Hr().prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),fa(this,t,e,n,r,s)},Hr().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Yo(this,t)},Hr().prototype.cast=function(t){return this.throwIfDisposed(),ni(this,t)};const Td=ys({ceil_:function(t){const e={x:bs(t,"x","ceil","float32")};return us.runKernel(It,e)}});Hr().prototype.ceil=function(){return this.throwIfDisposed(),Td(this)},Hr().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),xa(this,t,e)},Hr().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Gr&&(t=[t]),ya([this,...t],e)},Hr().prototype.conv1d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Ca(this,t,e,n,r,s,i)},Hr().prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),$a(this,t,e,n,r,s)},Hr().prototype.conv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Sa(this,t,e,n,r,s,i)},Hr().prototype.cos=function(){return this.throwIfDisposed(),ud(this)},Hr().prototype.cosh=function(){return this.throwIfDisposed(),cd(this)},Hr().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Qh(this,t,e,n)};const Ed=ys({depthToSpace_:function(t,e,n="NHWC"){const r=bs(t,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];f(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`)),f(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),f(i*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),f(a%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:e,dataFormat:n};return us.runKernel(Pt,o,l)}});Hr().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Ed(this,t,e)},Hr().prototype.depthwiseConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Aa(this,t,e,n,r,s,i)};const Rd=ys({dilation2d_:function(t,e,n,r,s=[1,1],i="NHWC"){const a=bs(t,"x","dilation2d"),o=bs(e,"filter","dilation2d");f(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),f(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),f("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=ca(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const h={x:l,filter:o},c={strides:n,pad:r,dilations:s},d=us.runKernel(Gt,h,c);return u?ca(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Hr().prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),Rd(this,t,e,n,r,s)};const Ad=ys({divNoNan_:function(t,e){let n=bs(t,"a","div"),r=bs(e,"b","div");[n,r]=es(n,r);const s=Da(n,r),i=Jo(s),a=_a(r,i);return Zo(a,i,s)}});Hr().prototype.divNoNan=function(t){return this.throwIfDisposed(),Ad(this,t)},Hr().prototype.div=function(t){return this.throwIfDisposed(),Da(this,t)};const Fd=ys({dot_:function(t,e){const n=bs(t,"t1","dot"),r=bs(e,"t2","dot");f(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(f(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const t=ca(n,[1,-1]),e=ca(r,[-1,1]),s=to(t,e);return ca(s,[])}if(1===n.rank&&2===r.rank){const t=ca(n,[1,-1]),e=ca(r,[r.shape[0],r.shape[1]]),s=to(t,e);return ca(s,[s.size])}if(2===n.rank&&1===r.rank){const t=ca(r,[-1,1]),e=to(n,t);return ca(e,[e.size])}{const t=ca(r,[r.shape[0],r.shape[1]]);return to(n,t)}}});Hr().prototype.dot=function(t){return this.throwIfDisposed(),Fd(this,t)},Hr().prototype.elu=function(){return this.throwIfDisposed(),Ma(this)},Hr().prototype.equal=function(t){return this.throwIfDisposed(),_a(this,t)};const Dd=ys({erf_:function(t){let e=bs(t,"x","erf");f("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=ni(e,"float32"));const n={x:e};return us.runKernel(Zt,n)}});Hr().prototype.erf=function(){return this.throwIfDisposed(),Dd(this)},Hr().prototype.exp=function(){return this.throwIfDisposed(),Oa(this)},Hr().prototype.expandDims=function(t){return this.throwIfDisposed(),La(this,t)};const Md=ys({expm1_:function(t){const e={x:bs(t,"x","expm1")};return us.runKernel(ee,e)}});Hr().prototype.expm1=function(){return this.throwIfDisposed(),Md(this)},Hr().prototype.fft=function(){return this.throwIfDisposed(),rl(this)},Hr().prototype.flatten=function(){return this.throwIfDisposed(),ca(this,[this.size])},Hr().prototype.floor=function(){return this.throwIfDisposed(),Ua(this)},Hr().prototype.floorDiv=function(t){return this.throwIfDisposed(),Fa(this,t)},Hr().prototype.gather=function(t,e){return this.throwIfDisposed(),Wa(this,t,e)},Hr().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Ga(this,t)},Hr().prototype.greater=function(t){return this.throwIfDisposed(),Va(this,t)},Hr().prototype.ifft=function(){return this.throwIfDisposed(),il(this)},Hr().prototype.irfft=function(){return this.throwIfDisposed(),al(this)};const _d=ys({isFinite_:function(t){const e={x:bs(t,"x","isFinite")};return us.runKernel(me,e)}});Hr().prototype.isFinite=function(){return this.throwIfDisposed(),_d(this)};const Od=ys({isInf_:function(t){const e={x:bs(t,"x","isInf")};return us.runKernel(ge,e)}});Hr().prototype.isInf=function(){return this.throwIfDisposed(),Od(this)};const Ld=ys({isNaN_:function(t){const e={x:bs(t,"x","isNaN")};return us.runKernel(be,e)}});Hr().prototype.isNaN=function(){return this.throwIfDisposed(),Ld(this)},Hr().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Ha(this,t)},Hr().prototype.lessEqual=function(t){return this.throwIfDisposed(),Wl(this,t)},Hr().prototype.less=function(t){return this.throwIfDisposed(),Ec(this,t)};const zd=ys({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const i=bs(t,"x","localResponseNormalization");f(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),f(w(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=ca(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:n,alpha:r,beta:s},h=us.runKernel($e,l,u);return o?ca(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Hr().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),zd(this,t,e,n,r)};const Pd=ys({logSigmoid_:function(t){const e=bs(t,"x","logSigmoid"),n=Vi((t=>({value:bo(Uo(bo(t))),gradFunc:e=>Xa(e,Mo(bo(t)))})));return n(e)}});Hr().prototype.logSigmoid=function(){return this.throwIfDisposed(),Pd(this)},Hr().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Ja(this,t)},Hr().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),su(this,t,e)},Hr().prototype.log=function(){return this.throwIfDisposed(),ja(this)},Hr().prototype.log1p=function(){return this.throwIfDisposed(),qa(this)},Hr().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Qa(this,t)},Hr().prototype.logicalNot=function(){return this.throwIfDisposed(),sd(this)};const Bd=ys({logicalOr_:function(t,e){const n=bs(t,"a","logicalOr","bool"),r=bs(e,"b","logicalOr","bool");pi(n.shape,r.shape);const s={a:n,b:r};return us.runKernel(Ne,s)}});Hr().prototype.logicalOr=function(t){return this.throwIfDisposed(),Bd(this,t)};const Ud=ys({logicalXor_:function(t,e){const n=bs(t,"a","logicalXor","bool"),r=bs(e,"b","logicalXor","bool");return pi(n.shape,r.shape),Qa(Bd(t,e),sd(Qa(t,e)))}});Hr().prototype.logicalXor=function(t){return this.throwIfDisposed(),Ud(this,t)},Hr().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),to(this,t,e,n)},Hr().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),eo(this,t,e,n,r)},Hr().prototype.max=function(t,e){return this.throwIfDisposed(),Ka(this,t,e)},Hr().prototype.maximum=function(t){return this.throwIfDisposed(),ro(this,t)},Hr().prototype.mean=function(t,e){return this.throwIfDisposed(),so(this,t,e)},Hr().prototype.min=function(t,e){return this.throwIfDisposed(),Kl(this,t,e)},Hr().prototype.minimum=function(t){return this.throwIfDisposed(),io(this,t)};const Wd=ys({mirrorPad_:function(t,e,n){f("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=bs(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");f(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const s="reflect"===n?1:0;for(let t=0;t<r.rank;t++)f(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),f(e[t][0]>=0&&e[t][0]<=r.shape[t]-s&&e[t][1]>=0&&e[t][1]<=r.shape[t]-s,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-s} or less than 0 for input of shape ${r.shape}`));const i={paddings:e,mode:n},a={x:r};return us.runKernel(Pe,a,i)}});Hr().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Wd(this,t,e)};const Vd=ys({mod_:function(t,e){let n=bs(t,"a","mod"),r=bs(e,"b","mod");[n,r]=es(n,r);const s={a:n,b:r};return us.runKernel(Be,s)}});Hr().prototype.mod=function(t){return this.throwIfDisposed(),Vd(this,t)},Hr().prototype.mul=function(t){return this.throwIfDisposed(),Xa(this,t)},Hr().prototype.neg=function(){return this.throwIfDisposed(),bo(this)},Hr().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Zl(this,t,e,n)},Hr().prototype.notEqual=function(t){return this.throwIfDisposed(),xo(this,t)},Hr().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),yo(this,t,e,n)},Hr().prototype.onesLike=function(){return this.throwIfDisposed(),ko(this)},Hr().prototype.pad=function(t,e){return this.throwIfDisposed(),Io(this,t,e)};const Gd=ys({pool_:function(t,e,n,r,s,i,a){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=bs(t,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=ca(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f(la(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const h=Ji(l.shape,e,i,s,r),c=[h.dilationHeight,h.dilationWidth];let d;d="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([h.filterHeight,h.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[m,g]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),i=t.concat(r,s),a=e.map(((t,e)=>(t-i[e]%t)%t)),o=s.map(((t,e)=>t+a[e]));return[e.map(((t,e)=>[r[e],o[e]])),e.map(((t,e)=>[0,a[e]]))]}([h.inHeight,h.inWidth],c,d),b=p?r:"valid",x=p?l:Lh(l,c,m),y=("avg"===n?()=>da(x,e,i,b,a):()=>eo(x,e,i,b,a))(),w=p?y:gd(y,c,g);return u?ca(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});Hr().prototype.pool=function(t,e,n,r,s,i){return this.throwIfDisposed(),Gd(this,t,e,n,r,s,i)},Hr().prototype.pow=function(t){return this.throwIfDisposed(),Xl(this,t)},Hr().prototype.prelu=function(t){return this.throwIfDisposed(),So(this,t)};const Hd=ys({prod_:function(t,e=null,n=!1){let r=bs(t,"x","prod");"bool"===r.dtype&&(r=ni(r,"int32"));const s={x:r},i={axis:e,keepDims:n};return us.runKernel(tn,s,i)}});Hr().prototype.prod=function(t,e){return this.throwIfDisposed(),Hd(this,t,e)};const jd=ys({reciprocal_:function(t){const e={x:bs(t,"x","reciprocal")};return us.runKernel(rn,e)}});Hr().prototype.reciprocal=function(){return this.throwIfDisposed(),jd(this)},Hr().prototype.relu=function(){return this.throwIfDisposed(),Ro(this)},Hr().prototype.relu6=function(){return this.throwIfDisposed(),ll(this)},Hr().prototype.reshapeAs=function(t){return this.throwIfDisposed(),ca(this,t.shape)},Hr().prototype.reshape=function(t){return this.throwIfDisposed(),ca(this,t)},Hr().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Pl(this,t,e,n)},Hr().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Bl(this,t,e,n)},Hr().prototype.reverse=function(t){return this.throwIfDisposed(),Ao(this,t)},Hr().prototype.rfft=function(){return this.throwIfDisposed(),sl(this)},Hr().prototype.round=function(){return this.throwIfDisposed(),Vl(this)},Hr().prototype.rsqrt=function(){return this.throwIfDisposed(),hc(this)},Hr().prototype.selu=function(){return this.throwIfDisposed(),Fo(this)},Hr().prototype.separableConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Do(this,t,e,n,r,s,i)},Hr().prototype.sigmoid=function(){return this.throwIfDisposed(),Mo(this)};const qd=ys({sign_:function(t){const e={x:bs(t,"x","sign")};return us.runKernel(vn,e)}});Hr().prototype.sign=function(){return this.throwIfDisposed(),qd(this)},Hr().prototype.sin=function(){return this.throwIfDisposed(),Xh(this)},Hr().prototype.sinh=function(){return this.throwIfDisposed(),Zh(this)},Hr().prototype.slice=function(t,e){return this.throwIfDisposed(),_o(this,t,e)},Hr().prototype.softmax=function(t){return this.throwIfDisposed(),Bo(this,t)},Hr().prototype.softplus=function(){return this.throwIfDisposed(),Uo(this)},Hr().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Lh(this,t,e)},Hr().prototype.split=function(t,e){return this.throwIfDisposed(),Wo(this,t,e)},Hr().prototype.sqrt=function(){return this.throwIfDisposed(),Vo(this)},Hr().prototype.square=function(){return this.throwIfDisposed(),mo(this)},Hr().prototype.squaredDifference=function(t){return this.throwIfDisposed(),ru(this,t)},Hr().prototype.squeeze=function(t){return this.throwIfDisposed(),Go(this,t)},Hr().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Gr?[this,t]:[this,...t];return Ho(n,e)},Hr().prototype.step=function(t){return this.throwIfDisposed(),ul(this,t)};const Kd=ys({stridedSlice_:function(t,e,n,r,s=0,i=0,a=0,o=0,l=0){const u={x:bs(t,"x","stridedSlice","string_or_numeric")},h={begin:e,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return us.runKernel(On,u,h)}});Hr().prototype.stridedSlice=function(t,e,n,r,s,i,a,o){return this.throwIfDisposed(),Kd(this,t,e,n,r,s,i,a,o)},Hr().prototype.sub=function(t){return this.throwIfDisposed(),Ya(this,t)},Hr().prototype.sum=function(t,e){return this.throwIfDisposed(),Za(this,t,e)};const Xd=ys({tan_:function(t){const e={x:bs(t,"x","tan","float32")};return us.runKernel(Un,e)}});Hr().prototype.tan=function(){return this.throwIfDisposed(),Xd(this)},Hr().prototype.tanh=function(){return this.throwIfDisposed(),jo(this)},Hr().prototype.tile=function(t){return this.throwIfDisposed(),za(this,t)},Hr().prototype.toBool=function(){return this.throwIfDisposed(),ni(this,"bool")},Hr().prototype.toFloat=function(){return this.throwIfDisposed(),ni(this,"float32")},Hr().prototype.toInt=function(){return this.throwIfDisposed(),ni(this,"int32")};const Yd=ys({topk_:function(t,e=1,n=!0){const r=bs(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},a={k:e,sorted:n},[o,l]=us.runKernel(Gn,i,a);return{values:o,indices:l}}});Hr().prototype.topk=function(t,e){return this.throwIfDisposed(),Yd(this,t,e)},Hr().prototype.transpose=function(t){return this.throwIfDisposed(),Qo(this,t)};const Zd=ys({unique_:function(t,e=0){const n=bs(t,"x","unique","string_or_numeric");f(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:e},[i,a]=us.runKernel(qn,r,s);return{values:i,indices:a}}});let Jd;function Qd(){return null==Jd&&(Jd=Wi().epsilon()),Jd}Hr().prototype.unique=function(t){return this.throwIfDisposed(),Zd(this,t)},Hr().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),dc(this,t,e)},Hr().prototype.unstack=function(t){return this.throwIfDisposed(),Xo(this,t)},Hr().prototype.where=function(t,e){return this.throwIfDisposed(),Zo(t,this,e)},Hr().prototype.zerosLike=function(){return this.throwIfDisposed(),Jo(this)};class tp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,tp.prototype)}}class ep extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ep.prototype)}}class np extends Error{constructor(t){super(t),Object.setPrototypeOf(this,np.prototype)}}class rp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,rp.prototype)}}class sp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,sp.prototype)}}function ip(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function ap(t,e){if(!t)throw new sp(e)}function op(t,e){let n=0;for(const r of t)r===e&&n++;return n}function lp(t){return 1===t.length?t[0]:t}function up(t){return Array.isArray(t)?t:[t]}function hp(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function cp(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}Error;let dp={};function pp(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function fp(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>fp(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?fp(e):t[n]=e.value)}}}function mp(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let i;if(s in n)i=n[s];else if(s in dp)i=dp[s];else if(i=e[s],null==i)throw new np(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new np(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in dp?[o,l]=dp.className:a in e&&([o,l]=e[a]),null==o)throw new np(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(dp))t[e]=dp[e];for(const e of Object.keys(n))t[e]=n[e];i.config.customObjects=t;const e=Object.assign({},dp);for(const t of Object.keys(n))dp[t]=n[t];fp(i.config);const r=l(o,i.config,n,s);return dp=Object.assign({},e),r}{const t=Object.assign({},dp);for(const t of Object.keys(n))dp[t]=n[t];const e=new o(i.config);return dp=Object.assign({},t),e}}}function gp(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function bp(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function xp(t){if(null==t)throw new np(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function yp(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new np(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function wp(t,e,n=0,r=1/0){return ap(n>=0),ap(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function vp(t,e){Array.isArray(t)?(f(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>vp(t,`element ${n+1} of ${e}`)))):f(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${kp(t)}.`))}function kp(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>kp(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function Ip(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Sp(t,e){return zi((()=>Vo(Za(Xa(t,t),e,!0))))}class Cp extends Di{getConfig(){return{}}}class Np extends Cp{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return zi((()=>{const e=Sp(t,this.axis),n=xa(e,0,this.maxValue);return Xa(t,Da(n,qi(Qd(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Np.className="MaxNorm",_i(Np);class $p extends Cp{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return zi((()=>Da(t,qi(Qd(),Sp(t,this.axis)))))}getConfig(){return{axis:this.axis}}}$p.className="UnitNorm",_i($p);class Tp extends Cp{apply(t){return Ro(t)}}Tp.className="NonNeg",_i(Tp);class Ep extends Cp{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return zi((()=>{const e=Sp(t,this.axis),n=qi(Xa(this.rate,xa(e,this.minValue,this.maxValue)),Xa(1-this.rate,e));return Xa(t,Da(n,qi(Qd(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Ep.className="MinMaxNorm",_i(Ep);const Rp={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ap(t){return pp(t)}function Fp(t,e={}){return mp(t,Mi.getMap().classNameMap,e,"constraint")}function Dp(t){return null==t?null:"string"==typeof t?Fp({className:t in Rp?Rp[t]:t,config:{}}):t instanceof Cp?t:Fp(t)}const Mp=["channelsFirst","channelsLast"],_p=["nearest","bilinear"],Op=["valid","same","causal"],Lp=["max","avg"],zp=["sum","mul","concat","ave"],Pp=new Map;function Bp(t){yp(Mp,"DataFormat",t)}function Up(t){yp(Op,"PaddingMode",t)}function Wp(t){yp(Lp,"PoolMode",t)}const Vp=[];function Gp(t,e){Vp.push(t);try{const t=e();return Vp.pop(),t}catch(t){throw Vp.pop(),t}}function Hp(t){if(!Kp(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Vp.length?"":Vp.join("/")+"/")+t}function jp(t){if(!Kp(t))throw new Error("Not a valid tensor name: '"+t+"'");Pp.has(t)||Pp.set(t,0);const e=Pp.get(t);if(Pp.set(t,Pp.get(t)+1),e>0){const n=`${t}_${e}`;return Pp.set(n,1),n}return t}const qp=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Kp(t){return!!t.match(qp)}function Xp(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function Yp(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r<e&&(e=r)}return e}function Zp(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r>e&&(e=r)}return e}function Jp(t,e){if(e<t)throw new np(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Qp(t,e){return ni(t,e)}function tf(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),ca(t,n)}function ef(t,e,n){return zi((()=>{switch(t.rank){case 1:return Oo(t,e,n);case 2:return Lo(t,[e,0],[n,t.shape[1]]);case 3:return zo(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Po(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return _o(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return _o(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new np(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function nf(t,e,n){return zi((()=>{switch(t.rank){case 1:return Oo(t,e,n);case 2:return Lo(t,[0,e],[t.shape[0],n]);case 3:return zo(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Po(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new np(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function rf(t,e,n,r){return zi((()=>{switch(t.rank){case 1:return Oo(t,e,n);case 2:switch(r){case 1:return ef(t,e,n);case 2:return nf(t,e,n);default:throw new np(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ef(t,e,n);case 2:return zo(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return nf(t,e,n);default:throw new np(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ef(t,e,n);case 2:return Po(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Po(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return nf(t,e,n);default:throw new np(`The axis is not within the rank of the tensor ${r}`)}default:throw new np(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function sf(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),ya(t,e)}function af(t,e){switch(t.rank){case 1:return wa([t,e]);case 2:return va([t,e],0);case 3:return ka([t,e],0);case 4:return Ia([t,e],0);default:throw new np(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function of(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new np(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return za(t,e)}function lf(t,e=0,n=1,r,s){return To(t,e,n,r,s)}function uf(t,e,n,r){if(t.rank<2||e.rank<2)throw new rp(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new rp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return bl({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?df(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),i=s.pop();t=ca(t,[-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],h=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=ca(Qo(e,h),[l,-1]);const c=[...s,...u];return ca(bl({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?df(t.rank,r,"channelsLast"):null,activation:n}),c)}}function hf(t,e,n){return zi((()=>(e=Array.isArray(e)?qo(e,"int32"):ni(e,"int32"),Wa(t,e,n))))}function cf(t){return Xa(t,t)}function df(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new np(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?ca(e,[1,r[0],1,1,1]):ca(e,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?ca(e,[1,1,1,1,r[0]]):ca(e,[1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?ca(e,[1,r[0],1,1]):ca(e,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?ca(e,[1,1,1,r[0]]):ca(e,[1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?ca(e,[1,r[0],1]):ca(e,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?ca(e,[1,1,r[0]]):ca(e,[1].concat(r))}else if(t<3)return e;throw new np(`Unsupported input rank by biasAdd: ${e.rank}`)}function pf(t,e,n){return zi((()=>(null==n&&(n="channelsLast"),Bp(n),qi(t,df(t.rank,e,n)))))}function ff(t,e,n,r){return zi((()=>tl(t,e,n,r)))}function mf(t,e,n=!1){return n?t():e()}const gf=["fanIn","fanOut","fanAvg"],bf=["normal","uniform","truncatedNormal"];class xf extends Di{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class yf extends xf{apply(t,e){return wo(t,e)}}yf.className="Zeros",_i(yf);class wf extends xf{apply(t,e){return vo(t,e)}}wf.className="Ones",_i(wf);class vf extends xf{constructor(t){if(super(),"object"!=typeof t)throw new np(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new np(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return zi((()=>Xa(Gi(this.value),vo(t,e))))}getConfig(){return{value:this.value}}}vf.className="Constant",_i(vf);class kf extends xf{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Eo(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}kf.className="RandomUniform",_i(kf);class If extends xf{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new rp(`randomNormal does not support dType ${e}.`);return lf(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}If.className="RandomNormal",_i(If);class Sf extends xf{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new rp(`truncatedNormal does not support dType ${e}.`);return Ko(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Sf.className="TruncatedNormal",_i(Sf);class Cf extends xf{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return zi((()=>{if(2!==t.length||t[0]!==t[1])throw new np("Identity matrix initializer can only be used for 2D square matrices.");return Xa(this.gain,Pa(t[0]))}))}getConfig(){return{gain:this.gain}}}Cf.className="Identity",_i(Cf);class Nf extends xf{constructor(t){if(super(),t.scale<0)throw new np(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,yp(gf,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){yp(bf,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(Bp(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Xp(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=Xp(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=Xp(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new rp(`${this.getClassName()} does not support dType ${e}.`);return Ko(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return Eo(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Nf.className="VarianceScaling",_i(Nf);class $f extends Nf{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Nf.className}}$f.className="GlorotUniform",_i($f);class Tf extends Nf{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Nf.className}}Tf.className="GlorotNormal",_i(Tf);class Ef extends Nf{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Nf.className}}Ef.className="HeNormal",_i(Ef);class Rf extends Nf{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Nf.className}}Rf.className="HeUniform",_i(Rf);class Af extends Nf{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Nf.className}}Af.className="LeCunNormal",_i(Af);class Ff extends Nf{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Nf.className}}Ff.className="LeCunNormal",_i(Ff);class Df extends xf{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new rp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return zi((()=>{if(t.length<2)throw new rp("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=lf(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=au.gramSchmidt(e);return t[0]>t[1]&&(n=Qo(n)),Xa(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Df.className="Orthogonal",_i(Df);const Mf={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function _f(t,e={}){return mp(t,Mi.getMap().classNameMap,e,"initializer")}function Of(t){return pp(t)}function Lf(t){if("string"==typeof t){const e=t in Mf?Mf[t]:t;if("GlorotNormal"===e)return new Tf;if("GlorotUniform"===e)return new $f;if("HeNormal"===e)return new Ef;if("HeUniform"===e)return new Rf;if("LeCunNormal"===e)return new Af;if("LeCunUniform"===e)return new Ff;{const t={};return t.className=e,t.config={},_f(t)}}return t instanceof xf?t:_f(t)}let zf=0;function Pf(){return zf++}const Bf={};function Uf(t=""){return t in Bf||(Bf[t]=0),Bf[t]+=1,t+Bf[t].toString()}function Wf(t){return Array.isArray(t)&&Array.isArray(t[0])}function Vf(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Gf(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new np(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Hf(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new np(`Expected exactly 1 Shape; got ${t.length}`)}return t}function jf(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class qf{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Pf(),n=null==n?"Variable":n,this.originalName=Hp(n),this.name=jp(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(t,e=!0,n,r){return us.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Kf(t){return t.map((t=>t.read()))}function Xf(t){t.forEach((t=>{t[0].write(t[1])}))}class Yf{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Zf{constructor(t,e,n,r,s,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=Pf(),null!=i&&(this.originalName=Hp(i),this.name=jp(this.originalName)),this.rank=e.length}}let Jf=0;class Qf{constructor(t,e){this.callArgs=e,this.id=Jf++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let tm=0;class em extends Di{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=tm++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=hp(t)+"_"+Uf(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new ep(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new np(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return lp(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return lp(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new tp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new tp(`Layer ${this.name} is not connected, no input to return.`);return lp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new tp(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new tp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return lp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=up(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=up(this.inputSpec);if(t.length!==e.length)throw new np(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new np(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new np(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new np(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new np(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),i=s.axes[e],a=r>=0?t[r]:t[t.length+r];if(null!=i&&-1===[i,null].indexOf(a))throw new np(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],i=r.shape[t];if(null!=e&&null!=i&&e!==i)throw new np(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=up(t);let r=!0;for(const t of n)if(!(t instanceof Zf)){r=!1;break}let s=!0;for(const t of n)if(t instanceof Zf){s=!1;break}if(r===s)throw new np("Arguments to apply() must be all SymbolicTensors or all Tensors");return Gp(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of up(t))e.push(n.shape);this.build(lp(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=up(r),i=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(r=lp(i),null!=this.activityRegularizer)throw new rp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=up(t);const e=[];for(const n of t)e.push(n.shape);return lp(e)}(t),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Zf(i,n,this,up(t),e,this.name,r))):new Zf(i,r,this,up(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new rp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new tp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new tp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ep(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return jf(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Kf(t?this.trainableWeights:this.weights)}setWeights(t){zi((()=>{const e=this.weights;if(e.length!==t.length)throw new np(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=Kf(e);for(let s=0;s<r.length;++s){const i=r[s],a=e[s],o=t[s];if(!y(i.shape,o.shape))throw new np(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}Xf(n)}))}addWeight(t,e,n,r,s,i,a,o){if(-1!==this._addedWeightNames.indexOf(t))throw new np(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Lf("zeros"));const l=r.apply(e,n),u=new qf(l,n,t,i,a);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=up(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,i,a=null){const o=up(t);e=up(e),n=up(n),r=up(r),s=Vf(s),i=Vf(i);const l=[],u=[],h=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),h.push(t.tensorIndex);new Qf({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function nm(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=nm(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class rm extends em{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Uf("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new np("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new np("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new np("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new Zf(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Qf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new np(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function sm(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const i=t[s];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];Pi(r)}}function im(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var am;rm.className="InputLayer",_i(rm),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(am||(am={}));class om{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class lm{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class um extends om{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=zi((()=>qi(this.totals[t],Xa(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:zi((()=>{const n=Xa(Da(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Bi(e[t])})))}}class hm extends om{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!=typeof s[i]){const a=s[i];t.push(a.data()),e.push(r),n.push(i)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}class cm extends om{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||bu,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");D(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let r,s=null!=n?n():Er();return(...i)=>{const a=null!=n?n():Er();return a-s<e||(s=a,r=t(...i)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await sm(n),r.push(this.yield(t,e,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await sm(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await sm(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await sm(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await sm(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):D(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await sm(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await sm(t),await this.trainEnd(t))}}function dm(t,e){return null==t&&(t={}),t instanceof om?[t]:Array.isArray(t)&&t[0]instanceof om?t:up(t).map((t=>new cm(t,e)))}class pm{constructor(){}static registerCallbackConstructor(t,e){f(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),pm.checkForDuplicate(e),null==pm.constructors[t]&&(pm.constructors[t]=[]),pm.constructors[t].push(e)}static checkForDuplicate(t){for(const e in pm.constructors)pm.constructors[+e].forEach((e=>{if(e===t)throw new np("Duplicate callback constructor.")}))}static clear(){pm.constructors={}}static createCallbacks(t){const e=[];for(const n in pm.constructors){const r=+n;t>=r&&e.push(...pm.constructors[r])}return e.map((t=>new t))}}function fm(t,e,n,r,s,i,a,o,l){const u=new hm,h=[new um,...pm.createCallbacks(e)];null!=t&&h.push(...t),h.push(u);const c=new lm(h);return c.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:c,history:u}}function mm(t,e={},n=!1){return mp(t,Mi.getMap().classNameMap,e,"layer",n)}function gm(t,e){return zi((()=>{"float32"!==t.dtype&&(t=ni(t,"float32"));const n=Za(cf(t),e,!0),r=Ba(n.shape,Qd()),s=Vo(ro(n,r));return Da(t,s)}))}function bm(t,e){return zi((()=>so(cf(Ya(e,t)),-1)))}function xm(t,e){return zi((()=>so(ji(Ya(e,t)),-1)))}function ym(t,e){return zi((()=>{const n=Ya(t,e),r=xa(ji(t),Qd(),Number.MAX_VALUE),s=ji(Da(n,r));return Xa(100,so(s,-1))}))}function wm(t,e,n=!1){return zi((()=>{if(n)e=Bo(e);else{const t=Za(e,e.shape.length-1,!0);e=Da(e,t)}return e=xa(e,Qd(),1-Qd()),bo(Za(Xa(ni(t,"float32"),ja(e)),e.shape.length-1))}))}function vm(t,e,n=!1){return zi((()=>{const r=ni(Ua(function(t){const e=[Xp(t.shape)];return ca(t,e)}(t)),"int32"),s=(e=xa(e,Qd(),1-Qd())).shape;return wm(ca(yo(r,s[s.length-1]),s),e,n)}))}function km(t,e){return zi((()=>{let n;return n=xa(e,Qd(),1-Qd()),n=ja(Da(n,Ya(1,n))),so(function(t,e){if(!y(t.shape,e.shape))throw new np(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return zi((()=>{const n=Ro(e),r=bo(ji(e));return qi(Ya(n,Xa(e,t)),qa(Oa(r)))}))}(t,n),-1)}))}function Im(t,e){return zi((()=>{const n=gm(t,-1),r=gm(e,-1),s=Xa(n,r);return bo(Za(s,-1))}))}pm.constructors={};const Sm={meanSquaredError:bm,meanAbsoluteError:xm,meanAbsolutePercentageError:ym,meanSquaredLogarithmicError:function(t,e){return zi((()=>{const n=xa(e,Qd(),Number.MAX_VALUE),r=ja(qi(1,n)),s=xa(t,Qd(),Number.MAX_VALUE),i=ja(qi(1,s));return so(cf(Ya(r,i)),-1)}))},squaredHinge:function(t,e){return zi((()=>{const n=ro(0,Ya(1,Xa(t,e)));return so(cf(n),-1)}))},hinge:function(t,e){return zi((()=>{const n=ro(0,Ya(1,Xa(t,e)));return so(n,-1)}))},categoricalHinge:function(t,e){return zi((()=>{const n=Za(Xa(t,e),-1),r=Ka(Xa(Ya(1,t),e),-1);return ro(0,qi(1,Ya(r,n)))}))},logcosh:function(t,e){return zi((()=>{const n=Math.log(2),r=Ya(e,t),s=Ya(qi(r,Uo(Xa(-2,r))),n);return so(s,-1)}))},categoricalCrossentropy:wm,sparseCategoricalCrossentropy:vm,binaryCrossentropy:km,kullbackLeiblerDivergence:function(t,e){return zi((()=>{const n=xa(t,Qd(),1),r=xa(e,Qd(),1);return Za(Xa(t,ja(Da(n,r))),-1)}))},poisson:function(t,e){return zi((()=>{const n=ja(qi(Qd(),e));return so(Ya(e,Xa(t,n)),-1)}))},cosineProximity:Im};function Cm(t){if("string"==typeof t){if(t in Sm)return Sm[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new np(e)}return t}function Nm(t,e){return zi((()=>{const n=Xa(.5,ko(e)),r=Qp(Va(e,n),t.dtype);return so(_a(t,r),-1)}))}function $m(t,e){return zi((()=>Qp(_a(Yi(t,-1),Yi(e,-1)),"float32")))}function Tm(t,e){return km(t,e)}function Em(t,e){return t.rank===e.rank&&(t=Go(t,[t.rank-1])),(e=Yi(e,-1)).dtype!==t.dtype&&(e=ni(e,t.dtype)),ni(_a(t,e),"float32")}const Rm=wm,Am=vm,Fm={binaryAccuracy:Nm,categoricalAccuracy:$m,precision:function(t,e){return zi((()=>{const n=function(t,e){return zi((()=>ni(Za(Qa(_a(t,1),_a(e,1))),"float32")))}(t,e),r=function(t,e){return zi((()=>ni(Za(Qa(_a(t,0),_a(e,1))),"float32")))}(t,e),s=qi(n,r);return ni(Zo(Va(s,0),Da(n,s),0),"float32")}))},categoricalCrossentropy:Rm,sparseCategoricalCrossentropy:Am,mse:bm,MSE:bm,mae:xm,MAE:xm,mape:ym,MAPE:ym,cosine:Im};function Dm(t){if("string"==typeof t&&t in Fm)return Fm[t];if("string"!=typeof t&&null!=t)return t;throw new np(`Unknown metric ${t}`)}function Mm(t){if(ap(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(Sm))if(Sm[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Fm))if(Fm[n]===t){e=n;break}return void 0!==e?e:t.name}}function _m(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Om(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Om(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Om(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Om(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Lm(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function zm(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}Lm([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function Pm(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const i=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];i.push(`${n}[${r}][${s}]`)}const a=t.name,o=t.getClassName(),l=0===i.length?"":i[0];Lm([`${a} (${o})`,s,t.countParams().toString(),l],e,r);for(let t=1;t<i.length;++t)Lm(["","","",i[t]],e,r)}function Bm(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Um(t,e){if(null===t)return null;if("string"==typeof t)return cp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Bm(e,s,r)?n.push(r):n.push(Um(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=cp(n);e[t]=Um(r,t)}}return e}}function Wm(t,e){if(null==t)return null;if("string"==typeof t)return hp(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Bm(e,s,r)?n.push(r):n.push(Wm(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[hp(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Wm(r,n):r}return e}}class Vm{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Vm)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new np(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return ni(e,t.dtype)}catch(n){throw new np(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Zf){if(null==this.id2Value[t.id])throw new np(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new np(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Zf){if(null==this.id2Value[t.id])throw new np(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new np(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Pi(this.id2Mask)}}const Gm={},Hm={};function jm(t,e,n,r){const s=null!=n&&n.training,i=Array.isArray(t),a=i?t:[t],o=a.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const h=o.join(",")+"|"+e.names().join(",");let c,d;if(null==Gm[h]){const t=function(t,e){f(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=Km(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of t){const{sorted:t,recipientMap:a}=Km(i,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in a)null==r[t]&&(r[t]=new Set),a[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:qm(r)}}(a,e);c=t.sorted,d=t.recipientCounts,Gm[h]=c,Hm[h]=d}c=Gm[h],d={},s||Object.assign(d,Hm[h]);const p=new Vm(e);for(let t=0;t<c.length;++t){if(null!=r){const t=Li().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const i=c[t],a=i.sourceLayer;if(a instanceof rm)continue;const u=[],h=[],f=[];let m=!1;for(const t of i.inputs){const n=p.getValue(t),r=p.getMask(t);u.push(n),h.push(r),null!=r&&(m=!0),s||(d[t.name]--,0!==d[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=h[0]);const g=up(a.apply(u,n));let b=null;a.supportsMasking&&(b=a.computeMask(u,h));const x=Xm(i),y=Array.isArray(x)?x:[x];for(let t=0;t<y.length;++t){p.hasKey(y[t])||p.add(y[t],g[t],Array.isArray(b)?b[0]:b);const e=o.indexOf(y[t].name);-1!==e&&(l[e]=g[t])}s||Pi(f)}return p.disposeMasks(),i?l:l[0]}function qm(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Km(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const i=[],a=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=a[a.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),r.push(t),n.add(t.name),e&&a.pop();else{a.push(i.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||i.push(e)}}return{sorted:r,recipientMap:s}}function Xm(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class Ym extends em{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Uf(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],bp(this.inputs).length!==this.inputs.length)throw new np(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);bp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;ap(0===n,"input layer has >1 nodes"),ap(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof rm))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},i={},a=[],o=(t,e,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=t.sourceLayer,s=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new ep(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(Ym.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const h=u.inboundLayers.length;for(let t=0;t<h;t++){const r=u.inputTensors[t],s=u.inboundLayers[t],i=u.nodeIndices[t],a=u.tensorIndices[t];o(r,e,n,s,i,a)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const h=a.slice().reverse();for(const t of h){n[t.id]=t,t.id in e||(e[t.id]=0);let i=e[t.id];const a=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];i=Math.max(i,a),r[t.outboundLayer.id]=i,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=i;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],a=t.nodeIndices[r],o=s.inboundNodes[a],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(i+1,l),n[o.id]=o}}const c={};for(const t in e){const r=e[t];r in c||(c[r]=[]),c[r].push(n[t])}const d={};for(const t in r){const e=r[t];e in d||(d[e]=[]),d[e].push(s[t])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(gp);this.layers=[];for(const t of p){const e=d[t];e.sort(((t,e)=>{const n=i[t.id],r=i[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Ym&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(c).map((t=>parseInt(t,10))).sort(gp);const f=this.inputs.slice(),m=[];for(const t of p)for(const e of c[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new ep(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=c;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new ep(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Qf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new np("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new np(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const r in t){let i=r;if(null==n[r]){const t=r.split("/");i=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[i])s.push([n[i],t[r]]);else if(e)throw new np(`Provided weight data has no target variable: ${r}`);delete n[i]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new np(`${t.length} of ${r} weights are not set: ${t}`)}Xf(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 3.13.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Wm(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return zi((()=>{t=up(t);const n=new Vm;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return jm(this.outputs,n,e)}))}computeMask(t,e){return zi((()=>{let n;return t=up(t),n=null==e?ip(null,t.length):up(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Vf(t);if(e.length!==this.inputLayers.length)throw new np(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(gp);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],i=t.nodeIndices[e],a=t.tensorIndices[e],o=n[`${s.name}_${i}_${a}`];r.push(o)}const s=Vf(e.computeOutputShape(lp(r))),i=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${i}_${t}`]=s[t]}}const s=[],i=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;i.push(s)}for(let t=0;t<i.length;t++){const e=i[t];ap(e in n),s.push(n[e])}return lp(s)}runInternalGraph(t,e){null==e&&(e=ip(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],i=t[r],a=e[r];n[s.id]=[i,a]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(gp);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,i=new Array;for(const t of r)t.id in n&&i.push(n[t.id]);if(i.length===r.length){let r,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u.mask&&(u.mask=n),o=up(e.call(t,u)),l=up(e.computeMask(t,n)),r=[t],a=[n]}else r=i.map((t=>t[0])),a=i.map((t=>t[1])),null==u.mask&&(u.mask=a),o=up(e.call(r,u)),l=up(e.computeMask(r,a));if(e.activityRegularizer)throw new rp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],i=l[t];n[e.id]=[r,i]}}}}const s=[],i=[],a=[];for(const t of this.outputs){ap(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];a.push(e.shape),s.push(e),i.push(r)}return[s,i,a]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof Ym?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=Ym.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new np(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new np("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new np(`No such layer: ${t}`)}calculateLosses(){return zi((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=Ym.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),i=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=Ym.nodeKey(t,n);let a={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),a=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let l=e[Ym.nodeKey(s,i)];null==l&&(l=0),t.push([s.name,l,o,a])}i.push(t)}}}const a={};a.name=t.name,a.className=r,a.config=s,a.inboundNodes=i,n.push(a)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],i=Ym.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,a,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],i=Ym.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=e[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,a,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},i={};function a(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function o(t,e){const n=[];let r;for(const i of e){const o=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(t,e);const h=s[o];if(h.inboundNodes.length<=l)return void a(t,e);const c=h.inboundNodes[l];n.push(c.outputTensors[u])}n.length>0&&t.apply(lp(n),r)}function l(t){const n=t.name,i=mm(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(r),s[n]=i,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new np(`Corrupted configuration, expected array for nodeData: ${t}`);a(i,t)}))}const u=e.name,h=e.layers;for(const t of h)l(t);for(;!xp(i);)for(const t of h){const e=s[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)o(e,n)}}const c=[],d=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],r=t[2];ap(e in s);const i=s[e].inboundNodes[n].outputTensors;c.push(i[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];ap(e in s);const i=s[e].inboundNodes[n].outputTensors;d.push(i[r])}return new t({inputs:c,outputs:d,name:u})}get stateful(){if(this._stateful)throw new np("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){zi((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function Zm(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function Jm(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=zi((()=>{if(1===t.shape.length)return ri(t);if(2===t.shape.length){if(t.shape[1]>1)return Yi(t,1);if(1===t.shape[1])return ca(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());Pi(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),qo(s,"float32")}return null}function Qm(t,e){return Xa(t,e)}function tg(t,e){let n,r;const s=e;n=s.xs,r=s.ys,f(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const i=eg("input",t.inputNames,n),a=eg("output",t.outputNames,r),o=i[0].shape[0];f(i.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),f(a.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<i.length;e++)f(i[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<a.length;e++)f(a[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:i,ys:a}}function eg(t,e,n){if(n instanceof Gr)return[n];if(Array.isArray(n))return f(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new np(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function ng(t){return"function"==typeof t.iterator}function rg(t){f(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function sg(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>ef(t,e,n-e))):ef(t,e,n-e)}function ig(t,e){return zi((()=>null==t?null:Array.isArray(t)?t.map((t=>ig(t,e))):hf(t,"int32"===e.dtype?e:ni(e,"int32"))))}function ag(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}function og(t){const e=[];t instanceof Gr&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(tf(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function lg(t,e){if(null==t)return;const n=[];if(e instanceof Gr)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof Gr)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function ug(t){return Array.isArray(t)}function hg(t){return!function(t){return t instanceof Gr}(t)&&!ug(t)}function cg(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(ug(t)&&t.length>0)e=!0;else if(hg(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new np(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let i;if(hg(t)){i=[];for(const n of e){if(null==t[n])throw new np(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(ug(t)){if(t.length!==e.length)throw new np(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(e.length>1)throw new np(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=og(i),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new np(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${a.shape}`);for(let e=0;e<n[t].length;++e){if(0===e&&!r)continue;const i=a.shape[e],o=n[t][e];if(null!=o&&o>=0&&i!==o)throw new np(`${s} expected a batch of elements where each example has shape [${n[t].slice(1,n[t].length)}] (i.e.,tensor shape [*,${n[t].slice(1,n[t].length)}]) but the ${s} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function dg(t,e,n,r=!0,s=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new np(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new np(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const a=i[t];if(a.shape.length!==n[t].length)throw new np(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[t].length;++i){if(0===i&&!r)continue;const o=a.shape[i],l=n[t][i];if(null!=l&&l!==o)throw new np(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class pg extends Ym{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new np("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Output shape","Param #"];let a;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){i.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}r("_".repeat(e)),Lm(i,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?zm(o[t],n,r):Pm(o[t],n,a,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?jf(t.collectedTrainableWeights):jf(t.trainableWeights),e}(t),u=jf(t.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>mu.adagrad(.01),Adadelta:()=>mu.adadelta(1,.95,Qd()),Adam:()=>mu.adam(.001,.9,.999,Qd()),Adamax:()=>mu.adamax(.002,.9,.999,Qd(),0),RMSProp:()=>mu.rmsprop(.001,.9,0,Qd()),SGD:()=>mu.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new np(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Hi))throw new np("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new np(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>Cm(t)))}else{const n=Cm(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new np(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Cm(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Gp("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Gp("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,i;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===km?-1!==["accuracy","acc"].indexOf(a)?r=Nm:-1!==["crossentropy","ce"].indexOf(a)&&(r=Tm):this.lossFunctions[t]===vm?-1!==["accuracy","acc"].indexOf(a)?r=Em:-1!==["crossentropy","ce"].indexOf(a)&&(r=Am):-1!==["accuracy","acc"].indexOf(a)?r=$m:-1!==["crossentropy","ce"].indexOf(a)&&(r=Rm),-1!==["accuracy","acc"].indexOf(a)?s="acc":-1!==["crossentropy","ce"].indexOf(a)&&(s="ce"),i=r,n=""+s}else{const t=Dm(a);i=t,n=""+Mm(a)}let e;Gp(n,(()=>{e=i})),s(t,n,e)}})(r[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;rg(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const i=s[0].concat(s[1]);this.makeTestFunction();const a=this.testFunction;return lp(this.testLoop(a,i,r,n.verbose,n.steps))}finally{lg(s[0],t),lg(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let i=[];if(n.verbose>0)throw new rp("Verbose mode is not implemented yet.");f(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await a.next();if(i=zi((()=>{if(e.value){const{xs:n,ys:r}=tg(t,e.value),a=n.concat(r),u=zi((()=>s(a)));if(Pi(a),0===l)for(let t=0;t<u.length;++t)i.push(Gi(0));const h=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=i[t];i[t]=zi((()=>qi(i[t],Xa(h,e)))),l>0&&Pi(n)}Pi(u),o+=h,++l}return i})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=Da(i[t],o),Pi(e)}return lp(i)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new np(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new np(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new np("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),i=new Vm;if(t instanceof Gr&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new np(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new np(`No value is provided for the model's input ${e.name}`);i.add(e,n)}const a=jm(s,i);return n?a:a[0]}retrieveSymbolicTensors(t){const e=ip(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((t=>t.name));for(let r=0;r<t.length;++r){const a=i.indexOf(t[r]);if(-1!==a&&(e[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new np(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return zi((()=>{const r=this.checkNumSamples(t);if(n)throw new rp("Verbose predictLoop() is not implemented yet.");const s=ag(r,e),i=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e)zi((()=>{const n=s[e][0],r=s[e][1],i=sg(t,n,r),a=[];if(Array.isArray(i))for(let t=0;t<i.length;++t)a.push({key:this.inputs[t],value:i[t]});else a.push({key:this.inputs[0],value:i});const o=new Vm(a);return jm(this.outputs,o)})).forEach(((t,e)=>i[e].push(t)));return lp(i.map((t=>ya(t,0))))}))}predict(t,e={}){const n=og(t);dg(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return rg(r),this.predictLoop(n,r)}finally{lg(n,t)}}predictOnBatch(t){dg(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new ep("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===vm?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=bp(t.map((t=>t.shape[0])));r.sort();const s=bp(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new np(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(s.length>1)throw new np(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&s.length>0&&!y(r,s))throw new np(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=cg(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=cg(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[bm,km,wm];for(let s=0;s<t.length;++s){const i=t[s],a=e[s],o=n[s];if(null!=a){if(a===wm&&1===i.shape[i.shape.length-1])throw new np(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const t=i.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new np(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new np(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,i){const[a,o]=this.standardizeUserDataXY(t,e,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=Zm(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await Jm(o[e],null,t[e]))}return[a,o,l]}testLoop(t,e,n,r=0,s){return zi((()=>{const i=this.checkNumSamples(e,n,s,"steps"),a=[];if(r>0)throw new rp("Verbose mode is not implemented yet.");if(null!=s)throw new rp("steps mode in testLoop() is not implemented yet");{const r=ag(i,n),s=qo(Jp(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],l=ef(s,i,o-i),u=ig(e,l),h=t(u);if(0===n)for(let t=0;t<h.length;++t)a.push(Gi(0));for(let t=0;t<h.length;++t){const e=h[t];a[t]=qi(a[t],Xa(o-i,e))}}for(let t=0;t<a.length;++t)a[t]=Da(a[t],i)}return a}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;op(t,r)>1&&(s+=`_${op(t.slice(0,n),r)}`),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new Vm(t),o=jm(this.outputs,a,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=s[t]&&(n=Qm(n,s[t]));const i=so(n);e.push(i),l=0===t?n:qi(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=so(e(r[s],o[s]))}Bi(n),i.push(n)}return l=so(l),this.calculateLosses().forEach((t=>{l=qi(l,t)})),l}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=t=>zi((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const a=new Vm(i),o=jm(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],i=so(r(s[t],o[t]));n=0===t?i:qi(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],i=so(n(s[r],o[r]));e.push(i)}return e}))}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,a,o,l,u,c,d,p;t.isTraining=!0;try{const f=null==r.batchSize?32:r.batchSize;rg(f);const m=!1,g=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,m,f);s=g[0],i=g[1],p=g[2];let b,x=!1;if(null!=r.validationData&&r.validationData.length>0){if(x=!0,2!==r.validationData.length)throw 3===r.validationData.length?new rp("validationData including sample weights is not supported yet."):new np(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],u=r.validationData[1];const e=!0,n=await t.standardizeUserData(l,u,null,null,e,f);c=n[0],d=n[1],b=c.concat(d)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){x=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];c=sg(s,t,e),a=s,s=sg(s,0,t),d=sg(i,t,e),o=i,i=sg(i,0,t),b=c.concat(d)}else null!=r.validationSteps&&(x=!0);const y=s.concat(i).concat(p);t.checkTrainableWeightsConsistency();const w=t.makeTrainFunction(),v=t.getDedupedMetricsNames();let k,I;x?(t.makeTestFunction(),k=t.testFunction,I=v.slice().concat(v.map((t=>"val_"+t)))):(k=null,b=[],I=v.slice());const S=dm(r.callbacks,r.yieldEvery),C=await async function(t,e,n,r,s,i,a,o,l,u,c,d,p,f,m){null==s&&(s=32),null==i&&(i=1),null==c&&(c=!0),null==p&&(p=0);let g=!1;null!=l&&null!=u&&(g=!0);const b=t.checkNumSamples(n,s,f,"steps_per_epoch");let x;null!=b&&(x=Jp(0,b)),null==a&&(a=1);const{callbackList:y,history:w}=fm(o,a,i,p,b,f,s,g,d);y.setModel(t),t.history=w,await y.onTrainBegin(),t.stopTraining_=!1;for(let a=p;a<i;++a){await y.onEpochBegin(a);const i={};{if("batch"===c)throw new rp("batch shuffling is not implemneted yet");c&&h(x);const a=qo(x),o=ag(b,s);for(let h=0;h<o.length;++h){const c={};if(await y.onBatchBegin(h,c),zi((()=>{const d=o[h][0],p=o[h][1],f=ef(a,d,p-d);c.batch=h,c.size=p-d;const m=ig(n,f),b=e(m);for(let t=0;t<r.length;++t){const e=r[t],n=b[t];c[e]=n,Bi(n)}if(h===o.length-1&&g){const e=t.testLoop(l,u,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];Bi(s),i["val_"+n]=s}}})),await y.onBatchEnd(h,c),im(c),t.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,i),t.stopTraining_)break}return await y.onTrainEnd(),await t.history.syncData(),t.history}(t,w,y,v,f,r.epochs,r.verbose,S,k,b,r.shuffle,I,r.initialEpoch,null);return C}finally{t.isTraining=!1,lg(s,e),lg(i,n),lg(a,e),lg(o,n),lg(c,l),lg(d,u),null!=p&&Pi(p)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(f(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),f(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),f(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),f(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),f(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(ng(n.validationData))f(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new rp("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const h=dm(n.callbacks,n.yieldEvery),c=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=fm(h,c,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,s,u);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await e.iterator();for(;m<n.epochs;){const u={};await d.onEpochBegin(m);let h=0,c=0;for(r||(g=await e.iterator());!r||h<n.batchesPerEpoch;){const e=await g.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=tg(t,e.value),i={};i.batch=c,i.size=r[0].shape[0],await d.onBatchBegin(c,i);const a=[];if(null!=n.classWeight){const e=Zm(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(await Jm(s[t],null,e[t]))}const u=r.concat(s).concat(a),p=o(u);Pi(u);for(let t=0;t<l.length;++t){const e=l[t],n=p[t];i[e]=n,Bi(n)}await d.onBatchEnd(c,i),im(i),c++,h++}if(r?h>=n.batchesPerEpoch:e.done){if(s){let e;e=ng(n.validationData)?up(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):up(t.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(m,u),m++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),a=[];for(const t of i){const e=await t.data();a.push(e[0])}return Pi(i),lg(n[0],t),lg(n[1],e),lp(a)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Li().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Li().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=hp(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>hp(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=hp(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[hp(Mm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>hp(Mm(t))));{const t={};for(const e in this.metrics)t[e]=hp(Mm(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=mm(Um(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=cp(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>cp(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=cp(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>cp(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=cp(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=(n=t,Rs.getSaveHandlers(n));if(0===e.length)throw new np(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new np(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}var n;if(null==t.save)throw new np("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Is(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.13.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:n}=await Is(await this.optimizer.getWeights(),t);r.specs.push(...n),r.data=$s([r.data,e])}if(null!=this.userDefinedMetadata){const t=!0;_m(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,t.save(s)}setUserDefinedMetadata(t){_m(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}pg.className="Model",_i(pg);class fg extends pg{}fg.className="Functional",_i(fg);class mg extends pg{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Uf("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new np(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof mg||t instanceof pg;let n;if(e){if(n=t,1!==n.outputs.length)throw new np("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new np("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new np("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new np("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new rm({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new np(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new np("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=nm(this.outputs[0])}this.inboundNodes=[],new Qf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ip(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Hf(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new pg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new ep("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new ep("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new ep("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new ep("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new np("Legacy serialization format not supported yet.");s=e}else f(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,i=e;const a=new t(i);if(!(a instanceof mg))throw new rp(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const t of s){const e=mm(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),a.add(e)}return a}set stopTraining(t){if(null==this.model)throw new np("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new np("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}mg.className="Sequential",_i(mg);class gg extends Di{getConfig(){return{}}}class bg extends gg{apply(t,e=1){return function(t,e=1){if(1!==e)throw new rp(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Ma(t)}(t,e)}}bg.className="elu",_i(bg);class xg extends gg{apply(t){return Fo(t)}}xg.className="selu",_i(xg);class yg extends gg{apply(t){return Ro(t)}}yg.className="relu",_i(yg);class wg extends gg{apply(t){return zi((()=>io(6,Ro(t))))}}wg.className="relu6",_i(wg);class vg extends gg{apply(t){return t}}vg.className="linear",_i(vg);class kg extends gg{apply(t){return Mo(t)}}kg.className="sigmoid",_i(kg);class Ig extends gg{apply(t){return function(t){return zi((()=>{const e=qi(.5,Xa(.2,t));return xa(e,0,1)}))}(t)}}Ig.className="hardSigmoid",_i(Ig);class Sg extends gg{apply(t){return Uo(t)}}Sg.className="softplus",_i(Sg);class Cg extends gg{apply(t){return function(t){return zi((()=>Da(t,qi(ji(t),1))))}(t)}}Cg.className="softsign",_i(Cg);class Ng extends gg{apply(t){return jo(t)}}Ng.className="tanh",_i(Ng);class $g extends gg{apply(t,e=-1){return Bo(t,e)}}$g.className="softmax",_i($g);class Tg extends gg{apply(t,e=-1){return Ja(t,e)}}Tg.className="logSoftmax",_i(Tg);class Eg extends gg{apply(t,e=1){return zi((()=>Xa(Mo(Xa(t,e)),t)))}}Eg.className="swish",_i(Eg);class Rg extends gg{apply(t){return zi((()=>Xa(t,jo(Uo(t)))))}}function Ag(t){return t.getClassName()}function Fg(t,e={}){return mp(t,Mi.getMap().classNameMap,e,"activation")}function Dg(t){if(null==t){return Fg({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},Fg(e)}return t instanceof gg?t:Fg(t)}Rg.className="mish",_i(Rg);class Mg extends Di{}class _g extends Mg{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return zi((()=>{let e=wo([1]);return this.hasL1&&(e=qi(e,Za(Xa(this.l1,ji(t))))),this.hasL2&&(e=qi(e,Za(Xa(this.l2,cf(t))))),ca(e,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}_g.className="L1L2",_i(_g);const Og={l1l2:"L1L2"};function Lg(t){return pp(t)}function zg(t,e={}){return mp(t,Mi.getMap().classNameMap,e,"regularizer")}function Pg(t){return null==t?null:"string"==typeof t?zg({className:t in Og?Og[t]:t,config:{}}):t instanceof Mg?t:zg(t)}class Bg extends em{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Gf(t);let n=Ro(t);return null!=this.maxValue&&(n=xa(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Bg.className="ReLU",_i(Bg);class Ug extends em{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Gf(t);return Ha(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Ug.className="LeakyReLU",_i(Ug);class Wg extends em{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Lf(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Pg(t.alphaRegularizer),this.alphaConstraint=Dp(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new np(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Hf(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new Yf({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Gf(t),So(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Of(this.alphaInitializer),alphaRegularizer:Lg(this.alphaRegularizer),alphaConstraint:Ap(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Wg.className="PReLU",_i(Wg);class Vg extends em{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new rp(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Gf(t);return Ma(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Vg.className="ELU",_i(Vg);class Gg extends em{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Gf(t);return Xa(n,ni(Va(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Gg.className="ThresholdedReLU",_i(Gg);class Hg extends em{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new $g).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Gf(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function jg(t,e,n){if("number"==typeof t)return ip(t,e);if(t.length!==e)throw new np(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const i=t[s];if((r=i)!==parseInt(r.toString(),10))throw new np(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${i}`)}return t;var r}function qg(t,e,n,r,s=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((i+r-1)/r)}function Kg(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+Zp([n-e,0]);else{if("same"!==r)throw new np(`Unsupport padding mode: ${r}.`);t*=e}return t}function Xg(t,e){return zi((()=>(Bp(e),"channelsFirst"===e?Qo(t,[0,2,3,1]):t)))}function Yg(t,e){return zi((()=>(Bp(e),"channelsFirst"===e?Qo(t,[0,2,3,4,1]):t)))}function Zg(t,e,n,r=[1,1],s="valid",i,a,o=null){return zi((()=>{if(null==i&&(i="channelsLast"),Bp(i),3!==t.rank&&4!==t.rank)throw new np(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new np(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=Xg(t,i);if("causal"===s)throw new rp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=fl({x:l,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=Qo(l,[0,3,1,2])),l}))}Hg.className="Softmax",_i(Hg);class Jg extends em{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Jg.verifyArgs(e),this.rank=t,vp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new rp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=jg(e.kernelSize,t,"kernelSize"),this.strides=jg(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Up(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Bp(this.dataFormat),this.activation=Dg(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Lf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Dp(e.biasConstraint),this.biasRegularizer=Pg(e.biasRegularizer),this.activityRegularizer=Pg(e.activityRegularizer),this.dilationRate=jg(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new np(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new np(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new np(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(ap("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!wp(t.kernelSize,"number",1,3))throw new np(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ag(this.activation),useBias:this.useBias,biasInitializer:Of(this.biasInitializer),biasRegularizer:Lg(this.biasRegularizer),activityRegularizer:Lg(this.activityRegularizer),biasConstraint:Ap(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Qg extends Jg{constructor(t,e){super(t,e),this.kernel=null,Qg.verifyArgs(e),this.filters=e.filters,vp(this.filters,"filters"),this.kernelInitializer=Lf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Dp(e.kernelConstraint),this.kernelRegularizer=Pg(e.kernelRegularizer)}build(t){t=Hf(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new np(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return zi((()=>{let e;t=Gf(t);const n=null==this.bias?null:this.bias.read(),r=Ip(this.activation.getClassName());if(null!=r&&2===this.rank)e=Zg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",i,a=1){return zi((()=>{if(null==i&&(i="channelsLast"),Bp(i),3!==t.shape.length)throw new np(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new np(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new np(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=Qo(t,[0,2,1])),"causal"===s)throw new rp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Ca(t,e,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=pf(o,n)),o}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Zg(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new rp("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",i,a){return zi((()=>{if(null==i&&(i="channelsLast"),Bp(i),4!==t.rank&&5!==t.rank)throw new np(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new np(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=Yg(t,i);if("causal"===s)throw new rp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ta(o,e,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=pf(o,n)),"channelsFirst"===i&&(o=Qo(o,[0,4,1,2,3])),o}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Hf(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=qg(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Of(this.kernelInitializer),kernelRegularizer:Lg(this.kernelRegularizer),kernelConstraint:Ap(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new np(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class tb extends Qg{constructor(t){super(2,t),tb.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!wp(t.kernelSize,"number",1,2))throw new np(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}tb.className="Conv2D",_i(tb);class eb extends Qg{constructor(t){super(3,t),eb.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new np(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}eb.className="Conv3D",_i(eb);class nb extends tb{constructor(t){if(super(t),this.inputSpec=[new Yf({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new np(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Hf(t)).length)throw new np("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new np("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Yf({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return zi((()=>{let e=Gf(t);if(4!==e.shape.length)throw new np(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const a=n[s],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],c=this.strides[1],d=[r,Kg(a,h,l,this.padding),Kg(o,c,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Qo(e,[0,2,3,1]));let p=$a(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Qo(p,[0,3,1,2])),null!=this.bias&&(p=pf(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=Hf(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=Kg(e[r],o,i,this.padding),e[s]=Kg(e[s],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}nb.className="Conv2DTranspose",_i(nb);class rb extends eb{constructor(t){if(super(t),this.inputSpec=[new Yf({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new np(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=Hf(t)).length)throw new np("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new np("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Yf({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return zi((()=>{let e=Gf(t);if(5!==e.shape.length)throw new np(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,i,a;"channelsFirst"===this.dataFormat?(a=2,s=3,i=4):(a=1,s=2,i=3);const o=n[a],l=n[s],u=n[i],h=this.kernelSize[0],c=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Kg(o,p,h,this.padding),Kg(l,f,c,this.padding),Kg(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Qo(e,[0,2,3,4,1]));let b=Ra(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Qo(b,[0,4,1,2,3])),null!==this.bias&&(b=pf(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(t){const e=(t=Hf(t)).slice();let n,r,s,i;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,i=4):(n=4,r=1,s=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],c=this.strides[2];return e[n]=this.filters,e[r]=Kg(e[r],u,a,this.padding),e[s]=Kg(e[s],h,o,this.padding),e[i]=Kg(e[i],c,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}rb.className="Conv3DTranspose",_i(rb);class sb extends Qg{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new np("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new np("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new np(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Lf(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Pg(e.depthwiseRegularizer),this.depthwiseConstraint=Dp(e.depthwiseConstraint),this.pointwiseInitializer=Lf(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Pg(e.pointwiseRegularizer),this.pointwiseConstraint=Dp(e.pointwiseConstraint)}build(t){if((t=Hf(t)).length<this.rank+2)throw new np(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new np(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Yf({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return zi((()=>{let e;if(t=Gf(t),1===this.rank)throw new rp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Qo(t,[0,2,3,1])),e=Do(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=pf(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Qo(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Of(this.depthwiseInitializer),t.pointwiseInitializer=Of(this.pointwiseInitializer),t.depthwiseRegularizer=Lg(this.depthwiseRegularizer),t.pointwiseRegularizer=Lg(this.pointwiseRegularizer),t.depthwiseConstraint=Ap(this.depthwiseConstraint),t.pointwiseConstraint=Ap(this.pointwiseConstraint),t}}sb.className="SeparableConv";class ib extends sb{constructor(t){super(2,t)}}ib.className="SeparableConv2D",_i(ib);class ab extends Qg{constructor(t){super(1,t),ab.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!wp(t.kernelSize,"number",1,1))throw new np(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}ab.className="Conv1D",_i(ab);class ob extends em{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return zi((()=>{if(t=Gf(t),"channelsLast"===this.dataFormat){const e=rf(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return rf(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=rf(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return rf(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}ob.className="Cropping2D",_i(ob);class lb extends em{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Bp(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,yp(_p,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return zi((()=>{let e=Gf(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Qo(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?iu.resizeNearestNeighbor(e,[t,r]):iu.resizeBilinear(e,[t,r]);return Qo(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?iu.resizeNearestNeighbor(e,[t,r]):iu.resizeBilinear(e,[t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}lb.className="UpSampling2D",_i(lb);class ub extends Jg{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Lf(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Dp(t.depthwiseConstraint),this.depthwiseRegularizer=Pg(t.depthwiseRegularizer)}build(t){if((t=Hf(t)).length<4)throw new np(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new np(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return zi((()=>{let e=function(t,e,n=[1,1],r="valid",s,i){return zi((()=>{null==s&&(s="channelsLast"),Bp(s);let a=Xg(t,s);if(4!==t.rank)throw new np(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new np(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=Aa(a,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=Qo(a,[0,3,1,2])),a}))}(t=Gf(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=pf(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Hf(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=qg(e,this.kernelSize[0],this.padding,this.strides[0]),i=qg(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,i]:[t[0],s,i,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Of(this.depthwiseInitializer),t.depthwiseRegularizer=Lg(this.depthwiseRegularizer),t.depthwiseConstraint=Ap(this.depthwiseRegularizer),t}}function hb(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new np("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function cb(t,e,n,r=!1,s,i,a=!1,o=!1){return zi((()=>{const l=e.shape.length;if(l<3)throw new np(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Jp(2,l));if(e=Qo(e,u),null!=i)throw new rp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=ni(ni(s,"bool"),"float32")).rank===l-1&&(s=La(s,-1)),s=Qo(s,u)),r&&(e=Ao(e,0),null!=s&&(s=Ao(s,0)));const h=[];let c,d=n;const p=e.shape[0],f=Xo(e);let m,g;null!=s&&(m=Xo(s));for(let e=0;e<p;++e){const n=f[e],r=zi((()=>t(n,d)));if(null==s)c=r[0],d=r[1];else{const t=zi((()=>{const t=m[e],n=Ya(ko(t),t);return{output:qi(Xa(r[0],t),Xa(d[0],n)),newStates:d.map(((e,s)=>qi(Xa(r[1][s],t),Xa(e,n))))}}));c=t.output,d=t.newStates}o&&h.push(c)}return o&&(g=Ho(h,1)),[c,g,d]}))}ub.className="DepthwiseConv2D",_i(ub);class db extends em{constructor(t){let e;if(super(t),null==t.cell)throw new np("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new wb({cells:t.cell}):t.cell,null==e.stateSize)throw new np("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Yf({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Jp(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){Wf(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return zi((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new rp("Constants support is not implemented in RNN yet.");Wf(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Yf({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!y(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new np(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((t=>new Yf({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){zi((()=>{if(!this.stateful)throw new tp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new np("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>wo([n,t]))):this.states_=[wo([n,this.cell.stateSize])];else if(null==t)Pi(this.states_),null!=this.keptStates&&(Pi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>wo([n,t]))):this.states_[0]=wo([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new np(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Pi(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,s];if(!y(r.shape,i))throw new np(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>Bi(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=hb(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Yf({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(e.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof Zf){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return zi((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=Gf(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new np(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=cb(((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,r);const c=this.returnSequences?u:l;return this.returnState?[c].concat(h):c}))}getInitialState(t){return zi((()=>{let e=wo(t.shape);return e=Za(e,[1,2]),e=tf(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?of(e,[1,t]):e)):this.cell.stateSize>1?[of(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===db.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=mm(e.cell,n);return new t(Object.assign(e,{cell:r}))}}db.className="RNN",_i(db);class pb extends em{}class fb extends pb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,vp(this.units,"units"),this.activation=Dg(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Lf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Lf(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Lf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Pg(t.kernelRegularizer),this.recurrentRegularizer=Pg(t.recurrentRegularizer),this.biasRegularizer=Pg(t.biasRegularizer),this.kernelConstraint=Dp(t.kernelConstraint),this.recurrentConstraint=Dp(t.recurrentConstraint),this.biasConstraint=Dp(t.biasConstraint),this.dropout=Yp([1,Zp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Yp([1,Zp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Hf(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return zi((()=>{if(2!==t.length)throw new np(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vb({ones:()=>ko(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vb({ones:()=>ko(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=uf(null!=i?Xa(t,i):t,this.kernel.read()),null!=this.bias&&(s=pf(s,this.bias.read())),null!=a&&(n=Xa(n,a));let o=qi(s,uf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ag(this.activation),useBias:this.useBias,kernelInitializer:Of(this.kernelInitializer),recurrentInitializer:Of(this.recurrentInitializer),biasInitializer:Of(this.biasInitializer),kernelRegularizer:Lg(this.kernelRegularizer),recurrentRegularizer:Lg(this.recurrentRegularizer),biasRegularizer:Lg(this.biasRegularizer),activityRegularizer:Lg(this.activityRegularizer),kernelConstraint:Ap(this.kernelConstraint),recurrentConstraint:Ap(this.recurrentConstraint),biasConstraint:Ap(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}fb.className="SimpleRNNCell",_i(fb);class mb extends db{constructor(t){t.cell=new fb(t),super(t)}call(t,e){return zi((()=>{null!=this.cell.dropoutMask&&(Pi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Pi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return new t(e)}}mb.className="SimpleRNN",_i(mb);class gb extends pb{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new np("GRUCell does not support reset_after parameter set to true.");this.units=t.units,vp(this.units,"units"),this.activation=Dg(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Dg(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Lf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Lf(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Lf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Pg(t.kernelRegularizer),this.recurrentRegularizer=Pg(t.recurrentRegularizer),this.biasRegularizer=Pg(t.biasRegularizer),this.kernelConstraint=Dp(t.kernelConstraint),this.recurrentConstraint=Dp(t.recurrentConstraint),this.biasConstraint=Dp(t.biasConstraint),this.dropout=Yp([1,Zp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Yp([1,Zp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Hf(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return zi((()=>{if(2!==t.length)throw new np(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vb({ones:()=>ko(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vb({ones:()=>ko(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(t=Xa(t,s[0]));let u=uf(t,this.kernel.read());this.useBias&&(u=pf(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Xa(r,i[0]));const h=this.recurrentKernel.read(),[c,d]=Wo(h,[2*this.units,this.units],h.rank-1),p=uf(r,c),[f,m,g]=Wo(u,3,u.rank-1),[b,x]=Wo(p,2,p.rank-1);a=this.recurrentActivation.apply(qi(f,b)),o=this.recurrentActivation.apply(qi(m,x));const y=uf(Xa(o,r),d);l=this.activation.apply(qi(g,y));const w=qi(Xa(a,r),Xa(qi(1,bo(a)),l));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ag(this.activation),recurrentActivation:Ag(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Of(this.kernelInitializer),recurrentInitializer:Of(this.recurrentInitializer),biasInitializer:Of(this.biasInitializer),kernelRegularizer:Lg(this.kernelRegularizer),recurrentRegularizer:Lg(this.recurrentRegularizer),biasRegularizer:Lg(this.biasRegularizer),activityRegularizer:Lg(this.activityRegularizer),kernelConstraint:Ap(this.kernelConstraint),recurrentConstraint:Ap(this.recurrentConstraint),biasConstraint:Ap(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}gb.className="GRUCell",_i(gb);class bb extends db{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new gb(t),super(t)}call(t,e){return zi((()=>{null!=this.cell.dropoutMask&&(Pi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Pi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}bb.className="GRU",_i(bb);class xb extends pb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,vp(this.units,"units"),this.activation=Dg(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Dg(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Lf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Lf(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Lf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Pg(t.kernelRegularizer),this.recurrentRegularizer=Pg(t.recurrentRegularizer),this.biasRegularizer=Pg(t.biasRegularizer),this.kernelConstraint=Dp(t.kernelConstraint),this.recurrentConstraint=Dp(t.recurrentConstraint),this.biasConstraint=Dp(t.biasConstraint),this.dropout=Yp([1,Zp([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Yp([1,Zp([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Hf(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends xf{apply(e,r){const s=t.apply([n]),i=(new wf).apply([n]),a=t.apply([2*n]);return af(af(s,i),a)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return zi((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new np(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vb({ones:()=>ko(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vb({ones:()=>ko(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,h;0<this.dropout&&this.dropout<1&&(t=Xa(t,i[0]));let c=uf(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Xa(r,a[0])),c=qi(c,uf(r,this.recurrentKernel.read())),this.useBias&&(c=pf(c,this.bias.read()));const[d,p,f,m]=Wo(c,4,c.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=qi(Xa(l,s),Xa(o,this.activation.apply(f))),h=this.recurrentActivation.apply(m);const g=Xa(h,this.activation.apply(u));return[g,g,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ag(this.activation),recurrentActivation:Ag(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Of(this.kernelInitializer),recurrentInitializer:Of(this.recurrentInitializer),biasInitializer:Of(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Lg(this.kernelRegularizer),recurrentRegularizer:Lg(this.recurrentRegularizer),biasRegularizer:Lg(this.biasRegularizer),activityRegularizer:Lg(this.activityRegularizer),kernelConstraint:Ap(this.kernelConstraint),recurrentConstraint:Ap(this.recurrentConstraint),biasConstraint:Ap(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}xb.className="LSTMCell",_i(xb);class yb extends db{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new xb(t),super(t)}call(t,e){return zi((()=>{null!=this.cell.dropoutMask&&(Pi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Pi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}yb.className="LSTM",_i(yb);class wb extends pb{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return zi((()=>{let n=t.slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[t[0]].concat(n):[i[0]].concat(n),i=o.call(i,e),s.push(i.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[i[0]].concat(n)}))}build(t){let e;Wf(t)&&(t=t[0]),this.cells.forEach(((n,r)=>{Gp(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(mm(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Kf(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Xf(e)}}function vb(t){const{ones:e,rate:n,training:r=!1,count:s=1,dropoutFunc:i}=t,a=()=>null!=i?i(e(),n):ff(e(),n),o=()=>mf(a,e,r);return!s||s<=1?Bi(o().clone()):Array(s).fill(void 0).map(o).map((t=>Bi(t.clone())))}wb.className="StackedRNNCells",_i(wb);var kb,Ib,Sb,Cb;class Nb extends db{constructor(t){if(t.unroll)throw new rp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new rp("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Yf({ndim:5})]}call(t,e){return zi((()=>{if(null!=this.cell.dropoutMask&&(Pi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Pi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new np("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return zi((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=wo([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){zi((()=>{if(!this.stateful)throw new tp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new np("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>wo(s))):this.states_=[wo(s)];else if(null==t)Pi(this.states_),null!=this.keptStates&&(Pi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>wo(s))):this.states_[0]=wo(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new np(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Pi(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!y(n.shape,r))throw new np(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Bi(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],h=qg(l,r[0],s,i[0],a[0]),c=qg(u,r[1],s,i[1],a[1]);return[...t.slice(0,2),...o?[n,h,c]:[h,c,n]]}}Nb.className="ConvRNN2D";class $b extends xb{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:a}=t;super(Object.assign({},t,{units:e})),this.filters=e,vp(this.filters,"filters"),this.kernelSize=jg(n,2,"kernelSize"),this.kernelSize.forEach((t=>vp(t,"kernelSize"))),this.strides=jg(r||1,2,"strides"),this.strides.forEach((t=>vp(t,"strides"))),this.padding=s||"valid",Up(this.padding),this.dataFormat=i||"channelsLast",Bp(this.dataFormat),this.dilationRate=jg(a||1,2,"dilationRate"),this.dilationRate.forEach((t=>vp(t,"dilationRate")))}build(t){var e;t=Hf(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new np(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends xf{apply(t,e){return sf([n.apply([r]),vo([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return zi((()=>{if(3!==t.length)throw new np(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=vb({ones:()=>ko(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=(t,e,n)=>e&&e[n]?Xa(e[n],t):t;let l=o(r,a,0),u=o(r,a,1),h=o(r,a,2),c=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=vb({ones:()=>ko(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[b,x,y,w]=Wo(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?Wo(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,v,this.padding),u=this.inputConv(u,x,k,this.padding),h=this.inputConv(h,y,I,this.padding),c=this.inputConv(c,w,S,this.padding);const[C,N,$,T]=Wo(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,N),m=this.recurrentConv(m,$),g=this.recurrentConv(g,T);const E=this.recurrentActivation.apply(qi(l,p)),R=this.recurrentActivation.apply(qi(u,f)),A=qi(Xa(R,i),Xa(E,this.activation.apply(qi(h,m)))),F=Xa(this.recurrentActivation.apply(qi(c,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n}(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=Sa(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?pf(s,n,this.dataFormat):s}recurrentConv(t,e){return Sa(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}$b.className="ConvLSTM2DCell",_i($b);class Tb extends Nb{constructor(t){const e=new $b(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Tb.className="ConvLSTM2D",_i(Tb);class Eb extends em{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return zi((()=>{this.invokeCallHook(t,e);const n=Gf(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return mf((()=>ff(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Eb.className="Dropout",_i(Eb);class Rb extends Eb{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Rb.className="SpatialDropout1D",_i(Rb);class Ab extends em{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,vp(this.units,"units"),this.activation=Dg(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Lf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Lf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Dp(t.kernelConstraint),this.biasConstraint=Dp(t.biasConstraint),this.kernelRegularizer=Pg(t.kernelRegularizer),this.biasRegularizer=Pg(t.biasRegularizer),this.activityRegularizer=Pg(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Hf(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Hf(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return zi((()=>{this.invokeCallHook(t,e);const n=Gf(t),r=Ip(this.activation.getClassName());let s;return null!=r?s=uf(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=uf(n,this.kernel.read()),null!=this.bias&&(s=pf(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Ag(this.activation),useBias:this.useBias,kernelInitializer:Of(this.kernelInitializer),biasInitializer:Of(this.biasInitializer),kernelRegularizer:Lg(this.kernelRegularizer),biasRegularizer:Lg(this.biasRegularizer),activityRegularizer:Lg(this.activityRegularizer),kernelConstraint:Ap(this.kernelConstraint),biasConstraint:Ap(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Ab.className="Dense",_i(Ab);class Fb extends em{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Hf(t);for(const e of t.slice(1))if(null==e)throw new np(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Xp(t,1)]}call(t,e){return zi((()=>{this.invokeCallHook(t,e);let n=Gf(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=Qo(n,t)}return function(t){if(t.rank<=1)throw new np(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Xp(t.shape,1)];return ca(t,e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Fb.className="Flatten",_i(Fb);class Db extends em{constructor(t){super(t),this.supportsMasking=!0,this.activation=Dg(t.activation)}call(t,e){return zi((()=>{this.invokeCallHook(t,e);const n=Gf(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Ag(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Db.className="Activation",_i(Db);class Mb extends em{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return zi((()=>{return t=Gf(t),e=t,n=this.n,zi((()=>{if(2!==e.shape.length)throw new np(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return of(tf(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Mb.className="RepeatVector",_i(Mb);class _b extends em{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,i=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==i)throw new np("Can only specifiy one unknown dimension.");i=t}else s*=e}const a=Xp(t);if(null!==i){if(0===s||a%s!=0)throw new np(n);r[i]=a/s}else if(a!==s)throw new np(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return zi((()=>{this.invokeCallHook(t,e);const n=Gf(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return ca(n,s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}_b.className="Reshape",_i(_b);class Ob extends em{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Jp(1,t.dims.length+1);if(!y(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Yf({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Hf(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return Qo(Gf(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Ob.className="Permute",_i(Ob);class Lb extends em{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Gf(t);return Xi(xo(n,this.maskValue),-1)}call(t,e){return zi((()=>{this.invokeCallHook(t,e);const n=Gf(t),r=Xi(xo(n,this.maskValue),-1,!0);return Xa(n,ni(r,n.dtype))}))}}Lb.className="Masking",_i(Lb);class zb extends em{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(up(t.inputLength))}this.inputDim=t.inputDim,vp(this.inputDim,"inputDim"),this.outputDim=t.outputDim,vp(this.outputDim,"outputDim"),this.embeddingsInitializer=Lf(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Pg(t.embeddingsRegularizer),this.activityRegularizer=Pg(t.activityRegularizer),this.embeddingsConstraint=Dp(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return zi((()=>this.maskZero?(t=Gf(t),xo(t,Jo(t))):null))}computeOutputShape(t){if(t=Hf(t),null==this.inputLength)return[...t,this.outputDim];const e=up(this.inputLength);if(e.length!==t.length-1)throw new np(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],i=t[r+1];if(null!=s&&null!=i&&s!==i)throw new np(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return zi((()=>{this.invokeCallHook(t,e);let n=Gf(t);"int32"!==n.dtype&&(n=Qp(n,"int32"));const r=hf(this.embeddings.read(),ca(n,[n.size]));return ca(r,Hf(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Of(this.embeddingsInitializer),embeddingsRegularizer:Lg(this.embeddingsRegularizer),activityRegularizer:Lg(this.activityRegularizer),embeddingsConstraint:Ap(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}zb.className="Embedding",_i(zb);class Pb extends em{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new rp}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],i=e[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new np("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Hf(t)]),t.length<2)throw new np(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=bp(e),e.length>1)throw new np(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===bp(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return zi((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=Zp(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=tf(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],i=t.slice(1).concat([s]);let a=ca(r,[s].concat(Xp(t.slice(1))));a=Qo(a,[1,0]),a=ca(a,i),e.push(a),n=!0}else if(t>1){const s=Jp(1,t).concat([0]);e.push(Qo(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=ca(Qo(ca(r,[-1,e]),[1,0]),n)}else if(s>1){const t=[s-1].concat(Jp(0,s-1));r=Qo(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=bp(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return zi((()=>{if(null==e)return null;if(!Array.isArray(e))throw new np("`mask` should be an Array");if(!Array.isArray(t))throw new np("`inputs` should be an Array");if(e.length!==t.length)throw new np(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:La(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Qa(n,e[t]);return n}))}}class Bb extends Pb{constructor(t){super(t)}mergeFunction(t){return zi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=qi(e,t[n]);return e}))}}Bb.className="Add",_i(Bb);class Ub extends Pb{constructor(t){super(t)}mergeFunction(t){return zi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Xa(e,t[n]);return e}))}}Ub.className="Multiply",_i(Ub);class Wb extends Pb{constructor(t){super(t)}mergeFunction(t){return zi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=qi(e,t[n]);return Xa(1/t.length,e)}))}}Wb.className="Average",_i(Wb);class Vb extends Pb{constructor(t){super(t)}mergeFunction(t){return zi((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ro(e,t[n]);return e}))}}Vb.className="Maximum",_i(Vb);class Gb extends Pb{constructor(t){super(t)}mergeFunction(t){return zi((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=io(e,t[n]);return e}))}}Gb.className="Minimum",_i(Gb);class Hb extends Pb{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new np("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(y(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new np("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return zi((()=>sf(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new np("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new np("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new np("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new np(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return zi((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(ni(ko(t[n]),"bool")):e[n].rank<t[n].rank?r.push(La(e[n],-1)):r.push(e[n]);const s=ya(r,this.axis);return Ki(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function jb(t,e){for(;t<0;)t+=e;return t}Hb.className="Concatenate",_i(Hb);class qb extends Pb{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){f(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new rp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new np(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new np(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>jb(e,t[n].shape.length))):[jb(this.axes,n.shape.length),jb(this.axes,r.shape.length)],this.normalize&&(n=gm(n,e[0]),r=gm(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new rp("batchDot is not implemented for tensors of 4D or higher rank yet");if(f(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),f(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new rp("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return zi((()=>{let n,a;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=ca(e,e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=ca(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=i[0]===i[1]?Za(Xa(t,e),i[0]):Za(Xa(Qo(t,[1,0]),e),i[1]);else{const n=i[0]!==t.shape.length-1,r=i[1]===e.shape.length-1;a=to(t,e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=Go(a,e)}return 1===a.shape.length&&(a=La(a,1)),a}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[jb(this.axes,t.length),jb(this.axes,e.length)],n}computeOutputShape(t){f(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new rp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}qb.className="Dot",_i(qb);class Kb extends em{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return zi((()=>{this.invokeCallHook(t,e);const n=Gf(t);return mf((()=>qi(lf(n.shape,0,this.stddev),n)),(()=>n),e.training||!1)}))}}Kb.className="GaussianNoise",_i(Kb);class Xb extends em{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return zi((()=>{this.invokeCallHook(t,e);const n=Gf(t);return this.rate>0&&this.rate<1?mf((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return Xa(n,lf(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}Xb.className="GaussianDropout",_i(Xb);class Yb extends em{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Gf(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return zi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return mf((()=>{const e=Gf(t),r=-1.7580993408473766;let s=Ga(Eo(n),this.rate);s=Qp(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-i*r*this.rate,o=qi(Xa(e,s),Xa(qi(s,-1),r));return qi(Xa(o,i),a)}),(()=>Gf(t)),e.training||!1)}return t}))}}function Zb(t,e,n,r,s,i=.001){let a;if(2===t.rank)a=ma(t,e,n,r,s,i);else if(3===t.rank)a=ga(t,e,n,r,s,i);else{if(4!==t.rank)throw new rp(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=ba(t,e,n,r,s,i)}return a}Yb.className="AlphaDropout",_i(Yb);class Jb extends em{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Lf(t.betaInitializer||"zeros"),this.gammaInitializer=Lf(t.gammaInitializer||"ones"),this.movingMeanInitializer=Lf(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Lf(t.movingVarianceInitializer||"ones"),this.betaConstraint=Dp(t.betaConstraint),this.gammaConstraint=Dp(t.gammaConstraint),this.betaRegularizer=Pg(t.betaRegularizer),this.gammaRegularizer=Pg(t.gammaRegularizer)}build(t){t=Hf(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new np(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Yf({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return zi((()=>{const n=null!=e.training&&e.training,r=Gf(t),s=r.shape,i=s.length,a=Jp(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=ip(1,i);l[o]=s[o];const u=a.slice();u.sort();const h=!y(u,Jp(0,i).slice(0,i-1));if(!n)return(()=>{if(h){const t=ca(this.movingMean.read(),l),e=ca(this.movingVariance.read(),l),n=this.center?ca(this.beta.read(),l):null,s=this.scale?ca(this.gamma.read(),l):null;return Zb(r,t,e,n,s,this.epsilon)}return Zb(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[c,d,p]=function(t,e,n,r,s=.001){return y(r.slice().sort(),Jp(0,t.rank-1))?function(t,e,n,r,s=.001){return zi((()=>{const i=go(t,r),a=i.mean,o=i.variance;return[Zb(t,a,o,n,e,s),a,o]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return zi((()=>{const i=go(t,r),a=i.mean,o=i.variance,l=[];for(const e of Jp(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=ca(a,l),h=ca(o,l),c=null==e?null:ca(e,l),d=null==n?null:ca(n,l);return[Zb(t,u,h,d,c,s),a,o]}))}(t,e,n,r,s)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{zi((()=>{const r=1-n,s=t.read(),i=Xa(Ya(s,e),r);t.write(Ya(s,i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),c}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Of(this.betaInitializer),gammaInitializer:Of(this.gammaInitializer),movingMeanInitializer:Of(this.movingMeanInitializer),movingVarianceInitializer:Of(this.movingVarianceInitializer),betaRegularizer:Lg(this.betaRegularizer),gammaRegularizer:Lg(this.gammaRegularizer),betaConstraint:Ap(this.betaConstraint),gammaConstraint:Ap(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Jb.className="BatchNormalization",_i(Jb);class Qb extends em{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Lf(t.betaInitializer||"zeros"),this.gammaInitializer=Lf(t.gammaInitializer||"ones"),this.betaRegularizer=Pg(t.betaRegularizer),this.gammaRegularizer=Pg(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Hf(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==bp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Gf(t),r=n.shape,s=r.length;return zi((()=>{let{mean:t,variance:e}=go(n,this.axis,!0);const i=ip(1,s);for(const t of this.axis)i[t]=r[t];const a=t=>null!=t&&t.shape.length!==s?ca(t,i):t;let o=a(this.gamma.read()),l=a(this.beta.read());const u=[],h=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(u.push(r[t]),h.push(1)):(u.push(1),h.push(r[t]));return t=za(t,u),e=za(e,u),o=za(o,h),l=za(l,h),Zb(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Of(this.betaInitializer),gammaInitializer:Of(this.gammaInitializer),betaRegularizer:Lg(this.betaRegularizer),gammaRegularizer:Lg(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Qb.className="LayerNormalization",_i(Qb);class tx extends em{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new np(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new np(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new np(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Yf({ndim:4})]}computeOutputShape(t){let e,n;return t=Hf(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return zi((()=>{return e=Gf(t),n=this.padding,r=this.dataFormat,zi((()=>{if(4!==e.rank)throw new np(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new np("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new np(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Io(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function ex(t,e,n,r,s,i){return zi((()=>{let a;Bp(s),Wp(i),Up(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Xg(t,s);const o="same"===r?"same":"valid";return a="max"===i?eo(t,e,n,o):da(t,e,n,o),"channelsFirst"===s&&(a=Qo(a,[0,3,1,2])),a}))}function nx(t,e,n,r,s,i){return zi((()=>{let a;Bp(s),Wp(i),Up(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Yg(t,s);const o="same"===r?"same":"valid";return a="max"===i?no(t,e,n,o):pa(t,e,n,o),"channelsFirst"===s&&(a=Qo(a,[0,4,1,2,3])),a}))}tx.className="ZeroPadding2D",_i(tx);class rx extends em{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new np(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(vp(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new np(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}vp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Up(this.padding),this.inputSpec=[new Yf({ndim:3})]}computeOutputShape(t){const e=qg((t=Hf(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return zi((()=>{this.invokeCallHook(t,e),t=tf(Gf(t),2);const n=this.poolingFunction(Gf(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Go(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class sx extends rx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bp(s),Up(r),ex(t,e,n,r,s,"max")}}sx.className="MaxPooling1D",_i(sx);class ix extends rx{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bp(s),Up(r),ex(t,e,n,r,s,"avg")}}ix.className="AveragePooling1D",_i(ix);class ax extends em{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new np(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];vp(this.poolSize,"poolSize"),vp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Bp(this.dataFormat),Up(this.padding),this.inputSpec=[new Yf({ndim:4})]}computeOutputShape(t){t=Hf(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=qg(e,this.poolSize[0],this.padding,this.strides[0]),n=qg(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return zi((()=>(this.invokeCallHook(t,e),this.poolingFunction(Gf(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ox extends ax{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bp(s),Up(r),ex(t,e,n,r,s,"max")}}ox.className="MaxPooling2D",_i(ox);class lx extends ax{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bp(s),Up(r),ex(t,e,n,r,s,"avg")}}lx.className="AveragePooling2D",_i(lx);class ux extends em{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new np(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];vp(this.poolSize,"poolSize"),vp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Bp(this.dataFormat),Up(this.padding),this.inputSpec=[new Yf({ndim:5})]}computeOutputShape(t){t=Hf(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=qg(e,this.poolSize[0],this.padding,this.strides[0]),n=qg(n,this.poolSize[1],this.padding,this.strides[1]),r=qg(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return zi((()=>(this.invokeCallHook(t,e),this.poolingFunction(Gf(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class hx extends ux{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bp(s),Up(r),nx(t,e,n,r,s,"max")}}hx.className="MaxPooling3D",_i(hx);class cx extends ux{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return Bp(s),Up(r),nx(t,e,n,r,s,"avg")}}cx.className="AveragePooling3D",_i(cx);class dx extends em{constructor(t){super(t),this.inputSpec=[new Yf({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new rp}}class px extends dx{constructor(t){super(t||{})}call(t,e){return zi((()=>{const e=Gf(t);return so(e,1)}))}}px.className="GlobalAveragePooling1D",_i(px);class fx extends dx{constructor(t){super(t||{})}call(t,e){return zi((()=>{const e=Gf(t);return Ka(e,1)}))}}fx.className="GlobalMaxPooling1D",_i(fx);class mx extends em{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Bp(this.dataFormat),this.inputSpec=[new Yf({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new rp}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class gx extends mx{call(t,e){return zi((()=>{const e=Gf(t);return"channelsLast"===this.dataFormat?so(e,[1,2]):so(e,[2,3])}))}}gx.className="GlobalAveragePooling2D",_i(gx);class bx extends mx{call(t,e){return zi((()=>{const e=Gf(t);return"channelsLast"===this.dataFormat?Ka(e,[1,2]):Ka(e,[2,3])}))}}bx.className="GlobalMaxPooling2D",_i(bx);class xx extends em{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=mm(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class yx extends xx{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Hf(t)).length<3)throw new np(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Hf(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return zi((()=>cb(((t,n)=>[Gf(this.layer.call(t,e)),[]]),t=Gf(t),[],!1,null,null,!1,!0)[1]))}}yx.className="TimeDistributed",_i(yx);class wx extends xx{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=mm(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=mm(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,yp(zp,"BidirectionalMergeMode",s),t.weights)throw new rp("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),e=s[0]):e=s[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):lp(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=hb(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const i=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new np("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const r=n.map((t=>new Yf({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),a.push(...r)}if(null!=r)throw new rp("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof Zf;for(const t of i)if(t instanceof Zf!==o)throw new np("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return zi((()=>{const n=e.initialState;let r,s,i,a;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Ao(s,1)),"concat"===this.mergeMode?a=sf([r,s]):"sum"===this.mergeMode?a=qi(r,s):"ave"===this.mergeMode?a=Xa(.5,qi(r,s)):"mul"===this.mergeMode?a=Xa(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Gp(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Gp(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=mm(e.layer);if(delete e.layer,null!=e.numConstants)throw new rp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function vx(t,e,n=new Map,r=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Cx(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const a=vx(t[i],e,n,r);s[i]=a}return r.delete(t),t.__proto__&&(s.__proto__=t.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function kx(t,e=Sx){return Ix(t,e)}function Ix(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Cx(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=Ix(t.map((t=>t[i])),e,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Sx(t){return null===t?null:Cx(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Cx(t){let e=!1;if(X().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:r}=n(589);e=t instanceof r}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Gr)&&!(t instanceof Promise)&&!e)}function Nx(t){return vx(t,$x)}function $x(t){return t instanceof Gr?{value:t.clone(),recurse:!1}:Cx(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}wx.className="Bidirectional",_i(wx),X().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(kb||(kb={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(Ib||(Ib={}));class Tx{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class Ex extends Tx{constructor(){super(Ex.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Ex.INITIAL_CAPACITY=32;class Rx{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Px(this,t)}filter(t){return new Lx(this,t)}map(t){return new zx(this,t)}mapAsync(t){return new Bx(this,t)}serialMapAsync(t){return new Bx(this,t).serial()}flatmap(t){return new Wx(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new Ox(this,t,e)}columnMajorBatch(t,e=!0,n=Sx){return this.rowMajorBatch(t,e).map((t=>kx(t,n)))}concatenate(t,e){return new Vx(new Ax([this,t]),e)}take(t){return t<0||null==t?this:new _x(this,t)}skip(t){return t<0||null==t?this:new Mx(this,t)}prefetch(t){return new Gx(this,t)}shuffle(t,e){return new Hx(this,t,e)}serial(){return new Dx(this)}}class Ax extends Rx{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:Nx(t),done:!1}}}class Fx extends Rx{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class Dx extends Rx{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Mx extends Rx{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Pi(t.value)}return this.upstream.next()}}class _x extends Rx{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Ox extends Rx{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class Lx extends Rx{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Pi(t.value)}}}class zx extends Rx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=rs(t.value),n=this.transform(t.value),r=rs(n);for(const t of e)ns(t,r)||t.dispose();return{value:n,done:!1}}}class Px extends Rx{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Bx extends Rx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=rs(t.value),n=await this.transform(t.value),r=rs(n);for(const t of e)ns(t,r)||t.dispose();return{value:n,done:!1}}}class Ux extends Rx{constructor(){super(),this.outputQueue=new Ex,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Wx extends Ux{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=rs(t.value),n=this.transform(t.value),r=rs(n);this.outputQueue.pushAll(n);for(const t of e)ns(t,r)||t.dispose();return!0}}class Vx extends Rx{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(Cb=Sb||(Sb={}))[Cb.FAIL=0]="FAIL",Cb[Cb.SHORTEST=1]="SHORTEST",Cb[Cb.LONGEST=2]="LONGEST";class Gx extends Rx{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Tx(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class Hx extends Gx{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Co.alea(n||Er().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class jx{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return f(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),qx((async()=>(await n.iterator()).columnMajorBatch(t,e,Kx)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,qx((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,qx((async()=>(await e.iterator()).filter((e=>zi((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return qx((async()=>(await e.iterator()).map((e=>zi((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return qx((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return qx((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,qx((async()=>{return n=(s=async()=>({value:await e.iterator(),done:!1}),new Fx(s)).take(t),new Vx(n,r);var n,r,s}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,qx((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Co.alea(e||Er().toString());return qx((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,qx((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function qx(t,e=null){return new class extends jx{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Kx(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof Gr||R(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Gr?Ho(t):ks(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function Xx(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&f("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}jx.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Yx=yh;class Zx extends l{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new o(this,Oi())}nextDataId(){return Zx.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,X().get("IS_NODE")&&rr("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&F(n[0])){const s=n.map((t=>Rr(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r,s){this.data.set(t,{values:e,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?Bu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>Ar(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return ei(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Oi().makeTensorFromDataId(r,e,n,this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Er();return t(),{kernelMs:Er()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Xx([t],"where");const e=this.readSync(t.dataId);return Yx(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Jx(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(Xx(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=x(a.shape),h=n||a.dtype,c=T(h,u);for(let t=0;t<u;++t)c[t]=e(l[t],s);return o.makeTensorInfo(a.shape,h,c)}}function Qx(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(Xx(a,t),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=n||a.dtype,h=e(l,u,s);return o.makeTensorInfo(a.shape,u,h)}}Zx.nextDataId=0,Ui("cpu",(()=>new Zx),1);const ty=Jx(Xt,(t=>t>=0?t:Math.exp(t)-1)),ey={kernelName:Xt,backendName:"cpu",kernelFunc:ty};function ny(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const ry={kernelName:de,backendName:"cpu",kernelFunc:ny};function sy(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r;Xx([s],"leakyRelu");const a=x(s.shape),o=n.data.get(s.dataId).values,l=$("float32",a);for(let t=0;t<o.length;t++)l[t]=o[t]<0?i*o[t]:o[t];return n.makeTensorInfo(s.shape,"float32",l)}const iy={kernelName:xe,backendName:"cpu",kernelFunc:sy};function ay(t){return(e,n,r,s,i)=>{const a=pi(e,n),o=a.length,l=L(a),u=$(i,x(a)),h=e.length,c=n.length,d=L(e),p=L(n),f=ci(e,a),m=ci(n,a);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<u.length;++e){const n=H(e,o,l),i=n.slice(-h);f.forEach((t=>i[t]=0));const a=G(i,h,d),g=n.slice(-c);m.forEach((t=>g[t]=0));const b=G(g,c,p);u[e]=t(r[a],s[b])}return[u,a]}}const oy=ay(((t,e)=>t<0?e*t:t));function ly(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;Xx([r,s],"prelu");const i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[o,l]=oy(r.shape,s.shape,i,a,"float32");return n.makeTensorInfo(l,"float32",o)}const uy={kernelName:Qe,backendName:"cpu",kernelFunc:ly},hy=Jx(sn,(t=>Math.max(0,t))),cy={kernelName:sn,backendName:"cpu",kernelFunc:hy},dy=Jx(cn,(t=>Math.min(Math.max(0,t),6))),py={kernelName:cn,backendName:"cpu",kernelFunc:dy};function fy(t){return(e,n,r)=>{const s=$(n,e.length);for(let n=0;n<e.length;++n)s[n]=t(e[n],r);return s}}const my=fy((t=>1/(1+Math.exp(-t)))),gy=Jx(kn,(t=>1/(1+Math.exp(-t)))),by={kernelName:kn,backendName:"cpu",kernelFunc:gy};function xy(t,e,n,r,s){if("linear"===n)return ny({inputs:{x:e},backend:t});if("relu"===n)return hy({inputs:{x:e},backend:t});if("elu"===n)return ty({inputs:{x:e},backend:t});if("relu6"===n)return dy({inputs:{x:e},backend:t});if("prelu"===n)return ly({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return sy({inputs:{x:e},backend:t,attrs:{alpha:s}});if("sigmoid"===n)return gy({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function yy(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",a)},o}const wy={kernelName:Ct,backendName:"cpu",kernelFunc:yy};function vy(t,e,n="float32"){if("complex64"===n)return yy({inputs:{real:vy(t,e,"float32"),imag:vy(t,e,"float32")},backend:t});const r=U(x(e),n);return t.makeTensorInfo(e,n,r)}function ky(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const Iy={kernelName:nn,backendName:"cpu",kernelFunc:ky};function Sy(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return ny({inputs:{x:s},backend:n});const t=vy(n,s.shape,s.dtype),e=Sy({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=yy({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=ky({inputs:{input:s},backend:n}),e=Sy({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),e}if(!E(s.dtype,i)){const t=ny({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===i){const t=n.data.get(s.dataId).values,e=Tr([0],s.dtype),[r,i]=ay(((t,e)=>t!==e?1:0))(s.shape,[],t,e,"bool");return n.makeTensorInfo(i,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const Cy={kernelName:kt,backendName:"cpu",kernelFunc:Sy};function Ny(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:a}=n,o=s;Xx([i,a],t);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,h="string"===i.dtype?bh(l):l,c="string"===i.dtype?bh(u):u,d=r||i.dtype,[p,f]=e(i.shape,a.shape,h,c,d);return o.makeTensorInfo(f,d,p)}:({inputs:t,backend:s})=>{const{a:i,b:a}=t,o=s;if("complex64"===i.dtype||"complex64"===a.dtype){const t=Sy({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,h=Sy({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),c=o.data.get(h.dataId),d=c.complexTensorInfos.real,p=c.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,x]=n(i.shape,a.shape,l,u,f,m),y=o.makeTensorInfo(x,"float32",g),w=o.makeTensorInfo(x,"float32",b),v=yy({inputs:{real:y,imag:w},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(w),v}{const t=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,s=r||i.dtype,[l,u]=e(i.shape,a.shape,t,n,s);return o.makeTensorInfo(u,s,l)}}}function $y(t){return(e,n,r,s,i,a)=>{const o=pi(e,n),l=x(o),u=o.length,h=L(o),c=$("float32",l),d=$("float32",l),p=ci(e,o),f=ci(n,o),m=Bu(r,s),g=Bu(i,a),b=e.length,y=L(e),w=n.length,v=L(n);if(p.length+f.length===0)for(let e=0;e<c.length;e++){const n=e%m.length,r=e%g.length,s=t(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);c[e]=s.real,d[e]=s.imag}else for(let e=0;e<c.length;e++){const n=H(e,u,h),r=n.slice(-b);p.forEach((t=>r[t]=0));const s=G(r,b,y),i=n.slice(-w);f.forEach((t=>i[t]=0));const a=G(i,w,v),o=t(m[2*s],m[2*s+1],g[2*a],g[2*a+1]);c[e]=o.real,d[e]=o.imag}return[c,d,o]}}const Ty=ay(((t,e)=>t+e)),Ey=$y(((t,e,n,r)=>({real:t+n,imag:e+r}))),Ry=Ny(rt,Ty,Ey),Ay={kernelName:rt,backendName:"cpu",kernelFunc:Ry};function Fy(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,a=x(s.shape),o=S(i,a),l=x(o);f(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Dy={kernelName:an,backendName:"cpu",kernelFunc:Fy};function My(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;Xx([s,i],"matMul");const l=s.shape.length,u=i.shape.length,h=a?s.shape[l-2]:s.shape[l-1],c=o?i.shape[u-1]:i.shape[u-2],d=a?s.shape[l-1]:s.shape[l-2],p=o?i.shape[u-2]:i.shape[u-1],m=s.shape.slice(0,-2),g=i.shape.slice(0,-2),b=x(m),y=x(g),w=pi(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);f(h===c,(()=>`Error in matMul: inner shapes (${h}) and (${c}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const v=o?[y,p,c]:[y,c,p],k=Fy({inputs:{x:s},backend:n,attrs:{shape:a?[b,h,d]:[b,d,h]}}),I=Fy({inputs:{x:i},backend:n,attrs:{shape:v}}),S=a?k.shape[1]:k.shape[2],C=a?k.shape[2]:k.shape[1],N=o?I.shape[1]:I.shape[2],$=Math.max(b,y),T=n.data.get(k.dataId).values,E=n.data.get(I.dataId).values,R=L(k.shape),A=L(I.shape),[F,D,M]=a?[R[0],1,R[1]]:[R[0],R[1],1],[_,O,z]=o?[1,A[1],A[0]]:[A[1],1,A[0]],P=C*N,B=ei([$,C,N],k.dtype),U=B.values,W=n.blockSize;for(let t=0;t<$;t++)for(let e=0;e<C;e+=W)for(let n=0;n<N;n+=W)for(let r=0;r<S;r+=W){const s=Math.min(e+W,C),i=Math.min(n+W,N),a=Math.min(r+W,S);for(let o=e;o<s;o++)for(let e=n;e<i;e++){let n=0;for(let s=r;s<a;s++){const r=Math.min(t,b-1)*F,i=Math.min(t,y-1)*z;n+=T[r+o*D+s*M]*E[s*_+e*O+i]}U[t*P+(o*N+e)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(w,B.dtype,B.values)}const _y={kernelName:xt,backendName:"cpu",kernelFunc:My},Oy={kernelName:tr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:c}=r;let d,p,f;const m=[];d=My({inputs:{a:s,b:i},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=Ry({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),h&&(f=xy(n,d,h,o,c),m.push(d),d=f);for(const t of m)n.disposeIntermediateTensorInfo(t);return d}};function Ly(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const zy={kernelName:tt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Xx(e,"abs");let r=new Float32Array(x(e.shape));return r=Ly(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,e.dtype)}},Py=Jx(et,(t=>Math.acos(t))),By={kernelName:et,backendName:"cpu",kernelFunc:Py},Uy=Jx(nt,(t=>Math.acosh(t))),Wy={kernelName:nt,backendName:"cpu",kernelFunc:Uy},Vy={kernelName:st,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=e;Xx(e,"addN");const s=r.map((t=>n.data.get(t.dataId).values)),i=ei(r[0].shape,r[0].dtype),a=i.values;for(let t=0;t<r.length;t++){const e=s[t];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function Gy(t,e,n,r,s){const i=e.length,a=x(e),o=L(e),l=L(s),u=$(n,x(s));for(let e=0;e<a;++e){const n=H(e,i,o),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];u[G(s,i,l)]=t[e]}return u}function Hy(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:i}=n;Xx(s,"transpose");const a=s.shape.length,o=new Array(a);for(let t=0;t<o.length;t++)o[t]=s.shape[i[t]];const l=Gy(r.data.get(s.dataId).values,s.shape,s.dtype,i,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const jy={kernelName:jn,backendName:"cpu",kernelFunc:Hy},qy={kernelName:it,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;Xx(s,"all");const o=C(i,s.shape);let l=o;const u=co(l,s.shape.length);let h=s;null!=u&&(h=Hy({inputs:{x:s},backend:n,attrs:{perm:u}}),l=fo(l.length,s.shape.length)),ho("all",l,h.shape.length);const[c,d]=lo(h.shape,l),p=x(d),f=U(x(c),h.dtype),m=n.data.get(h.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];n=n&&r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(h);const g=n.makeTensorInfo(c,h.dtype,f);if(a){const t=Fy({inputs:{x:g},backend:n,attrs:{shape:uo(c,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},Ky={kernelName:at,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;Xx(s,"any");const o=C(i,s.shape);let l=o;const u=co(l,s.shape.length);let h=s;null!=u&&(h=Hy({inputs:{x:s},backend:n,attrs:{perm:u}}),l=fo(l.length,s.shape.length)),ho("any",l,h.shape.length);const[c,d]=lo(h.shape,l),p=x(d),f=U(x(c),h.dtype),m=n.data.get(h.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];n=n||r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(h);const g=n.makeTensorInfo(c,h.dtype,f);if(a){const t=Fy({inputs:{x:g},backend:n,attrs:{shape:uo(c,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},Xy={kernelName:ot,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;Xx(s,"argMax");let a=C(i,s.shape);const o=co(a,s.shape.length);let l=s;const u=[];null!=o&&(l=Hy({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=fo(a.length,l.shape.length)),a=[a[0]],ho("argMax",a,l.shape.length);const[h,c]=lo(l.shape,a),d=U(x(h),"int32"),p=x(c),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],r=0;for(let t=0;t<p;++t){const s=f[e+t];s>n&&(n=s,r=t)}d[t]=r}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(h,"int32",d)}},Yy={kernelName:lt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;Xx(s,"argMin");let a=C(i,s.shape);const o=co(a,s.shape.length);let l=s;const u=[];null!=o&&(l=Hy({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=fo(a.length,l.shape.length)),a=[a[0]],ho("argMin",a,l.shape.length);const[h,c]=lo(l.shape,a),d=U(x(h),"int32"),p=x(c),f=n.data.get(l.dataId).values;for(let t=0;t<d.length;++t){const e=t*p;let n=f[e],r=0;for(let t=0;t<p;++t){const s=f[e+t];s<n&&(n=s,r=t)}d[t]=r}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(h,"int32",d)}},Zy=Jx(ut,(t=>Math.asin(t))),Jy={kernelName:ut,backendName:"cpu",kernelFunc:Zy},Qy=Jx(ht,(t=>Math.asinh(t))),tw={kernelName:ht,backendName:"cpu",kernelFunc:Qy},ew=Jx(ct,(t=>Math.atan(t))),nw={kernelName:ct,backendName:"cpu",kernelFunc:ew},rw=ay(((t,e)=>Math.atan2(t,e))),sw=Ny(pt,rw),iw={kernelName:pt,backendName:"cpu",kernelFunc:sw},aw=Jx(dt,(t=>Math.atanh(t))),ow={kernelName:dt,backendName:"cpu",kernelFunc:aw};function lw(t,e,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,h=s.effectiveFilterHeight,c=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ei(s.outShape,n),g=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],y=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*b,m=e*r[0];for(let e=0;e<s.inChannels;++e)for(let b=0;b<s.outHeight;++b){const w=b*a-d,v=Math.max(0,w),k=Math.min(s.inHeight,h+w),I=n+b*x;for(let n=0;n<s.outWidth;++n){const a=n*o-p,h=Math.max(0,a),d=Math.min(s.inWidth,c+a);let b=f,x=0,w=0;for(let n=v;n<k;n+=l){const s=m+n*r[1];for(let n=h;n<d;n+=u){const a=t[s+n*r[2]+e];"max"===i&&a>b?b=a:"avg"===i&&(x+=a,w++)}if(isNaN(b))break}g[I+n*y+e]="avg"===i?x/w:b}}}return m}function uw(t,e,n,r,s=!1,i=!1){const a=ei(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,h=r.dilationWidth,c=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=ei(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=u;const x=Math.min(r.inHeight,c+g);for(let o=0;o<r.outWidth;++o){const c=o*l-f;let p=c;for(;p<0;)p+=h;const y=Math.min(r.inWidth,d+c);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<x;n+=u){const a=n-g;for(let o=p;o<y;o+=h){const l=o-c,u=m.get(t,n,o,e);u>w&&(w=u,v=s?i?((t*r.inHeight+n)*r.inWidth+o)*r.inChannels+e:(n*r.inWidth+o)*r.inChannels+e:a*d+l)}}a.set(v,t,n,o,e)}}return a}function hw(t,e,n,r,s,i){const a=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,h=s.dilationHeight,c=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,b=s.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ei(s.outShape,n),w=y.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let e=0;e<s.batchSize;++e){const n=e*v,y=e*r[0];for(let e=0;e<s.inChannels;++e)for(let v=0;v<s.outDepth;++v){const C=v*a-m;let N=C;for(;N<0;)N+=u;const $=Math.min(s.inDepth,d+C),T=n+v*k;for(let n=0;n<s.outHeight;++n){const a=n*o-g;let d=a;for(;d<0;)d+=h;const m=Math.min(s.inHeight,p+a),v=T+n*I;for(let n=0;n<s.outWidth;++n){const a=n*l-b;let o=a;for(;o<0;)o+=c;const p=Math.min(s.inWidth,f+a),g=v+n*S;let k=x,I=0,C=0;for(let n=N;n<$;n+=u){const s=y+n*r[1];for(let n=d;n<m;n+=h){const a=s+n*r[2];for(let n=o;n<p;n+=c){const s=t[a+n*r[3]+e];if("max"===i&&s>k?k=s:"avg"===i&&(I+=s,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+e]="avg"===i?I/C:k}}}}return y}const cw={kernelName:ft,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Xx(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;f(la(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Ji(s.shape,i,a,1,o,l);let h;if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))h=ny({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=L(s.shape),r=lw(t,s.shape,s.dtype,e,u,"avg");h=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return h}},dw={kernelName:gt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;Xx(s,"avgPool3d");const h=Qi(s.shape,i,a,1,o,l,u),c=hw(n.data.get(s.dataId).values,s.shape,s.dtype,L(s.shape),h,"avg");return n.makeTensorInfo(c.shape,"float32",c.values)}},pw={kernelName:bt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;Xx([s,i],"avgPool3DGrad");const h=Qi(i.shape,a,o,1,l,u),c=h.strideDepth,d=h.strideHeight,p=h.strideWidth,f=h.filterDepth,m=h.filterHeight,g=h.filterWidth,b=h.dilationDepth,x=h.dilationHeight,y=h.dilationWidth,w=h.effectiveFilterDepth,v=h.effectiveFilterHeight,k=h.effectiveFilterWidth,I=w-1-h.padInfo.front,S=k-1-h.padInfo.left,C=v-1-h.padInfo.top,N=ei(i.shape,"float32"),$=1/(f*m*g),T=n.bufferSync(s);for(let t=0;t<h.batchSize;++t)for(let e=0;e<h.inChannels;++e)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let s=0;s<h.inWidth;++s){const i=n-I,a=r-C,o=s-S;let l=0;for(let n=0;n<w;n+=b){const r=(i+n)/c;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=x){const s=(a+n)/d;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=y){const i=(o+n)/p;i<0||i>=h.outWidth||Math.floor(i)!==i||(l+=T.get(t,r,s,i,e))}}}N.set(l*$,t,n,r,s,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},fw={kernelName:mt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i;Xx([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,h=Ji(a.shape,o,l,1,u),c=h.strideHeight,d=h.strideWidth,p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,b=h.effectiveFilterHeight,x=h.effectiveFilterWidth,y=x-1-h.padInfo.left,w=b-1-h.padInfo.top,v=ei(a.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,S=ei(s.shape,"float32",I);for(let t=0;t<h.batchSize;++t)for(let e=0;e<h.inChannels;++e)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const s=n-w,i=r-y;let a=0;for(let n=0;n<b;n+=m){const r=(s+n)/c;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=g){const s=(i+n)/d;s<0||s>=h.outWidth||Math.floor(s)!==s||(a+=S.get(t,r,s,e))}}v.set(a*k,t,n,r,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},mw={kernelName:oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:i,offset:a,mean:o,variance:l}=e;f(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Xx([s,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const h=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),m=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),b=m.length,x=p.length,y=d.length,w=c.length;let v=0,k=0,I=0,S=0;for(let t=0;t<h.length;++t)g[t]=m[v++]+(h[t]-c[k++])*p[I++]/Math.sqrt(d[S++]+u),v>=b&&(v=0),k>=w&&(k=0),I>=x&&(I=0),S>=y&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function gw(t,e,n,r,s){const i=Ti(r,e,n),a=x(n),o=L(r);if(i){const n=Ei(e,o);return"string"===s?t.slice(n,n+a):t.subarray(n,n+a)}const l=ei(r,s,"string"===s?bh(t):t),u=ei(n,s);for(let t=0;t<u.size;++t){const n=u.indexToLoc(t),r=n.map(((t,n)=>t+e[n]));u.set(l.get(...r),...n)}return"string"===s?xh(u.values):u.values}function bw(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:a}=r;Xx(s,"slice");const[o,l]=Ri(s,i,a);gi(s,o,l);const u=gw(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const xw={kernelName:xn,backendName:"cpu",kernelFunc:bw},yw={kernelName:yt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:a}=r;Xx([s],"batchToSpaceND");const o=i.reduce(((t,e)=>t*e)),l=Iu(s.shape,i,o),u=Su(l.length,i.length),h=Cu(s.shape,i,o),c=Nu(a,i.length),d=$u(h,a,i.length),p=Fy({inputs:{x:s},backend:n,attrs:{shape:l}}),f=Hy({inputs:{x:p},backend:n,attrs:{perm:u}}),m=Fy({inputs:{x:f},backend:n,attrs:{shape:h}}),g=bw({inputs:{x:m},backend:n,attrs:{begin:c,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function ww(t,e,n,r,s){const i=x(r),a=U(s,n);for(let n=0;n<t.length;n++){const r=t[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(a[r]+=i>0?e[n]:1)}return a}function vw(t,e,n,r=!1){const s=t.shape[0],i=t.shape[1],a=ei([s,n],e.dtype);for(let o=0;o<s;o++)for(let s=0;s<i;s++){const i=t.get(o,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?a.set(1,o,i):e.size>0?a.set(a.get(o,i)+e.get(o,s),o,i):a.set(a.get(o,i)+1,o,i))}return a}const kw={kernelName:wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a}=r,o=ww(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,o)}},Iw={kernelName:vt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=pi(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Sw=fy((t=>Math.ceil(t))),Cw=Qx(It,Sw),Nw={kernelName:It,backendName:"cpu",kernelFunc:Cw},$w=Jx(St,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),Tw={kernelName:St,backendName:"cpu",kernelFunc:$w},Ew={kernelName:Nt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(x(e.shape)),s=n.data.get(e.dataId),i=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let t=0;t<o.length;t++){const e=o[t],n=l[t];r[t]=Math.hypot(e,n)}return n.makeOutput(r,e.shape,"float32")}};function Rw(t,e,n,r){const s=T(n,x(e));if(r&&"string"!==n){let e=0;t.forEach((t=>{const n=x(t.shape);s.set(t.vals,e),e+=n}))}else{let r=0;t.forEach((t=>{const i="string"===n?bh(t.vals):t.vals;let a=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+r;for(let e=0;e<t.shape[1];++e)s[o+e]=i[a++]}r+=t.shape[1]}))}return s}function Aw(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const Fw={kernelName:fe,backendName:"cpu",kernelFunc:Aw};function Dw(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=C(s,e[0].shape)[0];let a=yu(e.map((t=>t.shape)),i);if(0===x(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>x(t.shape)>0));if(1===o.length)return ny({inputs:{x:o[0]},backend:n});if(xu(o.map((t=>t.shape)),i),"complex64"===o[0].dtype){const t=o.map((t=>ky({inputs:{input:t},backend:n}))),e=o.map((t=>Aw({inputs:{input:t},backend:n}))),r=Dw({inputs:t,backend:n,attrs:{axis:i}}),s=Dw({inputs:e,backend:n,attrs:{axis:i}}),a=yy({inputs:{real:r,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const l=o.map((t=>{const e=x(t.shape.slice(i));return Fy({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),u=l.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));a=yu(l.map((t=>t.shape)),1);const h=1===l[0].shape[0],c=Rw(u,a,e[0].dtype,h),d=yu(o.map((t=>t.shape)),i),p=n.makeTensorInfo(d,e[0].dtype,c);return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}const Mw={kernelName:$t,backendName:"cpu",kernelFunc:Dw};function _w(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=r;Xx([s,i],"conv2d");const c=ua(l),d=ta(s.shape,i.shape,a,u,o,h,!1,c),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,w=new Br(d.outShape,s.dtype),v=L(s.shape),k=L(i.shape),I=v[0],S=y?v[1]:v[2],C=y?v[2]:1,N=y?1:v[1],$=w.strides[0],T=y?w.strides[1]:w.strides[2],E=y?w.strides[2]:1,R=y?1:w.strides[1],A=n.data.get(s.dataId).values,F=n.data.get(i.dataId).values,D=w.values;for(let t=0;t<d.batchSize;++t){const e=t*I,n=t*$;for(let t=0;t<d.outHeight;++t){const r=n+t*T,s=t*d.strideHeight-x;for(let t=0;t<p;++t){const n=s+t*m;if(n<0||n>=d.inHeight)continue;const i=t*k[0],a=e+n*S;for(let t=0;t<d.outWidth;++t){const e=r+t*E,n=t*d.strideWidth-b;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=d.inWidth)continue;const s=a+r*C;let o=i+t*k[1];for(let t=0;t<d.inChannels;++t){const n=A[s+t*N];for(let t=0;t<d.outChannels;++t)D[e+t*R]+=n*F[o+t];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const Ow={kernelName:Tt,backendName:"cpu",kernelFunc:_w},Lw={kernelName:Et,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r;Xx([s,i],"conv2dBackpropFilter");const c=ua(l),d=ta(s.shape,h,a,1,o,u,!1,c),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,x=new Br(d.filterShape,"float32"),y=d.padInfo.left,w=d.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=new Br(s.shape,s.dtype,v),S=new Br(i.shape,i.dtype,k);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((w-t)/p)),n=Math.min(d.outHeight,(d.inHeight+w-t)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((y-r)/f)),i=Math.min(d.outWidth,(d.inWidth+y-r)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let h=e;h<n;++h){const e=t+h*p-w;for(let t=s;t<i;++t){const n=r+t*f-y;l+=b?I.get(u,e,n,a)*S.get(u,h,t,o):I.get(u,a,e,n)*S.get(u,o,h,t)}}x.set(l,t,r,a,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},zw={kernelName:Rt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r;Xx([s,i],"conv2dBackpropInput");const c=L(i.shape),d=L(s.shape);let p=ua(u);const f=ta(a,i.shape,o,1,l,h,!1,p),m=new Br(f.inShape,"float32"),g=m.values,b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,[y,w,v]=c,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:C,inHeight:N,inWidth:$,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const D=I-1-f.padInfo.top,M=S-1-f.padInfo.left,_="channelsLast"===p,O=m.strides[0],z=_?m.strides[1]:m.strides[2],P=_?m.strides[2]:1,B=_?1:m.strides[1],U=d[0],W=_?d[1]:d[2],V=_?d[2]:1,G=_?1:d[1];for(let t=0;t<k;++t)for(let e=0;e<C;++e)for(let n=0;n<N;++n){const r=n-D,s=Math.max(0,Math.ceil(r/A)),i=Math.min(E,(I+r)/A);for(let a=0;a<$;++a){const o=a-M,l=Math.max(0,Math.ceil(o/F)),u=Math.min(R,(S+o)/F);let h=0;for(let n=s;n<i;++n){const s=n*A-r;for(let r=l;r<u;++r){const i=U*t+W*n+V*r,a=y*(I-1-s)+w*(S-1-(r*F-o))+v*e;for(let t=0;t<T;++t)h+=b[i+G*t]*x[a+t]}}g[O*t+z*n+P*a+B*e]=h}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Pw={kernelName:At,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r;Xx([s,i],"conv3d");const u=ea(s.shape,i.shape,a,l,o),{filterDepth:h,filterHeight:c,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,x=g.left,y=g.top,w=new Br(u.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=w.values,S=L(s.shape),C=L(i.shape);for(let t=0;t<u.batchSize;++t){const e=t*S[0],n=t*w.strides[0];for(let t=0;t<u.outDepth;++t){const r=n+t*w.strides[1],s=t*u.strideDepth-b;for(let t=0;t<h;++t){const n=s+t*p;if(n<0||n>=u.inDepth)continue;const i=t*C[0],a=e+n*S[1];for(let t=0;t<u.outHeight;++t){const e=r+t*w.strides[2],n=t*u.strideHeight-y;for(let t=0;t<c;++t){const r=n+t*f;if(r<0||r>=u.inHeight)continue;const s=i+t*C[1],o=a+r*S[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,r=t*u.strideWidth-x;for(let t=0;t<d;++t){const e=r+t*m;if(e<0||e>=u.inWidth)continue;const i=s+t*C[2],a=o+e*u.inChannels;let l=i;for(let t=0;t<u.inChannels;++t){const e=v[a+t];for(let t=0;t<u.outChannels;++t)I[n+t]+=e*k[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Bw={kernelName:Ft,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r;Xx([s,i],"conv3dBackpropFilterV2");const u=L(s.shape),h=L(i.shape),c=ea(s.shape,l,a,1,o),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.filterDepth,g=c.filterHeight,b=c.filterWidth,x=new Br(c.filterShape,"float32"),y=x.values,[w,v,k,I]=x.strides,S=n.data.get(i.dataId).values,[C,N,$,T]=h,E=n.data.get(s.dataId).values,[R,A,F,D]=u,M=c.padInfo.front,_=c.padInfo.left,O=c.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((M-t)/d)),n=Math.min(c.outDepth,(c.inDepth+M-t)/d),r=t*w;for(let s=0;s<g;++s){const i=Math.max(0,Math.ceil((O-s)/p)),a=Math.min(c.outHeight,(c.inHeight+O-s)/p),o=s*v+r;for(let r=0;r<b;++r){const l=Math.max(0,Math.ceil((_-r)/f)),u=Math.min(c.outWidth,(c.inWidth+_-r)/f),h=r*k+o;for(let o=0;o<c.inChannels;++o){const m=o*I+h;for(let h=0;h<c.outChannels;++h){let g=0;for(let m=0;m<c.batchSize;++m){const c=m*R,b=m*C;for(let m=e;m<n;++m){const e=(t+m*d-M)*A+c,n=m*N+b;for(let t=i;t<a;++t){const i=(s+t*p-O)*F+e,a=t*$+n;for(let t=l;t<u;++t){const e=t*T+a;g+=E[(r+t*f-_)*D+i+o]*S[e+h]}}}}y[m+h]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Uw={kernelName:Dt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:a,strides:o,inputShape:l}=r;Xx([s],"conv3dBackpropInputV2");const u=L(s.shape),h=L(i.shape),c=ea(l,i.shape,o,1,a),d=new Br(c.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,x=n.data.get(s.dataId).values,[y,w,v,k]=u,I=n.data.get(i.dataId).values,[S,C,N,$]=h,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:F,inDepth:D,inHeight:M,inWidth:_,outChannels:O,outDepth:z,outHeight:P,outWidth:B,strideDepth:U,strideHeight:W,strideWidth:V}=c,G=E-1-c.padInfo.front,H=R-1-c.padInfo.top,j=A-1-c.padInfo.left;for(let t=0;t<T;++t)for(let e=0;e<F;++e)for(let n=0;n<D;++n){const r=n-G,s=Math.max(0,Math.ceil(r/U)),i=Math.min(z,(E+r)/U);for(let a=0;a<M;++a){const o=a-H,l=Math.max(0,Math.ceil(o/W)),u=Math.min(P,(R+o)/W);for(let h=0;h<_;++h){const c=h-j,d=Math.max(0,Math.ceil(c/V)),T=Math.min(B,(A+c)/V);let F=0;for(let n=s;n<i;++n){const s=n*U-r;for(let r=l;r<u;++r){const i=r*W-o;for(let a=d;a<T;++a){const o=y*t+w*n+v*r+k*a,l=S*(E-1-s)+C*(R-1-i)+N*(A-1-(a*V-c))+$*e;for(let t=0;t<O;++t)F+=x[o+t]*I[l+t]}}}p[f*t+m*n+g*a+b*h+e]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Ww=Jx(Mt,(t=>Math.cos(t))),Vw={kernelName:Mt,backendName:"cpu",kernelFunc:Ww},Gw=Jx(_t,(t=>Math.cosh(t))),Hw={kernelName:_t,backendName:"cpu",kernelFunc:Gw},jw={kernelName:Lt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,[h,c,d,p]=s.shape,f=i.shape[0],[m,g]=o,b=ei([f,m,g,p],"float32"),x=n.data.get(i.dataId).values,y=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,v=L(s.shape),k=L(b.shape);for(let t=0;t<f;t++){const e=4*t,n=x[e],r=x[e+1],s=x[e+2],i=x[e+3],a=y[t];if(a>=h)continue;const o=m>1?(s-n)*(c-1)/(m-1):0,f=g>1?(i-r)*(d-1)/(g-1):0;for(let e=0;e<m;e++){const h=m>1?n*(c-1)+e*o:.5*(n+s)*(c-1);if(h<0||h>c-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+e*k[1]+t*k[0];b.values[s]=u}else if("bilinear"===l){const n=Math.floor(h),s=Math.ceil(h),o=h-n;for(let l=0;l<g;l++){const h=g>1?r*(d-1)+l*f:.5*(r+i)*(d-1);if(h<0||h>d-1){for(let n=0;n<p;n++){const r=n+l*k[2]+e*k[1]+t*k[0];b.values[r]=u}continue}const c=Math.floor(h),m=Math.ceil(h),x=h-c;for(let r=0;r<p;r++){let i=r+c*v[2]+n*v[1]+a*v[0];const u=w[i];i=r+m*v[2]+n*v[1]+a*v[0];const h=w[i];i=r+c*v[2]+s*v[1]+a*v[0];const d=w[i];i=r+m*v[2]+s*v[1]+a*v[0];const p=u+(h-u)*x,f=d+(w[i]-d)*x;i=r+l*k[2]+e*k[1]+t*k[0],b.values[i]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(d-1)+n*f:.5*(r+i)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+e*k[1]+t*k[0];b.values[s]=u}continue}const o=Math.round(s),l=Math.round(h);for(let r=0;r<p;r++){const s=r+o*v[2]+l*v[1]+a*v[0],i=r+n*k[2]+e*k[1]+t*k[0];b.values[i]=w[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},qw={kernelName:Ot,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;Xx(s,"cumsum");const l=co([i],s.shape.length);let u=s;null!=l&&(u=Hy({inputs:{x:s},backend:n,attrs:{perm:l}}));const h=fo(1,s.shape.length)[0];if(h!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${h}`);const c=Qr(u.dtype,"int32"),d=U(x(u.shape),c),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<p.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)d[n]=a?0:p[n];else{const r=m(t,e-1);d[n]=a?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(u.shape,c,d);if(null!=l){const t=Hy({inputs:{x:g},backend:n,attrs:{perm:po(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}},Kw={kernelName:zt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const t=ww(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,t)}if(2===s.shape.length){const t=vw(n.bufferSync(s),n.bufferSync(i),a,o);return n.makeTensorInfo(t.shape,i.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Xw={kernelName:Pt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:a}=r;f("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],h=s.shape[3],c=l*i,d=u*i,p=h/(i*i),m=n.data.get(s.dataId).values,g=new Float32Array(o*c*d*p);let b=0;for(let t=0;t<o;++t)for(let e=0;e<c;++e){const n=Math.floor(e/i),r=e%i;for(let e=0;e<d;++e){const s=Math.floor(e/i),a=(r*i+e%i)*p;for(let e=0;e<p;++e){const r=e+a+h*(s+u*(n+l*t));g[b++]=m[r]}}}return n.makeTensorInfo([o,c,d,p],s.dtype,g)}};function Yw(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;Xx([s,i],"depthwiseConv2DNative");const h=L(s.shape),c=L(i.shape);let d=l;null==d&&(d=[1,1]),f(la(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=ta(s.shape,i.shape,a,d,o,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:x,padInfo:y}=p,w=y.left,v=y.top,k=p.outChannels/p.inChannels,I=new Br(p.outShape,s.dtype),S=n.data.get(s.dataId).values,C=n.data.get(i.dataId).values,N=I.values;for(let t=0;t<p.batchSize;++t){const e=t*h[0],n=t*I.strides[0];for(let t=0;t<p.outHeight;++t){const r=n+t*I.strides[1],s=t*p.strideHeight-v;for(let t=0;t<m;++t){const n=s+t*b;if(n<0||n>=p.inHeight)continue;const i=t*c[0],a=e+n*h[1];for(let t=0;t<p.outWidth;++t){const e=r+t*I.strides[2],n=t*p.strideWidth-w;for(let t=0;t<g;++t){const r=n+t*x;if(r<0||r>=p.inWidth)continue;const s=i+t*c[1],o=a+r*p.inChannels;let l=e,u=s;for(let t=0;t<p.inChannels;++t){const e=S[o+t];for(let t=0;t<k;++t)N[l+t]+=e*C[u+t];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Zw={kernelName:Bt,backendName:"cpu",kernelFunc:Yw},Jw={kernelName:Ut,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r;Xx([s,i],"depthwiseConv2dNativeBackpropFilter");const c=ta(s.shape,h,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=c,g=new Br(c.filterShape,"float32"),b=c.padInfo.left,x=c.padInfo.top,y=c.outChannels/c.inChannels,w=n.data.get(s.dataId).values,v=new Br(s.shape,s.dtype,w),k=n.data.get(i.dataId).values,I=new Br(i.shape,i.dtype,k);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((x-t)/d)),n=Math.min(c.outHeight,(c.inHeight+x-t)/d);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((b-r)/p)),i=Math.min(c.outWidth,(c.inWidth+b-r)/p);for(let a=0;a<c.outChannels;++a){const o=Math.trunc(a/y),l=a%y;let u=0;for(let l=0;l<c.batchSize;++l)for(let h=e;h<n;++h){const e=t+h*d-x;for(let t=s;t<i;++t){const n=r+t*p-b;u+=v.get(l,e,n,o)*I.get(l,h,t,a)}}g.set(u,t,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Qw={kernelName:Wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r;Xx([s,i],"depthwiseConv2DNativeBackpropInput");const c=L(s.shape),d=L(i.shape),p=ta(h,i.shape,a,o,l,u,!0),f=new Br(p.inShape,"float32"),m=f.values,[g,b,x]=f.strides,y=n.data.get(s.dataId).values,[w,v,k]=c,I=n.data.get(i.dataId).values,[S,C,N]=d,{batchSize:$,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:F,outChannels:D,outHeight:M,outWidth:_,strideHeight:O,strideWidth:z}=p,P=T-1-p.padInfo.top,B=E-1-p.padInfo.left,U=D/R;for(let t=0;t<$;++t)for(let e=0;e<R;++e)for(let n=0;n<A;++n){const r=n-P,s=Math.max(0,Math.ceil(r/O)),i=Math.min(M,(T+r)/O);for(let a=0;a<F;++a){const o=a-B,l=Math.max(0,Math.ceil(o/z)),u=Math.min(_,(E+o)/z);let h=0;for(let n=s;n<i;++n){const s=n*O-r;for(let r=l;r<u;++r){const i=w*t+v*n+k*r,a=S*(T-1-s)+C*(E-1-(r*z-o))+N*e;for(let t=0;t<U;++t)h+=y[i+(e*U+t)]*I[a+t]}}m[g*t+b*n+x*a+e]=h}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},tv={kernelName:Vt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=x(r.shape),i=n.data.get(r.dataId).values,a=ei([s,s],r.dtype),o=a.values;for(let t=0;t<i.length;t++)o[t*s+t]=i[t];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},ev={kernelName:Gt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:i,pad:a,dilations:o}=n,l=e,u=l.data.get(r.dataId).values,h=r.shape.length,c=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:C,dilationWidth:N,outShape:$}=Zi(r.shape,s.shape,i,a,"NHWC",o),E=x($),R=$.length,A=T(r.dtype,E);for(let t=0;t<p;++t)for(let e=0;e<b;++e){const n=e*v-w.top;for(let i=0;i<y;++i){const a=i*k-w.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const i=n+e*C;if(i>=0&&i<f)for(let n=0;n<S;++n){const p=a+n*N;if(p>=0&&p<m){const a=G([t,i,p,o],h,L(r.shape)),f=G([e,n,o],d,L(s.shape)),m=u[a]+c[f];m>l&&(l=m)}}}A[G([t,e,i,o],R,L($))]=l}}}return{dataId:l.write(Tr(A,r.dtype),$,r.dtype),shape:$,dtype:r.dtype}}},nv={kernelName:jt,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,h=P(r.shape,u.data.get(r.dataId).values),c=P(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=Zi(r.shape,s.shape,a,o,"NHWC",l);f(i.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${i.rank}`));const $=P(N,u.data.get(i.dataId).values),T=W(s.shape,s.dtype);for(let t=0;t<d;++t)for(let e=0;e<b;++e){const n=e*w-y.top;for(let r=0;r<x;++r){const s=r*v-y.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<k;++e){const r=n+e*S;if(r>=0&&r<p)for(let n=0;n<I;++n){const u=s+n*C;if(u>=0&&u<m){const s=h[t][r][u][i]+c[e][n][i];s>a&&(a=s,o=e,l=n)}}}T[o][l][i]+=$[t][e][r][i]}}}return{dataId:u.write(Tr(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},rv={kernelName:Ht,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:a,pad:o,dilations:l}=n,u=e,h=P(r.shape,u.data.get(r.dataId).values),c=P(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:N}=Zi(r.shape,s.shape,a,o,"NHWC",l);f(i.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${i.rank}`));const $=P(N,u.data.get(i.dataId).values),T=W(r.shape,r.dtype);for(let t=0;t<d;++t)for(let e=0;e<b;++e){const n=e*w-y.top;for(let r=0;r<x;++r){const s=r*v-y.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let e=0;e<k;++e){const r=n+e*S;if(r>=0&&r<p)for(let n=0;n<I;++n){const u=s+n*C;if(u>=0&&u<m){const s=h[t][r][u][i]+c[e][n][i];s>a&&(a=s,o=r,l=u)}}}T[t][o][l][i]+=$[t][e][r][i]}}}return{dataId:u.write(Tr(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},sv=ay(((t,e)=>t*e)),iv=$y(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),av=Ny(We,sv,iv),ov={kernelName:We,backendName:"cpu",kernelFunc:av};function lv(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;let o;Xx(s,"sum"),o="bool"===s.dtype?Sy({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):ny({inputs:{x:s},backend:n});const l=o.shape.length,u=C(i,o.shape),h=co(u,l);let c=u,d=o;null!=h&&(d=Hy({inputs:{x:o},backend:n,attrs:{perm:h}}),c=fo(c.length,l)),ho("sum",c,d.shape.length);const[p,f]=lo(d.shape,c);let m=vy(n,p,Qr(d.dtype,"int32"));const g=x(f),b=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let t=0;t<b.length;++t){const e=t*g;let n=0;for(let t=0;t<g;++t)n+=y[e+t];b[t]=n}if(a){const t=m;m=Fy({inputs:{x:m},backend:n,attrs:{shape:uo(m.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=h&&n.disposeIntermediateTensorInfo(d),m}const uv={kernelName:Cn,backendName:"cpu",kernelFunc:lv},hv={kernelName:Kt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,i=e,{allDims:a,summedDims:o,idDims:l}=Xu(s,i.length);Zu(a.length,l,i);const{path:u,steps:h}=Ju(o,l),c=h.length;let d=null,p=a.length;const f=[];for(let t=0;t<c;++t){for(const e of h[t]){const{permutationIndices:t,expandDims:r}=Yu(p,l[e]);let s;Qu(t)?s=i[e]:(s=Hy({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(s));const a=s.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);y(s.shape,a)||(s=Fy({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=av({inputs:{a:s,b:d},backend:n}),f.push(d))}t<c-1&&(u[t]>=0&&(d=lv({inputs:{x:d},backend:n,attrs:{axis:u[t]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const t of f)t!==d&&n.disposeIntermediateTensorInfo(t);return d}},cv={kernelName:Yt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:s}=e;Xx([r,s],"eluGrad");const i=new Float32Array(x(s.shape)),a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let t=0;t<a.length;++t){const e=a[t];i[t]=e>=1?o[t]:o[t]*(e+1)}return n.makeTensorInfo(s.shape,"float32",i)}},dv=ay(((t,e)=>t===e?1:0)),pv=Ny(Jt,dv,null,"bool"),fv={kernelName:Jt,backendName:"cpu",kernelFunc:pv},mv=Mu,gv=_u,bv=Ou,xv=Lu,yv=zu,wv=Pu,vv=Jx(Zt,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+mv*n);return e*(1-((((wv*r+yv)*r+xv)*r+bv)*r+gv)*r*Math.exp(-n*n))})),kv={kernelName:Zt,backendName:"cpu",kernelFunc:vv},Iv=fy((t=>Math.exp(t))),Sv=Qx(Qt,Iv,"float32"),Cv={kernelName:Qt,backendName:"cpu",kernelFunc:Sv};function Nv(t){const{inputs:e,backend:n,attrs:r}=t,{input:s}=e,{dim:i}=r,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(f(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),Fy({inputs:{x:s},backend:n,attrs:{shape:o}})}const $v={kernelName:te,backendName:"cpu",kernelFunc:Nv},Tv=fy((t=>Math.expm1(t))),Ev=Qx(ee,Tv),Rv={kernelName:ee,backendName:"cpu",kernelFunc:Ev},Av=ay(((t,e)=>t/e)),Fv=Ny(qt,Av),Dv={kernelName:qt,backendName:"cpu",kernelFunc:Fv},Mv=ay(((t,e)=>t-e)),_v=$y(((t,e,n,r)=>({real:t-n,imag:e-r}))),Ov=Ny(Bn,Mv,_v),Lv={kernelName:Bn,backendName:"cpu",kernelFunc:Ov};function zv(t,e,n){const r=t.shape,s=r[0],i=r[1],a=n.data.get(t.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[s,i],h=x(u),c=$("float32",h),d=$("float32",h);for(let t=0;t<s;t++){const r=bw({inputs:{x:o},backend:n,attrs:{begin:[t,0],size:[1,i]}}),s=bw({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,i]}}),a=yy({inputs:{real:r,imag:s},backend:n}),{real:u,imag:h}=Pv(a,e,n),p=Bu(u,h);for(let e=0;e<i;e++){const n=Gu(p,e);c[t*i+e]=n.real,d[t*i+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",c),f=n.makeTensorInfo(u,"float32",d),m=yy({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Pv(t,e,n){const r=x(t.shape),s=n.data.get(t.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=Bv(i,a,r,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",s.real),e=n.makeTensorInfo(o,"float32",s.imag),i=n.makeTensorInfo([],"float32",$r(r,"float32")),a=ny({inputs:{x:i},backend:n}),l=Dv.kernelFunc({inputs:{a:t,b:i},backend:n}),u=Dv.kernelFunc({inputs:{a:e,b:a},backend:n}),h=n.data.get(l.dataId).values,c=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:h,imag:c}}return s}{const t=function(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let i=0,a=0;for(let r=0;r<e;r++){const o=qu(s*r,e,n),l=Gu(t,r);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=e,a/=e),Hu(r,i,a,s)}return r}(Bu(i,a),r,e);return Uu(t)}var o}function Bv(t,e,n,r,s){if(1===n)return{real:t,imag:e};const i=Bu(t,e),a=n/2,o=Wu(i),l=o.real,u=o.imag,h=[l.length],c=s.makeTensorInfo(h,"float32",l),d=s.makeTensorInfo(h,"float32",u),p=yy({inputs:{real:c,imag:d},backend:s}),f=Vu(i),m=f.real,g=f.imag,b=[m.length],x=s.makeTensorInfo(b,"float32",m),y=s.makeTensorInfo(b,"float32",g),w=yy({inputs:{real:x,imag:y},backend:s}),v=Bv(l,u,a,r,s),k=v.real,I=v.imag,S=[k.length],C=s.makeTensorInfo(S,"float32",k),N=s.makeTensorInfo(S,"float32",I),$=yy({inputs:{real:C,imag:N},backend:s}),T=Bv(m,g,a,r,s),E=T.real,R=T.imag,A=[E.length],F=s.makeTensorInfo(A,"float32",E),D=s.makeTensorInfo(A,"float32",R),M=yy({inputs:{real:F,imag:D},backend:s}),_=ju(n,r),O=[_.real.length],L=s.makeTensorInfo(O,"float32",_.real),z=s.makeTensorInfo(O,"float32",_.imag),P=yy({inputs:{real:L,imag:z},backend:s}),B=av({inputs:{a:P,b:M},backend:s}),U=Ry({inputs:{a:$,b:B},backend:s}),W=Ov({inputs:{a:$,b:B},backend:s}),V=ky({inputs:{input:U},backend:s}),G=ky({inputs:{input:W},backend:s}),H=Aw({inputs:{input:U},backend:s}),j=Aw({inputs:{input:W},backend:s}),q=Dw({inputs:[V,G],backend:s,attrs:{axis:0}}),K=Dw({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Uv={kernelName:ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=x(r.shape),i=r.shape[r.shape.length-1],a=Fy({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=zv(a,!1,n),l=Fy({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}};function Wv(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:i}=n,a=i||M(s),o=T(a,x(r));return function(t,e,n){t.fill(e)}(o,s),e.makeTensorInfo(r,a,o)}const Vv={kernelName:re,backendName:"cpu",kernelFunc:Wv},Gv={kernelName:se,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,i=$(r.dtype,x(r.shape)),[a,o,l,u]=r.shape,h=s.data.get(r.dataId).values;for(let t=0;t<a;t++){const e=t*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let t=0;t<l;t++){const r=t*u;for(let s=0;s<u;s++){const a=Math.round(l-t-1),o=e+n+r+s;let c=h[o];a>=0&&a<l&&(c=h[e+n+a*u+s]),i[o]=c}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Hv=fy((t=>Math.floor(t))),jv=Qx(ie,Hv),qv={kernelName:ie,backendName:"cpu",kernelFunc:jv},Kv=ay(((t,e)=>Math.floor(t/e))),Xv=Ny(ae,Kv,null,"int32"),Yv={kernelName:ae,backendName:"cpu",kernelFunc:Xv},Zv={kernelName:er,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:h,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=_w({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:c,dimRoundingMode:d}});if(a){const t=m;m=Ry({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=xy(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}},Jv={kernelName:nr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:h,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=Yw({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:h,dilations:c,dimRoundingMode:d}});if(a){const t=m;m=Ry({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=xy(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}};function Qv(t,e,n,r,s,i,a,o,l){const u=ei([r,i],n);for(let n=0;n<r;n++){const r=[];let h=0;for(let e=0;e<s;e++){const i=t[n*s+e];h+=i*a[e],r.push(i)}if(h<0||h>=l/i)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let t=0;t<i;t++)u.values[n*i+t]=e.get(...e.indexToLoc(h*i+t))}return u}const tk={kernelName:ue,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=x(r.shape),a=s.shape,o=a[a.length-1],[l,u,h,c]=Tu(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=Qv(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,h,c,r.shape,i);return n.makeTensorInfo(l,r.dtype,d.values)}};function ek(t,e,n){const r=ei(n,t.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),i=s[0],a=s[2],o=e.locToIndex([i,a]);s[2]=e.values[o];const l=t.locToIndex(s);0<=l&&l<t.values.length&&(r.values[n]=t.values[l])}return r}const nk={kernelName:le,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:a,batchDims:o}=r;Xx([s,i],"gatherV2");const l=C(a,s.shape)[0],u=n.data.get(i.dataId).values,h=s.shape[l];for(let t=0;t<u.length;++t){const e=u[t];f(e<=h-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${h-1}]`))}let c=o;null==o&&(c=0);const d=x(i.shape),p=gh(s,i,l,c),m=Fy({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=Fy({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),b=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(g),w=ek(n.bufferSync(m),y,b);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,w.dtype,w.values)}},rk=ay(((t,e)=>t>e?1:0)),sk=Ny(he,rk,null,"bool"),ik={kernelName:he,backendName:"cpu",kernelFunc:sk},ak=ay(((t,e)=>t>=e?1:0)),ok=Ny(ce,ak,null,"bool"),lk={kernelName:ce,backendName:"cpu",kernelFunc:ok},uk={kernelName:pe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=x(r.shape),i=r.shape[r.shape.length-1],a=Fy({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=zv(a,!0,n),l=Fy({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),l}},hk=Jx(me,(t=>Number.isFinite(t)?1:0),"bool"),ck={kernelName:me,backendName:"cpu",kernelFunc:hk},dk=Jx(ge,(t=>Math.abs(t)===1/0?1:0),"bool"),pk={kernelName:ge,backendName:"cpu",kernelFunc:dk},fk=Jx(be,(t=>Number.isNaN(t)?1:0),"bool"),mk={kernelName:be,backendName:"cpu",kernelFunc:fk},gk=ay(((t,e)=>t<e?1:0)),bk=Ny(ye,gk,null,"bool"),xk={kernelName:ye,backendName:"cpu",kernelFunc:bk},yk=ay(((t,e)=>t<=e?1:0)),wk=Ny(we,yk,null,"bool"),vk={kernelName:we,backendName:"cpu",kernelFunc:wk};function kk(t,e,n){const r=(e-t)/(n-1),s=U(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return s}const Ik={kernelName:ve,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,a=kk(r,s,i);return e.makeTensorInfo([a.length],"float32",a)}},Sk=fy((t=>Math.log(t))),Ck=Qx(ke,Sk),Nk={kernelName:ke,backendName:"cpu",kernelFunc:Ck},$k=Jx(Ie,(t=>Math.log1p(t))),Tk={kernelName:Ie,backendName:"cpu",kernelFunc:$k},Ek=ay(((t,e)=>t&&e)),Rk=Ny(Se,Ek,null,"bool"),Ak={kernelName:Se,backendName:"cpu",kernelFunc:Rk},Fk=Jx(Ce,(t=>t?0:1),"bool"),Dk={kernelName:Ce,backendName:"cpu",kernelFunc:Fk},Mk=ay(((t,e)=>t||e)),_k=Ny(Ne,Mk,null,"bool"),Ok={kernelName:Ne,backendName:"cpu",kernelFunc:_k},Lk={kernelName:$e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=r;Xx(s,"LRN");const u=s.shape[3],h=u-1,c=n.data.get(s.dataId).values,d=x(s.shape),p=new Float32Array(d);function f(t){const e=t%u;let n=t-e+Math.max(0,e-i);const r=t-e+Math.min(e+i,h);let s=0;for(;n<=r;n++){const t=c[n];s+=t*t}return s}for(let t=0;t<d;t++){const e=f(t),n=c[t]*Math.pow(a+o*e,-l);p[t]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},zk={kernelName:Te,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:h}=r;Xx(a,"LRNGrad");const c=x(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(c),b=c;for(let t=0;t<b;t++){const e=t%d,n=t-e+Math.max(0,e-o),r=t-e+Math.min(d,e+o+1);let s=0;for(let t=n;t<r;t++)s+=Math.pow(f[t],2);s=u*s+l;for(let e=n;e<r;e++){let n=-2*u*h*f[e]*m[t]/s;t===e&&(n+=Math.pow(s,-h)),n*=p[t],g[e]+=n}}return n.makeTensorInfo(a.shape,s.dtype,g)}};function Pk(t,e,n,r){const s=$(r,x(n));for(let n=0;n<s.length;++n){const r=n*e;let i=t[r];for(let n=0;n<e;++n){const e=t[r+n];(Number.isNaN(e)||e>i)&&(i=e)}s[n]=i}return s}function Bk(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:a}=r,o=n;let l=s.shape;const u=l.length,h=C(i,l);let c=h;const d=co(c,u);let p=o.data.get(s.dataId).values;if(null!=d){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[d[e]];p=Gy(p,l,s.dtype,d,t),c=fo(c.length,u),l=t}Xx(s,"max"),ho("max",c,u);const[f,m]=lo(l,c),g=Pk(p,x(m),f,s.dtype),b=o.write(g,f,s.dtype);let y=f;return a&&(y=uo(f,h)),{dataId:b,shape:y,dtype:s.dtype}}const Uk={kernelName:Ee,backendName:"cpu",kernelFunc:Bk},Wk=ay(((t,e)=>Math.max(t,e))),Vk=Ny(Re,Wk),Gk={kernelName:Re,backendName:"cpu",kernelFunc:Vk},Hk={kernelName:Ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Xx(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;f(la(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Ji(s.shape,i,a,1,o,l);let h;if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))h=ny({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=L(s.shape),r=lw(t,s.shape,s.dtype,e,u,"max");h=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return h}},jk={kernelName:De,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;Xx(s,"maxPool3d");const h=Qi(s.shape,i,a,1,o,l,u),c=hw(n.data.get(s.dataId).values,s.shape,s.dtype,L(s.shape),h,"max");return n.makeTensorInfo(c.shape,"float32",c.values)}},qk={kernelName:Me,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;Xx([s,i],"maxPool3DGrad");const h=Qi(i.shape,a,o,1,l,u),c=function(t,e){const n=ei(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let b=0;b<e.outDepth;++b){const x=b*r-d;let y=x;for(;y<0;)y+=a;const w=Math.min(e.inDepth,u+x);for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const v=Math.min(e.inHeight,h+u);for(let s=0;s<e.outWidth;++s){const p=s*i-f;let k=p;for(;k<0;)k+=l;const I=Math.min(e.inWidth,c+p);let S=Number.NEGATIVE_INFINITY,C=-1;for(let e=y;e<w;e+=a){const n=e-x;for(let r=d;r<v;r+=o){const s=r-u;for(let i=k;i<I;i+=l){const a=i-p,o=t.get(m,e,r,i,g);o>=S&&(S=o,C=n*h*c+s*h+a)}}}n.set(C,m,b,r,s,g)}}}return n}(n.bufferSync(i),h),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.dilationDepth,g=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterDepth,y=h.effectiveFilterHeight,w=h.effectiveFilterWidth,v=x-1-h.padInfo.front,k=w-1-h.padInfo.left,I=y-1-h.padInfo.top,S=ei(i.shape,"float32"),C=n.bufferSync(s);for(let t=0;t<h.batchSize;++t)for(let e=0;e<h.inChannels;++e)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let s=0;s<h.inWidth;++s){const i=n-v,a=r-I,o=s-k;let l=0;for(let n=0;n<x;n+=m){const r=(i+n)/d;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let s=0;s<y;s+=g){const i=(a+s)/p;if(!(i<0||i>=h.outHeight||Math.floor(i)!==i))for(let a=0;a<w;a+=b){const u=(o+a)/f;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;const d=x*y*w-1-c.get(t,r,i,u,e)===n*y*w+s*w+a?1:0;0!==d&&(l+=C.get(t,r,i,u,e)*d)}}}S.set(l,t,n,r,s,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},Kk={kernelName:Fe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:a}=e,o=i;Xx([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:h,dimRoundingMode:c}=r,d=Ji(o.shape,l,u,1,h,c),p=n.data.get(o.dataId).values,f=ei(d.outShape,o.dtype,uw(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=y-1-d.padInfo.top,I=ei(o.shape,"float32"),S=n.data.get(s.dataId).values,C=ei(s.shape,"float32",S);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,i=r-v;let a=0;for(let n=0;n<y;n+=b){const r=(s+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=x){const o=(i+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=y*w-1-f.get(t,r,o,e)===n*w+s?1:0;0!==l&&(a+=C.get(t,r,o,e)*l)}}I.set(a,t,n,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},Xk={kernelName:_e,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;Xx(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,h=Ji(r.shape,s,i,[1,1],a),[c,d]=function(t,e,n,r,s){const i=lw(t,0,n,L(e),s,"max"),a=uw(t,e,n,s,!0,r);return[i.values,a.values]}(u,r.shape,r.dtype,o,h),p=l.write(c,h.outShape,r.dtype),f=l.write(d,h.outShape,r.dtype);return[{dataId:p,shape:h.outShape,dtype:r.dtype},{dataId:f,shape:h.outShape,dtype:"int32"}]}},Yk={kernelName:Oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=C(i,s.shape),l=x(lo(s.shape,o)[1]),u=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(h);const c=Sy({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(c);const d=Fv({inputs:{a:c,b:h},backend:n});u.push(d);const p=lv({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:a}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}},Zk={kernelName:Le,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;Xx(s,"min");const o=C(i,s.shape);let l=o;const u=co(l,s.shape.length);let h=s;null!=u&&(h=Hy({inputs:{x:s},backend:n,attrs:{perm:u}}),l=fo(l.length,s.shape.length)),ho("min",l,h.shape.length);const[c,d]=lo(h.shape,l),p=x(d),f=U(x(c),h.dtype),m=n.data.get(h.dataId).values;for(let t=0;t<f.length;++t){const e=t*p;let n=m[e];for(let t=0;t<p;++t){const r=m[e+t];(Number.isNaN(r)||r<n)&&(n=r)}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(h);const g=n.makeTensorInfo(c,h.dtype,f);if(a){const t=Fy({inputs:{x:g},backend:n,attrs:{shape:uo(c,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},Jk=ay(((t,e)=>Math.min(t,e))),Qk=Ny(ze,Jk),tI={kernelName:ze,backendName:"cpu",kernelFunc:Qk},eI={kernelName:Pe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,mode:a}=r;Xx(s,"mirrorPad");const o=i.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=i.map((t=>t[0])),u=i.map(((t,e)=>t[0]+s.shape[e])),h="reflect"===a?0:1,c=n.data.get(s.dataId).values,d=s.shape.length,p=L(s.shape),f=x(o),m=o.length,g=L(o),b=$(s.dtype,f);for(let t=0;t<f;t++){let e=H(t,m,g);for(let t=0;t<m;t++)e[t]<l[t]?e[t]=2*l[t]-e[t]-h:e[t]>=u[t]&&(e[t]=2*(u[t]-1)-e[t]+h);e=e.map(((t,e)=>t-l[e]));const n=G(e,d,p);b[t]=c[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},nI=ay(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),rI=Ny(Be,nI),sI={kernelName:Be,backendName:"cpu",kernelFunc:rI};function iI(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,a=s.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=C([o],s.shape),u=Bk({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),h=uo(u.shape,l),c=Fy({inputs:{x:u},backend:n,attrs:{shape:h}}),d=Ov({inputs:{a:s,b:c},backend:n}),p=Sv({inputs:{x:d},backend:n}),f=lv({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=Fy({inputs:{x:f},backend:n,attrs:{shape:h}}),g=Fv({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const aI={kernelName:Tn,backendName:"cpu",kernelFunc:iI},oI={kernelName:Ue,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:a,normalized:o}=r;Xx(s,"multinomial");const l=o?s:iI({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],h=l.shape[1],c=n.data.get(l.dataId).values,d=[u,i],p=U(x(d),"int32");for(let t=0;t<u;++t){const e=t*h,n=new Float32Array(h-1);n[0]=c[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+c[e+t];const r=Co.alea(a.toString()),s=t*i;for(let t=0;t<i;++t){const e=r();p[s+t]=n.length;for(let r=0;r<n.length;r++)if(e<n[r]){p[s+t]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function lI(t,e,n){const r=$r(-1,n);return sv([],e,r,t,n)}const uI={kernelName:Ve,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;Xx(r,"neg");const s=n.data.get(r.dataId).values,[i,a]=lI(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,i)}},hI=Rl,cI={kernelName:He,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;Xx(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:c}=hI(u,h,a,o,l);return n.makeTensorInfo([c.length],"int32",new Int32Array(c))}},dI=Al,pI={kernelName:je,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Xx(s,"NonMaxSuppressionPadded");const h=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=dI(h,c,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},fI=Fl,mI={kernelName:qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Xx(s,"NonMaxSuppressionWithScore");const h=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=fI(h,c,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},gI=ay(((t,e)=>t!==e?1:0)),bI=Ny(Ge,gI,null,"bool"),xI={kernelName:Ge,backendName:"cpu",kernelFunc:bI},yI={kernelName:Xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:i,onValue:a,offValue:o}=r;Xx(s,"oneHot");const l=x(s.shape),u=new Float32Array(l*i);u.fill(o);const h=n.data.get(s.dataId).values;for(let t=0;t<l;++t)h[t]>=0&&h[t]<i&&(u[t*i+h[t]]=a);return n.makeTensorInfo([...s.shape,i],"int32",u)}};function wI(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=ky({inputs:{input:r},backend:n}),e=wI({inputs:{x:t},backend:n}),s=Aw({inputs:{input:r},backend:n}),i=wI({inputs:{x:s},backend:n}),a=yy({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return Wv({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const vI={kernelName:Yn,backendName:"cpu",kernelFunc:wI},kI={kernelName:Ke,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=ky({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=Aw({inputs:{input:s},backend:r}),a=wI({inputs:{x:i},backend:r}),o=yy({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return Wv({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function II(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return Nv({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,a=e[0].dtype;e.forEach((t=>{m(i,t.shape,"All tensors passed to stack must have matching shapes"),f(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=Dw({inputs:e.map((t=>{const e=Nv({inputs:{input:t},backend:n,attrs:{dim:s}});return o.push(e),e})),backend:n,attrs:{axis:s}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}const SI={kernelName:Ye,backendName:"cpu",kernelFunc:II},CI={kernelName:Ze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:a}=r;Xx(s,"pad");const o=i.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=i.map((t=>t[0])),u=n.data.get(s.dataId).values,h=x(s.shape),c=s.shape.length,d=L(s.shape),p=x(o),f=o.length,m=L(o),g=$(s.dtype,p);0!==a&&g.fill(a);for(let t=0;t<h;t++)g[G(H(t,c,d).map(((t,e)=>t+l[e])),f,m)]=u[t];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},NI=ay(((t,e)=>Math.pow(t,e))),$I=Ny(Je,NI),TI={kernelName:Je,backendName:"cpu",kernelFunc:$I};function EI(t,e,n,r){const[s,i]=lo(t,r),a=Qr(e,"int32"),o=U(x(s),a),l=x(i);for(let t=0;t<o.length;++t){const e=t*l;let r=1;for(let t=0;t<l;++t)r*=n[e+t];o[t]=r}return{outVals:o,outShape:s,outDtype:a}}const RI={kernelName:tn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;Xx(s,"prod");const o=s.shape.length,l=C(i,s.shape),u=co(l,o);let h=l,c=s;const d=[];null!=u&&(c=Hy({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(c),h=fo(h.length,o));const p=n.data.get(c.dataId).values,{outVals:f,outShape:m,outDtype:g}=EI(c.shape,c.dtype,p,h);let b=m;return a&&(b=uo(m,l)),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(b,g,f)}};function AI(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return U(0,r);const s=U(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return s}const FI={kernelName:en,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,dtype:i,step:a}=n,o=AI(r,s,a,i);return e.makeTensorInfo([o.length],i,o)}},DI=Jx(rn,(t=>1/t)),MI={kernelName:rn,backendName:"cpu",kernelFunc:DI},_I={kernelName:un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r;Xx(s,"resizeBilinear");const l=L(s.shape),[u,h]=o,[c,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(x([c,u,h,f])),b=[i&&u>1?d-1:d,i&&h>1?p-1:p],y=[i&&u>1?u-1:u,i&&h>1?h-1:h];let w=0;const v=b[0]/y[0],k=b[1]/y[1];for(let t=0;t<c;t++)for(let e=0;e<u;e++){let n;n=a?v*(e+.5)-.5:v*e;const r=Math.max(0,Math.floor(n)),s=n-r,i=Math.min(d-1,Math.ceil(n)),o=t*l[0]+r*l[1],u=t*l[0]+i*l[1];for(let t=0;t<h;t++){let e;e=a?k*(t+.5)-.5:k*t;const n=Math.max(0,Math.floor(e)),r=e-n,i=Math.min(p-1,Math.ceil(e)),h=o+n*l[2],c=u+n*l[2],d=o+i*l[2],b=u+i*l[2];for(let t=0;t<f;t++){const e=m[h+t],n=m[c+t],i=e+(m[d+t]-e)*r,a=i+(n+(m[b+t]-n)*r-i)*s;g[w++]=a}}}return n.makeTensorInfo([c,u,h,f],"float32",g)}},OI={kernelName:hn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r;Xx([i,s],"resizeBilinearGrad");const o=L(s.shape),[l,u,h,c]=s.shape,[,d,p]=i.shape,f=new Float32Array(l*u*h*c),m=[a&&d>1?u-1:u,a&&p>1?h-1:h],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],b=m[0]/g[0],x=m[1]/g[1],y=n.data.get(i.dataId).values;let w=0;for(let t=0;t<l;t++){const e=t*o[0];for(let t=0;t<d;t++){const n=t*b,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),i=e+r*o[1],a=e+s*o[1],l=n-r,d=1-l;for(let t=0;t<p;t++){const e=t*x,n=Math.floor(e),r=Math.min(Math.ceil(e),h-1),s=e-n,u=1-s,p=i+n*o[2],m=i+r*o[2],g=a+n*o[2],b=a+r*o[2],v=d*u,k=d*s,I=l*u,S=l*s;for(let t=0;t<c;t++){const e=y[w++];f[p+t]+=e*v,f[m+t]+=e*k,f[g+t]+=e*I,f[b+t]+=e*S}}}}return n.makeTensorInfo([l,h,u,c],"float32",f)}},LI={kernelName:on,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r;Xx(s,"resizeNearestNeighbor");const l=L(s.shape),[u,h]=o,[c,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(c*u*h*f),b=[i&&u>1?d-1:d,i&&h>1?p-1:p],x=[i&&u>1?u-1:u,i&&h>1?h-1:h],y=b[0]/x[0],w=b[1]/x[1];let v=0;for(let t=0;t<c;t++){const e=t*l[0];for(let t=0;t<u;t++){const n=a?y*(t+.5):y*t;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=e+r*l[1];for(let t=0;t<h;t++){const e=a?w*(t+.5):w*t;let n=Math.min(p-1,i?Math.round(e):Math.floor(e));a&&(n=Math.max(0,n));const r=s+n*l[2];for(let t=0;t<f;t++){const e=m[r+t];g[v++]=e}}}}return n.makeTensorInfo([c,u,h,f],s.dtype,g)}},zI={kernelName:ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r;Xx([i,s],"resizeNearestNeighborGrad");const o=L(s.shape),l=L(i.shape),[u,h,c,d]=s.shape,[,p,f]=i.shape,m=new Float32Array(u*h*c*d),g=n.data.get(i.dataId).values,b=[a&&p>1?h-1:h,a&&f>1?c-1:c],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],y=b[0]/x[0],w=b[1]/x[1],v=1/y,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let t=0;t<u;t++){const e=t*o[0];for(let t=0;t<h;t++){const n=e+t*o[1],r=Math.floor(t*v),s=Math.floor(r-I/2);for(let r=0;r<c;r++){const i=n+r*o[2],u=Math.floor(r*k),b=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<I;i++){const u=i+s;if(u<0||u>=p)continue;const d=e+u*l[1],m=u*y;if(t===Math.min(h-1,a?Math.round(m):Math.floor(m)))for(let t=0;t<S;t++){const e=t+b;if(e<0||e>=f)continue;const s=d+e*l[2],i=e*w;r===Math.min(c-1,a?Math.round(i):Math.floor(i))&&(o+=g[s+n])}}m[i+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},PI={kernelName:dn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r;Xx(s,"reverse");const a=s.shape.length,o=C(i,s.shape);if(0===a)return ny({inputs:{x:s},backend:n});const l=new Br(s.shape,s.dtype),u=n.bufferSync(s);for(let t=0;t<l.size;t++){const e=l.indexToLoc(t),n=e.slice();o.forEach((t=>n[t]=s.shape[t]-1-n[t])),l.set(u.get(...n),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},BI={kernelName:Qn,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:a}=e,o=n,l=$(r.dtype,x(r.shape)),[u,h,c,d]=r.shape,[p,f]=ku(a,h,c),m=Math.sin(s),g=Math.cos(s),b=o.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=t*c*h*d;for(let t=0;t<h;t++){const n=t*(c*d);for(let r=0;r<c;r++){const s=r*d;for(let a=0;a<d;a++){const o=[u,t,r,a],x=o[2],y=o[1];let w=(x-p)*g-(y-f)*m,v=(x-p)*m+(y-f)*g;w=Math.round(w+p),v=Math.round(v+f);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),w>=0&&w<c&&v>=0&&v<h&&(k=b[e+v*(c*d)+w*d+a]),l[e+n+s+a]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},UI=Jx(pn,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),WI={kernelName:pn,backendName:"cpu",kernelFunc:UI},VI=fy((t=>1/Math.sqrt(t))),GI=Qx(fn,VI),HI={kernelName:fn,backendName:"cpu",kernelFunc:GI};function jI(t,e,n,r,s,i,a,o,l,u){const h=[r/s,s],c=t.values,d=e.values;if(0===r)return ei(n,e.dtype);const p=ei(h,e.dtype);p.values.fill(l);for(let t=0;t<i;t++){const i=[];let l=0;for(let e=0;e<a;e++){const n=c[t*a+e];i.push(n),l+=n*o[e]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[t*s+n]:p.values[l*s+n]=0===e.rank?d[0]:d[t*s+n]}return p}const qI={kernelName:mn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:c}=Au(0,s,a),d=jI(n.bufferSync(s),n.bufferSync(i),a,c,u,l,o,h,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}},KI={kernelName:gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e;Xx([r,s,i],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,h=Qr(s.dtype,i.dtype),c=U(x(s.shape),h);let d=0;const p=0===a||a>1||1===s.shape.length?1:x(s.shape.slice(1));for(let t=0;t<o.length;t++)for(let e=0;e<p;e++)1===o[t]?c[d++]=l[t]:c[d++]=u[t];return n.makeTensorInfo(s.shape,h,c)}},XI=Fu,YI=Du,ZI=Jx(bn,(t=>t>=0?YI*t:XI*(Math.exp(t)-1))),JI={kernelName:bn,backendName:"cpu",kernelFunc:ZI},QI=Jx(vn,(t=>t<0?-1:t>0?1:0)),tS={kernelName:vn,backendName:"cpu",kernelFunc:QI},eS=Jx(yn,(t=>Math.sin(t))),nS={kernelName:yn,backendName:"cpu",kernelFunc:eS},rS=Jx(wn,(t=>Math.sinh(t))),sS={kernelName:wn,backendName:"cpu",kernelFunc:rS},iS=Math.log(1.1920928955078125e-7)+2,aS=Jx(In,(t=>{const e=t>-iS,n=t<iS,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s})),oS={kernelName:In,backendName:"cpu",kernelFunc:aS},lS={kernelName:Nn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:a}=r;Xx([s],"spaceToBatchND");const o=x(i),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<s.shape.length;++t)l.push([0,0]);const u=CI.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Iu(u.shape,i,o,!1),c=Su(h.length,i.length,!1),d=Cu(u.shape,i,o,!1),p=Fy({inputs:{x:u},backend:n,attrs:{shape:h}}),f=Hy({inputs:{x:p},backend:n,attrs:{perm:c}}),m=Fy({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function uS(t,e,n,r,s,i,a){const o=e[0],l=i[0],u=new Array(l),h=new Array(o),c=e[1];if(0===l){if(0!==o)throw new Error(nh(o));return[T(n,0),[0,c],T(s,0),u,h]}let d=!0,p=0;const f=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*c];if(n<0)throw new Error(rh(e,n));if(n>=l)throw new Error(sh(e,n,l));++f[n],d=d&&n>=p,p=n}let m=!0;for(let t=0;t<l;++t){const e=0===f[t];u[t]=e,m=m&&!e,f[t]=Math.max(f[t],1),t>0&&(f[t]+=f[t-1])}if(m&&d){const e=t,n=r;for(let t=0;t<o;++t)h[t]=t;return[e,[o,c],n,u,h]}{const e=f[l-1],i=T(n,e*c),d=T(s,e),p=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*c],s=p[n],a=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<c;++n)i[a*c+n]=t[e*c+n];d[a]=r[e],h[e]=a}for(let t=0;t<l;++t)if(0===p[t]){const e=0===t?0:f[t-1];i[e*c+0]=t;for(let t=1;t<c;++t)i[e*c+t]=0;d[e]=a}return[i,[e,c],d,u,h]}}const hS={kernelName:En,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:i,defaultValue:a}=e;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values[0],[c,d,p,f,m]=uS(o,r.shape,r.dtype,l,s.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,c),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function cS(t,e,n,r,s){const i=x(r),a=e[0],o=s.length,l=[];let u=1,h=-1;for(let t=0;t<o;++t){const e=s[t];if(-1===e){if(-1!==h)throw new Error(ih(h,t));h=t,l.push(1)}else{if(e<0)throw new Error(ah(t,e));u*=e,l.push(e)}}if(-1!==h){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(i/u);if(u*t!==i)throw new Error(lh(r,l));l[h]=t}if(x(l)!==i)throw new Error(uh(r,l));const c=r.length,d=[];if(c>0){d[c-1]=1;for(let t=c-2;t>=0;--t)d[t]=d[t+1]*r[t+1]}const p=[];if(o>0){p[o-1]=1;for(let t=o-2;t>=0;--t)p[t]=p[t+1]*l[t+1]}const f=T(n,a*o);for(let e=0;e<a;++e){let n=0;for(let r=0;r<c;++r)n+=t[e*c+r]*d[r];for(let t=0;t<o;++t)f[e*o+t]=Math.trunc(n/p[t]),n%=p[t]}return[f,[a,o],l]}const dS={kernelName:Rn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:i}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,h,c]=cS(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([c.length],i.dtype,new Int32Array(c))]}};function pS(t,e,n,r,s,i=!1,a=0){const o=r.length,l=[e[0],t.length/e[0]],u=l[1],h=o>0?s[o-1]+1:0;if(h<0)throw new Error("segment ids must be >= 0");const c=e.slice();c[0]=h;const d=T(n,c.reduce(((t,e)=>t*e),1));if(0===o)return h>0&&d.fill(a),[d,c];if(h<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let e=0;if(f<o){if(e=s[f],g===e){++f;continue}if(g>=e)throw new Error("segment ids are not increasing")}if(g<0||g>=h)throw new Error(dh(g,h));g>m&&d.fill(a,m*u,g*u);for(let e=p;e<f;++e){const n=r[e];if(n<0||n>=l[0])throw new Error(ph(e,r[e],l[0]));for(let e=0;e<u;e++)d[g*u+e]+=t[n*u+e]}if(i)for(let t=0;t<u;t++)d[g*u+t]/=f-p;if(p=f,++f,m=g+1,g=e,f>o)break}return m<h&&d.fill(a,m*u,h*u),[d,c]}const fS={kernelName:An,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,h]=pS(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}},mS={kernelName:Fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,h]=pS(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}},gS={kernelName:Dn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:h,strides:c,outputSize:d}=Au(0,s,o),p=jI(n.bufferSync(s),n.bufferSync(i),o,d,h,u,l,c,n.data.get(a.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},bS={kernelName:$n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:a}=r,o=C(a,s.shape)[0],l=eh(s,i,o),u=new Array(s.shape.length).fill(0),h=s.shape.slice();return l.map((t=>{const e=[...h];e[o]=t;const r=bw({inputs:{x:s},backend:n,attrs:{begin:u,size:e}});return u[o]+=t,r}))}},xS=fy((t=>Math.sqrt(t))),yS=Jx(Sn,(t=>Math.sqrt(t))),wS={kernelName:Sn,backendName:"cpu",kernelFunc:yS},vS={kernelName:_n,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;Xx(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];i[t]=e*e}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},kS=ay(((t,e)=>{const n=t-e;return n*n})),IS=Ny(Mn,kS),SS={kernelName:Mn,backendName:"cpu",kernelFunc:IS},CS=Jx(Zn,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),NS={kernelName:Zn,backendName:"cpu",kernelFunc:CS};function $S(t,e,n,r){const s=ei(t,e.dtype);for(let t=0;t<s.size;t++){const i=s.indexToLoc(t),a=new Array(i.length);for(let t=0;t<a.length;t++)a[t]=i[t]*n[t]+r[t];s.set(e.get(...a),...i)}return s}const TS={kernelName:On,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:c,shrinkAxisMask:d}=r;Xx(s,"stridedSlice");const{finalShapeSparse:p,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:w,strides:v}=Ai(s.shape,i,a,o,l,u,h,c,d);let k;if(g)k=Fy({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||x){f(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const t=xi(y,w,v),e=bw({inputs:{x:s},backend:n,attrs:{begin:y,size:t}});k=Fy({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(e)}else{const t=$S(p,n.bufferSync(s),v,y);k=n.makeTensorInfo(m,t.dtype,t.values)}return k}};class ES{constructor(t,e,n,r,s,i){this.separator=Rr(t),this.nGramWidths=e,this.leftPad=Rr(n),this.rightPad=Rr(r),this.padWidth=s,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,r,s,i){for(let a=0;a<s;++a){const o=this.getPadWidth(i),l=Math.max(0,o-a),u=Math.max(0,o-(s-(a+1))),h=i-(l+u),c=e+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let e=0;e<h;++e)d+=t[c+e].length;d+=u*this.rightPad.length,d+=(l+u+h-1)*this.separator.length,n[r+a]=new Uint8Array(d);const p=n[r+a];let f=0;const m=t=>t.forEach((t=>p[f++]=t));for(let t=0;t<l;++t)m(this.leftPad),m(this.separator);for(let e=0;e<h-1;++e)m(t[c+e]),m(this.separator);if(h>0){m(t[c+h-1]);for(let t=0;t<u;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;t<u-1;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,r=e.length;if(r>0){let t=e[0];if(0!==t)throw new Error(`First split value must be 0, got ${t}`);for(let s=1;s<r;++s){let r=e[s]>=t;if(r=r&&e[s]<=n,!r)throw new Error(`Invalid split value ${e[s]}, must be in [${t}, ${n}]`);t=e[s]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${t}`)}const s=r-1,i=T("int32",r);if(0===n||0===r){const t=new Array(n);for(let t=0;t<=s;++t)i[t]=0;return[t,i]}i[0]=0;for(let t=1;t<=s;++t){const n=e[t]-e[t-1];let r=0;this.nGramWidths.forEach((t=>{r+=this.getNumNGrams(n,t)})),this.preserveShort&&n>0&&0===r&&(r=1),i[t]=i[t-1]+r}const a=new Array(i[s]);for(let n=0;n<s;++n){const r=e[n];let s=i[n];if(this.nGramWidths.forEach((i=>{const o=e[n+1]-e[n],l=this.getNumNGrams(o,i);this.createNGrams(t,r,a,s,l,i),s+=l})),this.preserveShort&&s===i[n]){const i=e[n+1]-e[n];if(0===i)continue;const o=i+2*this.padWidth,l=1;this.createNGrams(t,r,a,s,l,o)}}return[a,i]}}function RS(t,e,n,r,s,i,a,o){return new ES(n,r,s,i,a,o).compute(t,e)}const AS={kernelName:Ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:c}=e,d=n.data.get(h.dataId).values,p=n.data.get(c.dataId).values,[f,m]=RS(d,p,s,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(c.shape,"int32",m)]}};function FS(t,e,n,r){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)r.push(t.subarray(e,e+1));return}if(1===e.length){const s=e[0];let i=t.indexOf(s);for(;-1!==i;){const e=t.subarray(0,i);n&&0===e.length||r.push(e),i=(t=t.subarray(i+1)).indexOf(s)}return void(n&&0===t.length||r.push(t))}let s=0;for(let i=0;i<t.length+1;i++)if(i===t.length||-1!==e.indexOf(t[i])){const e=t.subarray(s,i);n&&0===e.length||r.push(e),s=i+1}}function DS(t,e,n){const r=t.length,s=[];let i=0,a=0;const o=new Array(r);for(let l=0;l<r;++l){const r=s.length;FS(t[l],e,n,s);const u=s.length-r;o[l]=u,i+=u,a=Math.max(a,u)}const l=T("int32",2*i),u=new Array(i),h=[r,a];let c=0;for(let t=0;t<r;++t)for(let e=0;e<o[t];++e)l[2*c]=t,l[2*c+1]=e,u[c]=s[c],++c;return[l,u,h]}const MS={kernelName:zn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:i,delimiter:a}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values[0],[u,h,c]=DS(o,l,s),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(c))]}};function _S(t,e){const n=T("int32",t.length);for(let r=0;r<t.length;++r)n[r]=Nr(t[r]).modulo(e).getLowBitsUnsigned();return n}const OS={kernelName:Pn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=_S(n.data.get(i.dataId).values,s);return n.makeTensorInfo(i.shape,"int32",a)}},LS=Jx(Un,(t=>Math.tan(t))),zS={kernelName:Un,backendName:"cpu",kernelFunc:LS},PS=Jx(Wn,(t=>Math.tanh(t)));function BS(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=ei(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const i=t.locToIndex(s);r.values[e]=t.values[i]}return r}const US=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function WS(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,i=e-n+1,a=Math.log(s),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(s-o)/s)*Math.sign(i-s/2);WS(t,e,Math.max(n,Math.floor(e-i*o/s+l)),Math.min(r,Math.floor(e+(s-i)*o/s+l)))}const s=t[e];let i=n,a=r;for(p(t,n,e),US(t[r],s)>0&&p(t,n,r);i<a;){for(p(t,i,a),i++,a--;US(t[i],s)<0;)i+=1;for(;US(t[a],s)>0;)a-=1}0===US(t[n],s)?p(t,n,a):(a+=1,p(t,a,r)),a<=e&&(n=a+1),e<=a&&(r=a-1)}}function VS(t,e,n,r,s){const i=e[e.length-1],[a,o]=[t.length/i,i],l=$(n,a*r),u=$("int32",a*r);for(let e=0;e<a;e++){const n=e*o,i=t.subarray(n,n+o);let a=new Array(i.length);i.forEach(((t,e)=>a[e]={value:t,index:e})),r<a.length&&(WS(a,r),a=a.slice(0,r)),s&&a.sort(US);const h=e*r,c=l.subarray(h,h+r),d=u.subarray(h,h+r);for(let t=0;t<r;t++)c[t]=a[t].value,d[t]=a[t].index}const h=e.slice();return h[h.length-1]=r,[ei(h,n,l),ei(h,"int32",u)]}const GS={kernelName:Hn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{image:s,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[h,c,d,p]=s.shape,[f,m]=null!=u?u:[c,d],g=[h,f,m,p],b=L(s.shape),y=b[0],w=b[1],v=b[2],k=$(s.dtype,x(g));k.fill(l);const I=r.data.get(s.dataId).values,S=r.data.get(i.dataId).values;for(let t=0;t<h;++t){const e=1===i.shape[0]?S:S.subarray(8*t,8*t+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let i;const u=e[6]*r+e[7]*n+1;if(0===u)continue;const h=(e[0]*r+e[1]*n+e[2])/u,p=(e[3]*r+e[4]*n+e[5])/u,f=HS(h,d,o),m=HS(p,c,o);switch(a){case"nearest":i=qS(I,c,d,y,w,v,t,m,f,s,l);break;case"bilinear":i=KS(I,c,d,y,w,v,t,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}k[t*y+n*w+r*v+s]=i}return r.makeTensorInfo(g,s.dtype,k)}return{dataId:r.write(k,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function HS(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return c(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return c(0,n,e-1)}(t,e);case"nearest":return function(t,e){return c(0,t,e-1)}(t,e);default:return function(t,e){return t}(t)}}function jS(t,e,n,r,s,i,a,o,l,u,h){return 0<=o&&o<e&&0<=l&&l<n?t[a*r+o*s+l*i+u]:h}function qS(t,e,n,r,s,i,a,o,l,u,h){return jS(t,e,n,r,s,i,a,Math.round(o),Math.round(l),u,h)}function KS(t,e,n,r,s,i,a,o,l,u,h){const c=Math.floor(o),d=Math.floor(l),p=c+1,f=d+1;return(p-o)*((f-l)*jS(t,e,n,r,s,i,a,c,d,u,h)+(l-d)*jS(t,e,n,r,s,i,a,c,f,u,h))+(o-c)*((f-l)*jS(t,e,n,r,s,i,a,p,d,u,h)+(l-d)*jS(t,e,n,r,s,i,a,p,f,u,h))}function XS(t,e,n,r){const s=C(e,n)[0],i=[1,n[0],1];for(let t=0;t<s;t++)i[0]*=n[t];i[1]=n[s];for(let t=s+1;t<n.length;t++)i[2]*=n[t];const a={},o=new Int32Array(n[s]),l=new Br(i,r,t),u=[],h=1===i[0]&&1===i[2];for(let e=0;e<n[s];e++){let n;if(h)n=t[e].toString();else{const t=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)t.push(l.get(n,e,r));n=t.join(",")}if(void 0!==a[n])o[e]=a[n];else{const t=Object.keys(a).length;a[n]=t,o[e]=t,u.push(e)}}const c=i.slice();c[1]=Object.keys(a).length;const d=new Br(c,r);u.forEach(((t,e)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(l.get(n,t,r),n,e,r)}));const p=n.slice();return p[s]=c[1],{outputValues:d.values,outputShape:p,indices:o}}const YS={kernelName:Xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:a}=r;Xx(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-i.shape.length;let h=i;for(let t=0;t<u;++t){const e=Nv({inputs:{input:h},backend:n,attrs:{dim:t+1}});h=e,l.push(e)}for(let t=0;t<a;++t){const e=$r(t,"int32"),r=n.makeTensorInfo([],"int32",e),i=pv({inputs:{a:r,b:h},backend:n}),a=Sy({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),u=av({inputs:{a,b:s},backend:n}),c=lv({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(c),l.push(r),l.push(i),l.push(a),l.push(u),l.push(c)}const c=II({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},ZS=[Oy,zy,By,Wy,Ay,Vy,qy,Ky,Xy,Yy,Jy,tw,nw,iw,ow,cw,dw,pw,fw,_y,mw,yw,kw,Iw,Cy,Nw,Tw,wy,Ew,Mw,Ow,Lw,zw,Pw,Bw,Uw,Vw,Hw,jw,qw,Kw,Xw,Zw,Jw,Qw,tv,ev,nv,rv,hv,ey,cv,fv,kv,Cv,$v,Rv,Uv,Vv,Gv,qv,Yv,Zv,Jv,tk,nk,ik,lk,ry,uk,Fw,ck,pk,mk,iy,xk,vk,Ik,Nk,Tk,Ak,Dk,Ok,Lk,zk,Uk,Gk,Hk,jk,qk,Kk,Xk,Yk,Zk,tI,eI,sI,oI,ov,uI,cI,pI,mI,xI,yI,kI,SI,CI,TI,uy,RI,FI,Iy,Dv,MI,cy,py,Dy,_I,OI,LI,zI,PI,BI,WI,HI,qI,KI,JI,by,tS,nS,sS,xw,aI,oS,lS,hS,dS,fS,mS,gS,bS,wS,vS,SS,NS,TS,AS,MS,OS,Lv,uv,zS,{kernelName:Wn,backendName:"cpu",kernelFunc:PS},{kernelName:Vn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;Xx(s,"tile");const a=BS(n.bufferSync(s),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:Gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:a}=r;Xx(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=VS(o,s.shape,s.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},GS,jy,{kernelName:qn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;Xx(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=XS(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Kn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s.shape.length,o=s.shape[i],l=new Array(a-1);let u=0;for(let t=0;t<a;t++)t!==i&&(l[u++]=s.shape[t]);const h=new Array(a).fill(0),c=s.shape.slice();c[i]=1;const d=new Array(o);for(let t=0;t<d.length;t++){h[i]=t;const e=bw({inputs:{x:s},backend:n,attrs:{begin:h,size:c}});d[t]=Fy({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}},YS,vI];for(const t of ZS)hr(t);const JS={},QS={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function tC(t,e){if(!(t in JS)){const n=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t):e;return n.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete JS[t]}),!1),1===t?n.getContext("webgl",QS)||n.getContext("experimental-webgl",QS):n.getContext("webgl2",QS)}(t,e);if(null===n)return console.log("Could not get context for WebGL version",t),null;JS[t]=n}const n=JS[t];return null==n||n.isContextLost()?(delete JS[t],tC(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),JS[t])}var eC,nC,rC;function sC(t,e){return[e,t]}function iC(t){const e=x(t);return v(Math.ceil(e/4))}function aC(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function oC(t,e){const n=t;let r,s,i,a,o,l,u,h,c,d;return 2===X().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,h=1,c=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=t.RGBA,s=t.RGBA,i=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,h=4,c=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT,l=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:h,textureTypeHalfFloat:c,textureTypeFloat:d}}function lC(t,e){const n=e();return X().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function uC(t){return!!(X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function hC(t,e){return xC(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(eC||(eC={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(nC||(nC={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(rC||(rC={}));const cC=/ERROR: [0-9]+:([0-9]+):/g;function dC(t,e){if(lC(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function pC(t,e,n,r,s,i,a){const o=t.getAttribLocation(e,n);return-1!==o&&(lC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),lC(t,(()=>t.vertexAttribPointer(o,s,t.FLOAT,!1,i,a))),lC(t,(()=>t.enableVertexAttribArray(o))),!0)}function fC(t,e,n,r){lC(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),lC(t,(()=>t.activeTexture(t.TEXTURE0+n))),lC(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),lC(t,(()=>t.uniform1i(n,r)))}function mC(t,e,n){lC(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),lC(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function gC(t,e){lC(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),lC(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function bC(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function xC(t,e,n){const r=lC(t,(()=>e()));if(null==r)throw new Error(n);return r}function yC(t,e=2){return x(t.slice(0,t.length-e))}function wC(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function vC(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[yC(t),...wC(t)]),e}function kC(t){return t%2==0}function IC(t,e){if(y(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(kC(n)&&kC(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&kC(t[0])&&kC(e[0])}let SC,CC;function NC(t,e){return null!=t.getExtension(e)}function $C(t){try{if(null!=tC(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function TC(t){const e=oC(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function EC(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&f("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const RC=X();function AC(){let t,e,n,r,s,i,a,o,l,u;return 2===X().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function FC(t,e,n="index"){const r=L(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function DC(t,e,n="index"){const r=L(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * outShapeStrides[${s}]`:`index -= ${t[s]} * outShapeStrides[${s}]`};`)).join("")}function MC(t){const e=L(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}RC.registerFlag("HAS_WEBGL",(()=>RC.getNumber("WEBGL_VERSION")>0)),RC.registerFlag("WEBGL_VERSION",(()=>$C(2)?2:$C(1)?1:0)),RC.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),RC.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===RC.get("WEBGL_VERSION"))),RC.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),RC.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),RC.registerFlag("WEBGL_PACK",(()=>RC.getBool("HAS_WEBGL"))),RC.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>RC.getBool("WEBGL_PACK"))),RC.registerFlag("WEBGL_PACK_CLIP",(()=>RC.getBool("WEBGL_PACK"))),RC.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>RC.getBool("WEBGL_PACK"))),RC.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>RC.getBool("WEBGL_PACK"))),RC.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>RC.getBool("WEBGL_PACK"))),RC.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>RC.getBool("WEBGL_PACK"))),RC.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>RC.getBool("WEBGL_PACK"))),RC.registerFlag("WEBGL_PACK_REDUCE",(()=>RC.getBool("WEBGL_PACK"))),RC.registerFlag("WEBGL_LAZILY_UNPACK",(()=>RC.getBool("WEBGL_PACK"))),RC.registerFlag("WEBGL_CONV_IM2COL",(()=>RC.getBool("WEBGL_PACK"))),RC.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==SC){const e=tC(t);SC=e.getParameter(e.MAX_TEXTURE_SIZE)}return SC}(RC.getNumber("WEBGL_VERSION")))),RC.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==CC){const e=tC(t);CC=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,CC)}(RC.getNumber("WEBGL_VERSION")))),RC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=RC.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=tC(t);return e=NC(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:NC(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),RC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>RC.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!cs())),RC.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=tC(t);if(1===t){if(!NC(e,"OES_texture_float"))return!1}else if(!NC(e,"EXT_color_buffer_float"))return!1;return TC(e)}(RC.getNumber("WEBGL_VERSION")))),RC.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!RC.getBool("WEBGL_FORCE_F16_TEXTURES")&&RC.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),RC.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=tC(t);if(1!==t){if(NC(e,"EXT_color_buffer_float"))return TC(e);const t="EXT_color_buffer_half_float";if(NC(e,t)){const n=e.getExtension(t);return function(t,e){const n=oC(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),i}(e,n)}return!1}return!!NC(e,"OES_texture_float")&&!!NC(e,"WEBGL_color_buffer_float")&&TC(e)}(RC.getNumber("WEBGL_VERSION")))),RC.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=RC.getNumber("WEBGL_VERSION"))&&null!=tC(t).fenceSync;var t})),RC.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>RC.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),RC.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),RC.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>cs()?1:-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)})),RC.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),RC.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),RC.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),RC.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const _C="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:OC}=r;function LC(t,e,n){const r=[];if(t.forEach((t=>{const e=x(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`)),n.enableShapeUniforms){const{uniformShape:e}=qC(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:r.push(`uniform int ${t.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${t.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${t.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${t.name}Shape;`)}r.push(`uniform ivec2 ${t.name}TexShape;`)}})),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((t=>{r.push(`uniform ${t.type} ${t.name}${t.arrayIndex?`[${t.arrayIndex}]`:""};`)}));const s=r.join("\n"),i=t.map((t=>function(t,e,n=!1,r){let s="";s+=n?PC(t,r):zC(t,r);const i=t.shapeInfo.logicalShape,a=e.logicalShape;return i.length<=a.length&&(s+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=OC(t.shapeInfo.logicalShape,e.logicalShape),l=jC(a),u=a-i;let h;const c=["x","y","z","w","u","v"];h=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${c[t+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${c[e+u]}`)).join(", ");let p="return outputValue;";const f=1===x(t.shapeInfo.logicalShape),m=1===x(e.logicalShape);if(1!==i||f||m){if(f&&!m)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=i-2,e=i-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,a=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&y(a,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=jC(l),h=OC(t.shapeInfo.logicalShape,e.logicalShape),c=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&h.length>=1?"coords = 0;":h.map((t=>`coords.${p[t+c]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${p[e+c]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(t,e)),s}(t,e,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=e.texShape,o=AC(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,h,c=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${BC}\n    ${UC}\n    ${WC}\n  `}(o);return e.isPacked?(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,e,n);case 2:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(y(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),i=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),i=s*Math.ceil(t[t.length-2]/2);let a=i,o="",l="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],o=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+o,l=`b${e}, `+l;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${l});\n    }\n  `}(t,e,n)}}(e.logicalShape,a,n.enableShapeUniforms),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(o)):(u=function(t,e,n){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e,n){return 1===e[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e,n);case 2:return function(t,e,n){return y(t,e)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${DC(["r","c","d"],t)}\n    return ivec3(r, c, d);\n  }\n`;const r=FC(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(t,e,n);case 4:return function(t,e,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${DC(["r","c","d","d2"],t)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=FC(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e,n);case 5:return function(t,e){const n=FC(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=FC(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,a,n.enableShapeUniforms),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(c+=VC),[c,l,h,s,u,i,n.userCode].join("\n")}function zC(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,i]=t.shapeInfo.texShape;if(1===s&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=GC(n);if(e)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=t.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${HC(t)}\n      }\n    `;const s=t.shapeInfo.texShape,i=s[0],a=s[1];if(1===a&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=GC(n);return 1===a?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?e?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:e?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape;if(null!=i&&y(n,i)){if(e)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const t=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${t}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=N(n),l=a;if(l.length<n.length){const n=["row","col"];return`\n      ${zC(KC(t,l),e)}\n      float ${s}(int row, int col) {\n        return ${s}(${XC(n,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${HC(t)}\n      }\n    `;const u=i[0],h=i[1],c=GC(r);return 1===h?e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${c}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${c}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:e?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${c};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${h}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=N(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${zC(KC(t,u),e)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${XC(n,l)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${a}, 1)));\n        ${HC(t)}\n      }\n    `;const h=t.shapeInfo.texShape,c=h[0],d=h[1],p=t.shapeInfo.flatOffset;if(d===i&&null==p)return e?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${c}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===a&&null==p)return e?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=GC(r);return e?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${i} + col * ${a} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${c}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:l,keptDims:u}=N(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${zC(KC(t,l),e)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${XC(n,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${i}, 1)));\n        ${HC(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,d=c[0],p=c[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==h)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===i&&null==h)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=GC(r);return e?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],i=e[3]*s,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=N(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${zC(KC(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${XC(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${HC(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,d=c[0],p=c[1];if(p===o&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${GC(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=N(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${zC(KC(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${XC(e,i)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,h=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${HC(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===h&&null==c)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==c)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${GC(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function PC(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${AC().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=AC();if(e)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,a=i[0],o=i[1],l=AC();if(null!=i&&y(n,i))return e?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(e)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=[1,2],i=["b","row","col"];return`\n        ${PC(KC(t,n.slice(1)),e)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${XC(i,r)});\n        }\n      `}const o=AC();if(e)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=a[0],u=a[1],h=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h*Math.ceil(n[1]/2)}, ${h}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(t,e);default:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=AC();if(e)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=t.shapeInfo.logicalShape,a=i.length,o=t.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],h=l[1],c=Math.ceil(i[a-1]/2);let d=c*Math.ceil(i[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${c} + (col / 2)`;for(let t=2;t<a-1;t++)p=`int b${t}, `+p,d*=i[a-t-1],f=`b${t} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${h};\n      int texC = index - texR * ${h};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(t,e)}}const BC="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",UC="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",WC="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",VC="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function GC(t){return`offset${t}`}function HC(t){const e=t.name,n=x(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function jC(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function qC(t,e,n){const{newShape:r,keptDims:s}=N(e),i=e.length,a=t&&3===i&&1===e[0],o=a?e.slice(1):r,l=!t&&i>1&&!y(e,n)&&r.length<i||a;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:s}}function KC(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function XC(t,e){return e.map((e=>t[e])).join(", ")}function YC(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],i=s.shape;if(!y(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&s.isUniform)return;const a=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!y(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}function ZC(t){return X().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class JC{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=eC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=AC();this.outputShape=t,this.enableShapeUniforms=ZC(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?DC(["r","c","d"],t):FC(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class QC{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=eC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=AC();this.outputShape=t,this.enableShapeUniforms=ZC(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?DC(["r","c","d"],t):FC(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class tN{constructor(t){this.variableNames=["A"],this.outTexUsage=nC.DOWNLOAD;const e=AC();this.outputShape=t,this.userCode=`\n      ${_C}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class eN{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=nC.DOWNLOAD;const e=AC();this.outputShape=t,this.userCode=`\n      ${_C}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class nN{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=AC();this.outputShape=t,this.enableShapeUniforms=ZC(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":MC(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class rN{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=AC();this.outputShape=t,this.enableShapeUniforms=ZC(this.outputShape.length);let r="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let s=0;s<=1;s++){const i=2*e+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${e} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${e};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":MC(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function sN(t,e,n,r,s,i){!function(t,e){const n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return xC(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return lC(t,(()=>t.bindTexture(o,a))),lC(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),lC(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),lC(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),lC(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),1===X().getNumber("WEBGL_VERSION")?lC(t,(()=>t.texImage2D(o,0,r,e,n,0,s,i,null))):lC(t,(()=>t.texStorage2D(o,1,r,e,n))),lC(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),{texture:a,texShape:[n,e]}}function iN(t){return t.internalFormatFloat}function aN(t){return t.internalFormatHalfFloat}function oN(t){return t.downloadTextureFormat}function lN(t){return t.internalFormatPackedFloat}function uN(t){return t.internalFormatPackedHalfFloat}class hN{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=X().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){JS[t]=e}(e,t)):this.gl=tC(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===X().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=hC(this.gl,t),NC(this.gl,e))this.textureHalfFloatExtension=hC(this.gl,e);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),NC(this.gl,r))this.colorBufferHalfFloatExtension=hC(this.gl,r);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",NC(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!NC(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=xC(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return lC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),lC(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=xC(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return lC(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),lC(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return xC(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=oC(this.gl,this.textureHalfFloatExtension)}get debug(){return X().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;lC(t,(()=>t.finish())),lC(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),lC(t,(()=>t.deleteFramebuffer(this.framebuffer))),lC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),lC(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),lC(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=sC(e,n);return sN(t,s,i,iN(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=sC(e,n);return sN(t,s,i,aN(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=sC(e,n);return sN(t,s,i,oN(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){lC(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?2===X().getNumber("WEBGL_VERSION")?lC(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data))):lC(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):2===X().getNumber("WEBGL_VERSION")?lC(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n))):lC(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),lC(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,i){let a,o,l;lC(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(a=new Float32Array(n*r*4),o=t.FLOAT,l=i.internalFormatPackedFloat),a.set(s),2===X().getNumber("WEBGL_VERSION")?lC(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,o,a))):lC(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,o,a))),lC(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=aC(e,n);return sN(t,s,i,uN(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,i]=aC(e,n);return sN(t,s,i,lN(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(gC(this.gl,this.framebuffer),this.outputTexture=null),lC(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,i]=sC(e,n),a=new Uint8Array(e*n*4);return lC(t,(()=>t.readPixels(0,0,s,i,r.downloadTextureFormat,t.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,i){return function(t,e,n,r,s,i,a,o){const l=t,u=new Float32Array(function(t,e){const[n,r]=aC(t,e);return n*r*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();lC(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const i=16*e*n;return lC(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ))),lC(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),lC(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(X().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return lC(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function(t){const e=AC();return function(t,e){const n=xC(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(lC(t,(()=>t.shaderSource(n,e))),lC(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const n=function(t){return xC(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return lC(e,(()=>e.attachShader(n,this.vertexShader))),lC(e,(()=>e.attachShader(n,t))),function(t,e){if(lC(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n),this.debug&&dC(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(t,e,n){return lC(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),pC(t,e,"clipSpacePos",n,3,20,0)&&pC(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&lC(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&dC(this.gl,this.program),lC(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return xC(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),lC(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),fC(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=aC(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&dC(this.gl,this.program),bC(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),lC(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),lC(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=hC(this.gl,2===X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await I((()=>this.disposed||this.isQueryAvailable(t,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||I((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),mC(this.gl,t,this.framebuffer),this.debug&&bC(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(mC(this.gl,this.outputTexture,this.framebuffer),this.debug&&bC(this.gl)):gC(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;mC(r,t,this.framebuffer),this.debug&&bC(r),this.outputTexture=t,lC(r,(()=>r.viewport(0,0,e,n))),lC(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),lC(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:cN,bincountImpl:dN,bincountReduceImpl:pN,ceilImpl:fN,concatImpl:mN,equalImpl:gN,expImpl:bN,expm1Impl:xN,floorImpl:yN,gatherNdImpl:wN,gatherV2Impl:vN,greaterImpl:kN,greaterEqualImpl:IN,lessImpl:SN,lessEqualImpl:CN,linSpaceImpl:NN,logImpl:$N,maxImpl:TN,maximumImpl:EN,minimumImpl:RN,multiplyImpl:AN,negImpl:FN,notEqualImpl:DN,prodImpl:MN,rangeImpl:_N,rsqrtImpl:ON,sigmoidImpl:LN,simpleAbsImpl:zN,sliceImpl:PN,sparseFillEmptyRowsImpl:BN,sparseReshapeImpl:UN,sparseSegmentReductionImpl:WN,sqrtImpl:VN,stridedSliceImpl:GN,stringNGramsImpl:HN,stringSplitImpl:jN,stringToHashBucketFastImpl:qN,subImpl:KN,tileImpl:XN,topKImpl:YN,transposeImpl:ZN,uniqueImpl:JN}=s;function QN(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function t$(t,e){return 1===e?[t]:QN(t,e)}class e${constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=ZC(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=t$("rc",this.rank),e=jC(this.rank),n=this.getOutOfBoundsCondition(t),r=this.getSetup(t),s=this.getOutput(t);this.userCode=`\n        void main() {\n          ${e} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let e=2;e<this.rank;e++)s=`${t[t.length-1-e]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class n${constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=ZC(this.outputShape.length);let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=e,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(t,e,n="index"){const r=function(t,e){const n=t.length,r=t.map((t=>`${e}[${t}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let t=n-3;t>=0;--t)s[t]=`(${s[t+1]} * ${r[t+1]})`;return s}(t.map(((t,e)=>e)),e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${r[s]}`:`index -= ${t[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):FC(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":MC(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class r${constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=i$(e,n),s=a$(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=s$(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let a;return r===rC.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===rC.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===rC.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===rC.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===rC.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=i$(n,r),i=a$(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=s$(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=X().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function s$(t,e,n,r,s){const i=function(t,e){switch(t){case rC.PACKED_2X2_FLOAT32:return lN(e);case rC.PACKED_2X2_FLOAT16:return uN(e);case rC.UNPACKED_FLOAT32:return iN(e);case rC.UNPACKED_FLOAT16:return aN(e);case rC.PACKED_4X1_UNSIGNED_BYTE:return oN(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let a;if(s){const[e,n]=aC(t[0],t[1]);a=e*n}else{const[e,n]=sC(t[0],t[1]);a=e*n}const o=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}(n,i);return a*o}function i$(t,e){if(t===nC.UPLOAD)return rC.PACKED_2X2_FLOAT32;if(t===nC.RENDER||null==t)return function(t){return X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?rC.PACKED_2X2_FLOAT32:rC.UNPACKED_FLOAT32:t?rC.PACKED_2X2_FLOAT16:rC.UNPACKED_FLOAT16}(e);if(t===nC.DOWNLOAD||t===nC.PIXELS)return rC.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function a$(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class o${constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=ZC(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const l$="return abs(x);",u$="return x;";class h${constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=ZC(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class c${constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=ZC(this.outputShape.length);const e=t.length,n=t$("rc",e),r=jC(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const d$=yh,p$={},f$=X().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class m$ extends l{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!X().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof hN)e=t;else{const n=tC(X().getNumber("WEBGL_VERSION"),t);e=new hN(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const t=tC(X().getNumber("WEBGL_VERSION"));e=new hN(t),this.binaryCache=((n=X().getNumber("WEBGL_VERSION"))in p$||(p$[n]={}),p$[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new r$(this.gpgpu),this.numMBBeforeWarning=null==X().global.screen?1024:X().global.screen.height*X().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new o(this,Oi())}nextDataId(){return m$.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((X().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||X().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:nC.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r,s){if(X().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:nC.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:a,isPacked:o}=e;if(null!=i){let e;e=o?new h$(a,u$):new o$(a,u$);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,h;return l&&(u=Er()),h="complex64"===r?Bu(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=Er()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:a,isPacked:o}=e;if(null!=s){let e;e=o?new h$(r,u$):new o$(r,u$);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(X().getBool("DEBUG")&&!X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===X().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==i&&X().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(e.texture.texture,...iC(r))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);u=Bu(t[0],t[1])}else if(null==h)u=this.getValuesFromTexture(t);else{const t=x(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){const t=this.gpgpu.gl;lC(t,(()=>t.deleteBuffer(h)))}const c=this.convertAndCacheOnCPU(t,u),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(c))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Oi().removeDataId(t,this),this.pendingDeletes--),c}readToGPU(t,e={}){const n=this.texData.get(t),{values:r,shape:s,slice:i,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new h$(s,u$):new o$(s,u$);const r=this.runWebGLProgram(n,[{dataId:t,shape:s,dtype:a}],a),i=this.readToGPU(r,e);return this.disposeIntermediateTensorInfo(r),i}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),h=Oi().makeTensorFromDataId(u.dataId,u.shape,u.dtype),c=this.texData.get(u.dataId);return Object.assign({tensorRef:h},c.texture)}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>Ar(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return ei(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!uC(n)){if(X().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=x(e);if(X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...iC(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=X().getBool("WEBGL_PACK")&&!0===r,a=i?vC(e):e,o=i?new eN(a):new tN(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=b(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),i=b(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);a.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:i[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Er(),endMs:null}}endTimer(t){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Er(),t)}async getQueryTime(t){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,i)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=f$){return X().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&x(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){rr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return d$(t.shape,e)}packedUnaryOp(t,e,n){const r=new h$(t.shape,e),s=this.compileAndRun(r,[t],n);return Oi().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=zN(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(X().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,l$,t.dtype);const e=new o$(t.shape,l$),n=this.compileAndRun(e,[t]);return Oi().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&F(n[0])){const s=n.map((t=>Rr(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Oi().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new c$(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new e$(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[yC(t.shape),...wC(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[yC(e),...wC(e)],i=new n$(s,n),a=[n],o=this.runWebGLProgram(i,[r],t.dtype,a,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t,e){const n=this.texData.get(t),{isPacked:r,shape:s,dtype:i}=n;null!=e&&f(x(s)<=e[0]*e[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const a=vC(s);let o;o=r?new QC(a):new JC(a);const l=[null!=e?e:iC(a)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(o,[{shape:a,dtype:i,dataId:t}],i,l,!0,e).dataId}}runWebGLProgram(t,e,n,r,s=!1,i){const a=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(a.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===eC.DENSE){const e=null!=i?i:iC(t.outputShape);o.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===x(a.shape))return o.values=$(a.dtype,0),a;const l=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&x(e.shape)<=X().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),l.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!IC(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),l.push(e),n=this.texData.get(e.dataId),t.shape=r}return{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:o,isUniform:!1},c=function(t,e,n){let r="";e.concat(n).forEach((e=>{const s=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const i=e.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=qC(t.packedInputs,e.shape,i);let u="",h="",c="";if(1===o.length&&t.packedInputs){const t=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${t[0]>1}_${t[1]>1}`}else if(2!==o.length||t.packedInputs){if(o.length>2&&!t.packedInputs){const t=L(o);c=`${t[0]===i[1]}_${t[t.length-1]===i[1]}`}}else h=`${o[0]>1}_${o[1]>1}`;const d=e.shape.length,p=2===o.length&&y(e.shape,i),f=1===x(e.shape),m=ci(e.shape,n.shape),g=!t.packedInputs&&d===n.shape.length&&y(i,n.texData.texShape),b=t.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${g}_${a?l:""}_${o.length}_${f}_${m}_${p}_${u}_${h}_${c}_${b}_${s}`}else{const t=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${t}_${s}`}}));const s=t.userCode;let i=t.constructor.name;return i+="_"+r+"_"+s+`${X().getNumber("WEBGL_VERSION")}`,i}(t,u,h),d=this.getAndSaveBinary(c,(()=>function(t,e,n,r){const s=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),i=s.map((t=>t.shapeInfo)),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=LC(s,a,e),l=function(t,e){const n=xC(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(lC(t,(()=>t.shaderSource(n,e))),lC(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=cC.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),i=s.length.toString().length+2,a=s.map(((t,e)=>k((e+1).toString(),i)+t));let o=0;for(let t=0;t<a.length;t++)o=Math.max(a[t].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),h=a.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${k(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t.gl,o),u=t.createProgram(l);let h=null;const c=t.getUniformLocation(u,"NAN",!1);1===X().getNumber("WEBGL_VERSION")&&(h=t.getUniformLocation(u,"INFINITY",!1));const d=!1,p={},f={},m={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n];p[r]=t.getUniformLocation(u,r,d),p[`offset${r}`]=t.getUniformLocation(u,`offset${r}`,d),e.enableShapeUniforms&&(f[`${r}Shape`]=t.getUniformLocation(u,`${r}Shape`,d),m[`${r}TexShape`]=t.getUniformLocation(u,`${r}TexShape`,d))}let g,b,x;e.enableShapeUniforms&&(g=t.getUniformLocation(u,"outShape",d),x=t.getUniformLocation(u,"outShapeStrides",d),b=t.getUniformLocation(u,"outTexShape",d));const y=[];return e.customUniforms&&e.customUniforms.forEach(((e,n)=>{y[n]=t.getUniformLocation(u,e.name,d)})),{program:e,fragmentShader:l,source:o,webGLProgram:u,uniformLocations:p,customUniformLocations:y,inShapeInfos:i,outShapeInfo:a,infLoc:h,nanLoc:c,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:x,outTexShapeLocation:b}}(this.gpgpu,t,u,h))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),function(t,e,n,r,s){e.program.enableShapeUniforms||(YC(e.inShapeInfos,n),YC([e.outShapeInfo],[r]));const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):t.setOutputMatrixTexture(i.texture,a[0],a[1]),t.setProgram(e.webGLProgram),1===X().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],i=e.uniformLocations[s],a=e.uniformLocations[`offset${s}`],o=e.inShapesLocations[`${s}Shape`],l=e.inTexShapesLocations[`${s}TexShape`];if(o){const{uniformShape:r}=qC(e.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:t.gl.uniform1iv(o,new Int32Array(r));break;case 2:t.gl.uniform2iv(o,new Int32Array(r));break;case 3:t.gl.uniform3iv(o,new Int32Array(r));break;case 4:t.gl.uniform4iv(o,new Int32Array(r))}}if(l&&t.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(x(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture.texture,i,r)}));const o=e.outShapeLocation;if(o)switch(r.shape.length){case 1:t.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(o,new Int32Array(r.shape))}if(e.outShapeStridesLocation){const n=L(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s&&e.program.customUniforms.forEach(((n,r)=>{const i=e.customUniformLocations[r],a=s[r];if("float"===n.type)t.gl.uniform1fv(i,a);else if("vec2"===n.type)t.gl.uniform2fv(i,a);else if("vec3"===n.type)t.gl.uniform3fv(i,a);else if("vec4"===n.type)t.gl.uniform4fv(i,a);else if("int"===n.type)t.gl.uniform1iv(i,a);else if("ivec2"===n.type)t.gl.uniform2iv(i,a);else if("ivec3"===n.type)t.gl.uniform3iv(i,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);t.gl.uniform4iv(i,a)}})),t.executeProgram()}(this.gpgpu,d,u,h,r),l.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));const m=X().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=Er();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!X().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,s=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,r,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(X().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=zi((()=>{if(!X().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=X().getBool("DEBUG");X().set("DEBUG",!1);const e=this.abs(Gi(1e-8)).dataSync()[0];if(X().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=e;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=Er());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?d(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=N(t);t=e.newShape}let r=x(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=yC(t);let n=2,s=2;return t.length&&([n,s]=wC(t)),r=e*(n/2)*(s/2),v(r).map((t=>2*t))}return v(r)}(n,o),e.texShape=h),null!=s){const t=vC(n);let i,a=h[1],c=h[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([a,c]=aC(h[0],h[1])),i=o?new rN(t,d):new nN(t,d);const p=d?[c,a]:h,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?nC.PIXELS:nC.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,c,s);const g=[[c,a]],b=!0,x=this.runWebGLProgram(i,[f],r,g,b),y=this.texData.get(x.dataId);e.texture=y.texture,e.texShape=y.texShape,e.isPacked=y.isPacked,e.usage=y.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(x.dataId),e.values=null,l&&(this.uploadWaitMs+=Er()-u)}else{const t=this.acquireTexture(h,a,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*A(e)}}m$.nextDataId=0,ds()&&Ui("webgl",(()=>new m$),2);class g${constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=pi(e,n),this.enableShapeUniforms=ZC(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class b${constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=pi(e,n);const s=this.outputShape.length;this.enableShapeUniforms=ZC(s);let i="";if(r)if(0===s||1===x(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${jC(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=t$("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function x$(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const y$={kernelName:de,backendName:"webgl",kernelFunc:x$};function w$(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,i=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(i.dataId),o=x$({inputs:{x:r},backend:n}),l=x$({inputs:{x:s},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const v$={kernelName:Ct,backendName:"webgl",kernelFunc:w$},k$="return (a < 0.) ? b * a : a;",I$="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",S$={kernelName:xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r,a=n.makeTensorInfo([],"float32",$r(i,"float32")),o=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new b$(I$,s.shape,a.shape):new g$(k$,s.shape,a.shape),l=n.runWebGLProgram(o,[s,a],"float32");return n.disposeIntermediateTensorInfo(a),l}},C$="return (a < 0.) ? b * a : a;",N$="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",$$={kernelName:Qe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,i=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new b$(N$,r.shape,s.shape):new g$(C$,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],"float32")}};function T$({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:a}=s,o=i,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const t=o.texData.get(a.dataId),e=n(t.values,l);return o.makeTensorInfo(a.shape,l,e)}let u;return u=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new h$(a.shape,e):new o$(a.shape,t),o.runWebGLProgram(u,[a],l)}}function E$({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,h=o;if(r&&"complex64"===l.dtype){const e=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:r.dataId,dtype:r.dtype,shape:u.shape},a=new g$(t,l.shape,u.shape);return h.runWebGLProgram(a,[s,i],Qr(n.dtype,r.dtype))})),i=w$({inputs:{real:r,imag:s},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(s),i}const c=i||Qr(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=s){const t=h.texData.get(l.dataId).values,e=h.texData.get(u.dataId).values,n="string"===l.dtype?bh(t):t,r="string"===l.dtype?bh(e):e,[i,a]=s(l.shape,u.shape,n,r,c),o=h.makeTensorInfo(a,c);return h.texData.get(o.dataId).values=i,o}let d;return d=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new b$(e,l.shape,u.shape,n):new g$(t,l.shape,u.shape),h.runWebGLProgram(d,[l,u],c)}}function R$(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?N$:C$;if("leakyrelu"===t)return e?I$:k$;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class A${constructor(t,e,n,r=!1,s=!1,i=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ZC(this.outputShape.length);const u=r?t[1]:t[2],h=Math.ceil(u/2),c=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";t[0]<e[0]?x=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(y=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${h}; i++) {\n          int batchA = ${x};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class F${constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=pi(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const D$="return a * b;";function M$(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,i=Qr(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),i=new F$("return areal * breal - aimag * bimag;",r.shape,s.shape),a=new F$("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),h=w$({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),h}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[a,o]=AN(r.shape,s.shape,t.values,e.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=a,l}let a;return a=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new b$(D$,r.shape,s.shape):new g$(D$,r.shape,s.shape),n.runWebGLProgram(a,[r,s],i)}const _$={kernelName:We,backendName:"webgl",kernelFunc:M$};function O$(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,a=n,o=x(s.shape),l=S(i,o),u=x(l);f(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const h=a.texData.get(s.dataId);return!h.isPacked||IC(s.shape,l)||null!==h.texture&&IC(h.shape,l)?(a.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(t,e,n){const r=[yC(t.shape),...wC(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},i=[yC(e),...wC(e)],a=new n$(i,r),o=[r],l=n.runWebGLProgram(a,[s],t.dtype,o,!0);return{dataId:l.dataId,shape:e,dtype:l.dtype}}(s,l,a)}const L$={kernelName:an,backendName:"webgl",kernelFunc:O$};class z${constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${w(t)?t.toPrecision(2):t}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class P${constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),h=n%4;let c=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===e?(a="1.0",c="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",c="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${c}\n        } else if (${2===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${c}\n        } else if (${3===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${c}\n        }\n        setOutput(${l});\n      }\n    `}}function B$(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=vu(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let i=t;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let h,c;h="mean"===n?0===a?new z$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new z$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new P$({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),c=i,i=r.runWebGLProgram(h,[i],e),c.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(c)}return i}class U${constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=jC(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class W${constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=jC(this.rank),s=QN("rc",this.rank),i=new Array(this.rank);for(let t=0;t<e.length;t++)i[e[t]]=s[t];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function V$(t,e,n){const r=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new W$(t.shape,e):new U$(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function G$(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r;return function(t,e,n,r){const s=e,i=t.shape.length,a=C(s,t.shape);let o=a;const l=co(o,i),u=null!=l;let h=t;u&&(h=V$(t,l,r),o=fo(o.length,i)),ho("sum",o,i);const[c,d]=lo(h.shape,o);let p=c;n&&(p=uo(c,a));const f=x(d),m=O$({inputs:{x:h},attrs:{shape:[x(t.shape)/f,f]},backend:r}),g=B$(m,ts(t.dtype),"sum",r),b=O$({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(h),b}(s,i,a,n)}const H$={kernelName:Cn,backendName:"webgl",kernelFunc:G$};function j$(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:i}=r,a=n,o=s.shape.length,l=new Array(o);for(let t=0;t<l.length;t++)l[t]=s.shape[i[t]];let u;if(a.shouldExecuteOnCPU([s])){const t=a.texData.get(s.dataId).values,e=ZN(t,s.shape,s.dtype,i,l);u=a.makeTensorInfo(l,s.dtype),a.texData.get(u.dataId).values=e}else u=V$(s,i,a);return u}const q$={kernelName:jn,backendName:"webgl",kernelFunc:j$};function K$({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=t.shape.length,h=e.shape.length,c=n?t.shape[u-2]:t.shape[u-1],d=r?e.shape[h-1]:e.shape[h-2],p=n?t.shape[u-1]:t.shape[u-2],m=r?e.shape[h-2]:e.shape[h-1],g=t.shape.slice(0,-2),b=e.shape.slice(0,-2),y=x(g),w=x(b),v=pi(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,m]);f(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[y,c,p]:[y,p,c],I=r?[w,m,d]:[w,d,m],S=O$({inputs:{x:t},backend:s,attrs:{shape:k}}),C=O$({inputs:{x:e},backend:s,attrs:{shape:I}}),N=[S,C],$=Math.max(y,w),T=n?S.shape[1]:S.shape[2],E=null!=i,R=null!=a,A="leakyrelu"===l,F=null!=l?R$(l,!0):null;let D;if((1===p||1===m)&&T>1e3&&!1===(E||R||A||null!=F)){let t=S,e=C;n&&(t=j$({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),N.push(t)),r&&(e=j$({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),N.push(e));const i=1===m;let a=t;1!==m&&(a=O$({inputs:{x:t},backend:s,attrs:{shape:[$,T,1]}}),N.push(a));const o=1===m?2:1;let l=e;i&&(l=O$({inputs:{x:e},backend:s,attrs:{shape:[$,1,T]}}),N.push(l));const u=M$({inputs:{a,b:l},backend:s});D=G$({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{const l=Qr(t.dtype,e.dtype),u=new A$(k,I,[$,p,m],n,r,E,F,R,A),h=[S,C];if(null!=i&&h.push(i),R&&h.push(a),A){const t=s.makeTensorInfo([],"float32",$r(o,"float32"));h.push(t),N.push(t)}D=s.runWebGLProgram(u,h,l)}const M=O$({inputs:{x:D},backend:s,attrs:{shape:v}});N.push(D);for(const t of N)s.disposeIntermediateTensorInfo(t);return M}const X$={kernelName:tr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:h,leakyreluAlpha:c}=r;return K$({a:s,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:c,activation:h})}},Y$="return abs(x);",Z$={kernelName:tt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=zN(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let s;return s=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new h$(r.shape,Y$):new o$(r.shape,Y$),n.runWebGLProgram(s,[r],r.dtype)}},J$=T$({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Q$={kernelName:et,backendName:"webgl",kernelFunc:J$},tT=T$({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),eT={kernelName:nt,backendName:"webgl",kernelFunc:tT},nT="return a + b;",rT=E$({opSnippet:nT,packedOpSnippet:nT,supportsComplex:!0,cpuKernelImpl:cN}),sT={kernelName:rt,backendName:"webgl",kernelFunc:rT};class iT{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class aT{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const oT={kernelName:st,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,s=n;if(1===s.length)return x$({inputs:{x:s[0]},backend:r});if(s.length>X().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),n=t({inputs:s.slice(0,e),backend:r}),i=t({inputs:s.slice(e),backend:r});return t({inputs:[n,i],backend:r})}const i=s.map((t=>t.dtype)).reduce(((t,e)=>Qr(t,e))),a=s.map((t=>t.shape)),o=X().getBool("WEBGL_PACK")?new aT(s[0].shape,a):new iT(s[0].shape,a);return r.runWebGLProgram(o,s,i)}},lT={kernelName:it,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=C(i,s.shape);let u=l;const h=co(u,o);let c=s;null!=h&&(c=j$({inputs:{x:s},backend:n,attrs:{perm:h}}),u=fo(u.length,o)),ho("all",u,o);const[d,p]=lo(c.shape,u),f=O$({inputs:{x:c},backend:n,attrs:{shape:[-1,x(p)]}}),m=B$(f,f.dtype,"all",n);let g;return g=O$(a?{inputs:{x:m},backend:n,attrs:{shape:uo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(c),g}},uT={kernelName:at,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=C(i,s.shape);let u=l;const h=co(u,o);let c=s;null!=h&&(c=j$({inputs:{x:s},backend:n,attrs:{perm:h}}),u=fo(u.length,o)),ho("any",u,o);const[d,p]=lo(c.shape,u),f=O$({inputs:{x:c},backend:n,attrs:{shape:[-1,x(p)]}}),m=B$(f,f.dtype,"any",n);let g;return g=O$(a?{inputs:{x:m},backend:n,attrs:{shape:uo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(c),g}};class hT{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class cT{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,f(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=jC(o),u=t$("coords",o);let h,c;if(1===i){c=o+1;const t=jC(c);h=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[o-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[o-2]};`}else c=o,h=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,c),p="."+d[c-1],m=d.map((t=>"int "+t)),g=t$("sourceLocR",c-1).concat("inIdx.r"),b=t$("sourceLocG",c-1).concat("inIdx.g"),x=t$("sourceLocB",c-1).concat("inIdx.b"),y=t$("sourceLocA",c-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function dT(t,e,n,r=null){let s=e.shape[0],i=e.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const a=vu(i),o={windowSize:a,inSize:i,batchSize:s,outSize:Math.ceil(i/a)},l=new hT(o,n,null==r),u=[e];null!=r&&u.push(r);const h=t.runWebGLProgram(l,u,"int32");if(1===h.shape[1])return h;const c=dT(t,e,n,h);return t.disposeIntermediateTensorInfo(h),c}function pT(t,e,n,r=null){const s=null!=r?r.shape:e.shape,i=vu(s[s.length-1]),a=new cT(s,i,n,null==r),o=null==r?[e]:[e,r],l=t.runWebGLProgram(a,o,"int32");if(l.shape.length===e.shape.length){const r=pT(t,e,n,l);return t.disposeIntermediateTensorInfo(l),r}return l}function fT(t,e,n,r){const s=[n];if(ho("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!X().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],i=t.texData.get(e.dataId);let a=e;null!==i&&i.isPacked&&(a=t.unpackTensor(e),n.push(a));const[o,l]=lo(a.shape,s),u=x(l),h=O$({inputs:{x:a},backend:t,attrs:{shape:[-1,u]}});n.push(h);const c=dT(t,h,r);n.push(c);const d=O$({inputs:{x:c},backend:t,attrs:{shape:o}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),d}return pT(t,e,r)}const mT={kernelName:ot,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let a=C(i,s.shape);const o=co(a,s.shape.length);let l=s;const u=[];null!=o&&(l=j$({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=fo(a.length,l.shape.length)),ho("argMax",[a[0]],l.shape.length);const h=fT(n,l,a[0],"max");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},gT={kernelName:lt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let a=C(i,s.shape);const o=co(a,s.shape.length);let l=s;const u=[];null!=o&&(l=j$({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=fo(a.length,l.shape.length)),ho("argMin",[a[0]],l.shape.length);const h=fT(n,l,a[0],"min");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},bT=T$({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),xT={kernelName:ut,backendName:"webgl",kernelFunc:bT},yT=T$({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),wT={kernelName:ht,backendName:"webgl",kernelFunc:yT},vT=T$({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),kT={kernelName:ct,backendName:"webgl",kernelFunc:vT},IT=E$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ST={kernelName:pt,backendName:"webgl",kernelFunc:IT},CT=T$({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),NT={kernelName:dt,backendName:"webgl",kernelFunc:CT};class $T{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterHeight,c=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${c};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${c} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(x="avgValue / count");const y=4*Math.floor(i/4),w=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class TT{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,c=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const x="avg"===e;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${c}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(i/4),k=i%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${c};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${c}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${c}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${c}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const ET={kernelName:ft,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;EC(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;f(la(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Ji(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))return x$({inputs:{x:s},backend:n});const h=new $T(u,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}},RT={kernelName:gt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,h=Qi(s.shape,i,a,[1,1,1],o,l,u),c=new TT(h,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}};class AT{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,h=l-1-t.padInfo.left,c=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${h});\n      const float avgMultiplier = float(${c});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class FT{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=h-1-t.padInfo.front,f=c-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const DT={kernelName:bt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,c=Qi(a.shape,o,l,[1,1,1],u,h),d=new FT(c);return n.runWebGLProgram(d,[s],a.dtype)}},MT={kernelName:mt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i;EC([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,h=Ji(a.shape,o,l,1,u),c=new AT(h);return n.runWebGLProgram(c,[s],a.dtype)}},_T={kernelName:xt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;return K$({a:s,b:i,transposeA:a,transposeB:o,backend:n})}};class OT{constructor(t,e,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],pi(t,e),pi(t,n);let a="0.0";null!=r&&(pi(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&(pi(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class LT{constructor(t,e,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],pi(t,e),pi(t,n);let a="vec4(0.0)";null!=r&&(pi(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(pi(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const zT={kernelName:oe,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:i,offset:a,scale:o}=t;f(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==a||s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,i];let h=null;null!=a&&(h=a.shape,u.push(a));let c=null;null!=o&&(c=o.shape,u.push(o));const d=X().getBool("WEBGL_PACK_NORMALIZATION")?new LT(r.shape,s.shape,i.shape,h,c,l):new OT(r.shape,s.shape,i.shape,h,c,l);return e.runWebGLProgram(d,u,u[0].dtype)}};class PT{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=jC(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(t){if(1===t)return"sourceLoc";if(t<=6)return BT.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${BT[e]} = start[${e}] + coords.${BT[e]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const BT=["x","y","z","w","u","v"];class UT{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=jC(this.rank),n=t$("coords",this.rank),r=t$("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}function WT(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:a}=r,[o,l]=Ri(s,i,a);if(gi(s,o,l),0===x(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const t=n.texData.get(s.dataId),e=PN(t.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,e)}const{isPacked:u}=n.texData.get(s.dataId),h=Ti(s.shape,o,l);if(u||!h){const t=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new UT(l):new PT(l),e=[o];return n.runWebGLProgram(t,[s],s.dtype,e)}return n.uploadToGPU(s.dataId),function(t,e,n,r){const s=r.texData.get(t.dataId),i=r.makeTensorInfo(n,t.dtype),a=r.texData.get(i.dataId);Object.assign(a,s),a.refCount=1,a.shape=n,a.dtype=t.dtype;let o=Ei(e,L(t.shape));s.slice&&(o+=s.slice.flatOffset),a.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||t.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),i}(s,o,l,n)}const VT={kernelName:xn,backendName:"webgl",kernelFunc:WT},GT={kernelName:yt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:a}=r;f(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((t,e)=>t*e)),l=Iu(s.shape,i,o),u=Su(l.length,i.length),h=Cu(s.shape,i,o),c=Nu(a,i.length),d=$u(h,a,i.length),p=[],m=O$({inputs:{x:s},backend:n,attrs:{shape:l}}),g=j$({inputs:{x:m},backend:n,attrs:{perm:u}}),b=O$({inputs:{x:g},backend:n,attrs:{shape:h}}),x=WT({inputs:{x:b},backend:n,attrs:{begin:c,size:d}});return p.push(m),p.push(g),p.push(b),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},HT={kernelName:wt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a}=r,o=n.readSync(s.dataId),l=n.readSync(i.dataId),u=dN(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}},jT={kernelName:vt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,i=n.readSync(r.dataId),a=n.readSync(s.dataId),o=pi(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},qT=E$({opSnippet:"return float(a != b);",cpuKernelImpl:DN,dtype:"bool"}),KT={kernelName:Ge,backendName:"webgl",kernelFunc:qT};function XT(t){const{inputs:e,backend:n}=t,{input:r}=e;return x$({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const YT={kernelName:nn,backendName:"webgl",kernelFunc:XT},ZT={kernelName:kt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:i}=n,{dtype:a}=s;if("complex64"===a){if("complex64"===i.dtype)return x$({inputs:{x:i},backend:r});const e=wo(i.shape),n=t({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=w$({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const e=XT({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(e),n}if(!E(i.dtype,a)){const t=x$({inputs:{x:i},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a)return function(t,e){const n=new o$(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===a){const t=r.makeTensorInfo([],"bool",$("bool",1)),e=qT({inputs:{a:i,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}},JT="return ceil(x);",QT=T$({opSnippet:JT,packedOpSnippet:JT,cpuKernelImpl:fN}),tE={kernelName:It,backendName:"webgl",kernelFunc:QT};class eE{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class nE{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const rE={kernelName:St,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:i,clipValueMax:a}=r;let o;o=X().getBool("WEBGL_PACK_CLIP")?new nE(s.shape):new eE(s.shape);const l=[[i],[a]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class sE{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function iE(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const aE={kernelName:Nt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.texData.get(r.dataId),i=new sE(r.shape),a=[iE(r,s.complexTensorInfos.real),iE(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}};class oE{constructor(t){this.outputShape=[],this.outputShape=yu(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class lE{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=yu(t,e);const n=this.outputShape,r=n.length,s=jC(r),i=t$("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let n=1;n<o.length;n++)o[n]=o[n-1]+t[n][e];const l=a[e],u=a.slice(-2),h=a.join();let c=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${u.join()}));\n        }`;for(let t=1;t<o.length;t++){const e=o[t-1];c+=`\n        if (${l} < ${o[t]}  && ${l} >= ${o[t-1]}) {\n          return getChannel(\n            getT${t}(${uE(a,l,e)}),\n            vec2(${uE(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];c+=`\n        return getChannel(\n          getT${d}(${uE(a,l,p)}),\n          vec2(${uE(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${c}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function uE(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function hE(t){const{inputs:e,backend:n}=t,{input:r}=e;return x$({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const cE={kernelName:fe,backendName:"webgl",kernelFunc:hE};function dE(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>XT({inputs:{input:t},backend:n}))),s=t.map((t=>hE({inputs:{input:t},backend:n}))),i=dE(r,e,n),a=dE(s,e,n),o=w$({inputs:{real:i,imag:a},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}let s=n.shouldExecuteOnCPU(t);if("string"===r&&(s=!0),s){const s=t.map((t=>{const r=x(t.shape.slice(e));return O$({inputs:{x:t},backend:n,attrs:{shape:[-1,r]}})})),i=s.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),a=yu(s.map((t=>t.shape)),1),o=1===s[0].shape[0],l=mN(i,a,r,o),u=yu(t.map((t=>t.shape)),e),h=n.makeTensorInfo(u,r,l);return s.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}if(t.length>X().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),s=dE(t.slice(0,r),e,n),i=dE(t.slice(r),e,n),a=dE([s,i],e,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}if(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new lE(t.map((t=>t.shape)),e);return n.runWebGLProgram(s,t,r)}const{tensors2D:i,outShape:a}=function(t,e,n){const r=yu(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>O$({inputs:{x:t},attrs:{shape:[-1,x(t.shape.slice(e))]},backend:n}))),outShape:r}}(t,e,n),o=new oE(i.map((t=>t.shape))),l=n.runWebGLProgram(o,i,r);i.forEach((t=>n.disposeIntermediateTensorInfo(t)));const u=O$({inputs:{x:l},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(l),u}function pE(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=C(s,e[0].shape)[0],a=yu(e.map((t=>t.shape)),i);if(0===x(a))return n.makeTensorInfo(a,e[0].dtype,[]);const o=e.filter((t=>x(t.shape)>0));return 1===o.length?x$({inputs:{x:o[0]},backend:n}):(xu(o.map((t=>t.shape)),i),dE(o,i,n))}const fE={kernelName:$t,backendName:"webgl",kernelFunc:pE};class mE{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,a=t.padInfo.left,o=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,h=t.dilationWidth,c=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,b=m?2:3,x=m?3:1;let y="",w="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class gE{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,h=t.filterDepth,c=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bE{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=ZC(this.outputShape.length);const{dataFormat:n}=e,r=AC(),s="channelsLast"===n,i=s?0:1,a=s?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${t[1]} && pos < ${t[0]}) {`;let l="";for(let t=0;t<=1;t++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.y + ${e};\n          pos = rc.x + ${t};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*t+e}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*t+e}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function xE({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=t.shape,u=r.texData.get(t.dataId),h=n.inChannels,c=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let m;const g=[];if((1!==c&&1!==d||!(h>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&y(u.shape.slice(-3),l.slice(-3))){const h=l[0]*l[1]*(l[2]+1),c={dataId:t.dataId,shape:[1,h,n.inChannels],dtype:t.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,f(IC(u.shape,c.shape),(()=>`packed reshape ${u.shape} to ${c.shape} isn't free`));const p=O$({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(p);const b=K$({a:c,b:p,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),x=r.texData.get(b.dataId);f(x.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,x.shape=n.outShape,m=x$({inputs:{x:b},backend:r}),m.shape=n.outShape,g.push(b)}else{const u=O$({inputs:{x:t},backend:r,attrs:{shape:[1,p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),h=O$({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),c=K$({a:u,b:h,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a});m=O$({inputs:{x:c},backend:r,attrs:{shape:n.outShape}}),g.push(u),g.push(h),g.push(c)}for(const t of g)r.disposeIntermediateTensorInfo(t);return m}function yE({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:h,outWidth:c,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*h,g=d*c,b=[m,g],y=[],w=O$({inputs:{x:t},backend:r,attrs:{shape:t.shape.slice(1)}}),v=O$({inputs:{x:e},backend:r,attrs:{shape:[1,m,x(e.shape)/m]}});y.push(w),y.push(v);const k=new bE(b,n),I=[w.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(k,[w],"float32",I),C=O$({inputs:{x:S},backend:r,attrs:{shape:[1,b[0],b[1]]}});y.push(S),y.push(C);const N=null!=s,$=null!=i,T="leakyrelu"===o,E=o?R$(o,!0):null,R=new A$(C.shape,v.shape,[1,g,n.outChannels],!0,!1,N,E,$,T),A=[C,v];if(s&&A.push(s),$&&A.push(i),T){const t=r.makeTensorInfo([],"float32",$r(a,"float32"));A.push(t),y.push(t)}const F=r.runWebGLProgram(R,A,"float32"),D=O$({inputs:{x:F},backend:r,attrs:{shape:f?[1,d,c,n.outChannels]:[1,n.outChannels,d,c]}});y.push(F);for(const t of y)r.disposeIntermediateTensorInfo(t);return D}const wE={kernelName:Tt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:h}=r,c=ua(l),d=ta(s.shape,i.shape,a,u,o,h,!1,c);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(X().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])p=yE({x:s,filter:i,convInfo:d,backend:n});else{const t=new mE(d);p=n.runWebGLProgram(t,[s,i],"float32")}else p=xE({x:s,filter:i,convInfo:d,backend:n});const f=O$({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class vE{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kE{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i="channelsLast"===t.dataFormat,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=i?1:2,u=i?2:3,h=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${h}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IE{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SE{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const CE={kernelName:Et,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:h}=r,c=ua(l),d=ta(s.shape,h,a,1,o,u,!1,c),p=new vE(d);return n.runWebGLProgram(p,[s,i],"float32")}},NE={kernelName:Rt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:h}=r,c=ua(u),d=ta(a,i.shape,o,1,l,h,!1,c),p=new kE(d);return n.runWebGLProgram(p,[s,i],"float32")}},$E={kernelName:At,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=ea(s.shape,i.shape,a,l,o),h=new gE(u);return n.runWebGLProgram(h,[s,i],"float32")}},TE={kernelName:Ft,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r,u=ea(s.shape,l,a,1,o),h=new IE(u);return n.runWebGLProgram(h,[s,i],"float32")}},EE={kernelName:Dt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:a,strides:o,inputShape:l}=r,u=ea(l,i.shape,o,1,a),h=new SE(u);return n.runWebGLProgram(h,[s,i],"float32")}},RE=T$({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),AE={kernelName:Mt,backendName:"webgl",kernelFunc:RE},FE=T$({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),DE={kernelName:_t,backendName:"webgl",kernelFunc:FE};class ME{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=t,[u]=e,[h,c]=n;this.outputShape=[u,h,c,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,b]=h>1?[""+(a-1)/(h-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,w]=c>1?[""+(o-1)/(c-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const _E={kernelName:Lt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,h=new ME(s.shape,i.shape,o,l,u);return n.runWebGLProgram(h,[s,i,a],"float32")}};class OE{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${LE(r,"coords")})`,i=t[t.length-1];let a="",o="";e?(a=n?"end != "+(i-1):"end != 0",o=n?"end + 1":"end - 1"):(a=n?`end + pow2 < ${i}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${jC(r)} coords = getOutputCoords();\n        int end = ${zE(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${a}) {\n          int idx = ${o};\n          ${zE(r,"coords")} = idx;\n          val += getX(${LE(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function LE(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function zE(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}const PE={kernelName:Ot,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r,l=s.shape.length,u=co([i],l);let h=s;null!=u&&(h=j$({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=fo(1,l)[0];if(c!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${i}`);const d=h.shape[c];let p=x$({inputs:{x:h},backend:n});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){const e=new OE(h.shape,!1,o),r=[[t]],s=p;p=n.runWebGLProgram(e,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(a){const t=new OE(h.shape,a,o),e=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=u){const t=j$({inputs:{x:p},backend:n,attrs:{perm:po(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),t}return p}},BE={kernelName:zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:i}=e,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const t=n.readSync(s.dataId),e=n.readSync(i.dataId),r=dN(t,e,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,r)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(i),r=pN(t,e,a,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class UE{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const WE={kernelName:Pt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:a}=r,o=s.shape[0],l=("NHWC"===a?s.shape[1]:s.shape[2])*i,u=("NHWC"===a?s.shape[2]:s.shape[3])*i,h=("NHWC"===a?s.shape[3]:s.shape[1])/(i*i),c=new UE("NHWC"===a?[o,l,u,h]:[o,h,l,u],i,a);return n.runWebGLProgram(c,[s],s.dtype)}};class VE{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ZC(this.outputShape.length);const i=t.filterHeight,a=t.filterWidth,o=t.outChannels/t.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${u}\n        setOutput(result);\n      }\n    `}}class GE{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ZC(this.outputShape.length);const i=t.outChannels/t.inChannels,a=t.padInfo.left,o=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,h=t.filterWidth,c=h;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let t=0;t<h;t++)p+=`\n          vec4 xTexelC${2*t};\n          int xTexelC${2*t}Ready;\n          vec4 xTexelC${2*t+1};\n          int xTexelC${2*t+1}Ready;\n          vec4 xC${t};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let t=0;t<h;t++)p+=`\n          xTexelC${2*t} = vec4(0.0);\n          xTexelC${2*t}Ready = 0;\n          xTexelC${2*t+1} = vec4(0.0);\n          xTexelC${2*t+1}Ready = 0;\n          xC${t} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let t=0;t<(c+1)/2;t++){const e=2*t;if(p+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<h&&(a%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<h)){const t=a%2==0?d(l):l;l%2==0&&a%2==1||l%2!=0&&a%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,l>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                      xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${e}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                  `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<h&&(a%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<h&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<h&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<h&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<h&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const HE={kernelName:Bt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let h=l;null==h&&(h=[1,1]),f(la(a,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`));const c=ta(s.shape,i.shape,a,h,o,u,!0);let d;d=X().getBool("WEBGL_PACK_DEPTHWISECONV")&&c.strideWidth<=2&&c.outChannels/c.inChannels==1?new GE(c):new VE(c);const p=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];return n.runWebGLProgram(d,[s,i],"float32",p)}};class jE{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qE{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,a=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const KE={kernelName:Ut,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:h}=r,c=ta(s.shape,h,a,o,l,u,!0),d=new jE(c);return n.runWebGLProgram(d,[s,i],"float32")}},XE={kernelName:Wt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:h}=r,c=ta(h,i.shape,a,o,l,u,!0),d=new qE(c);return n.runWebGLProgram(d,[s,i],"float32")}};class YE{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const ZE={kernelName:Vt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],i=x(r.shape),a=O$({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new YE(i),l=n.runWebGLProgram(o,[a],a.dtype),u=O$({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}};class JE{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=t,{top:h,left:c}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${h}, ${c});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const QE={kernelName:Gt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=Zi(s.shape,i.shape,a,o,"NHWC",l);let h;const c=new JE(u);h=n.runWebGLProgram(c,[s,i],"float32");const d=O$({inputs:{x:h},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(h),d}},tR={kernelName:Kt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,i=e,{allDims:a,summedDims:o,idDims:l}=Xu(s,i.length);Zu(a.length,l,i);const{path:u,steps:h}=Ju(o,l),c=h.length;let d=null,p=a.length;const f=[];for(let t=0;t<c;++t){for(const e of h[t]){const{permutationIndices:t,expandDims:r}=Yu(p,l[e]);let s;Qu(t)?s=i[e]:(s=j$({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(s));const a=s.shape.slice();for(let t=0;t<r.length;++t)a.splice(r[t],0,1);y(s.shape,a)||(s=O$({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=M$({inputs:{a:s,b:d},backend:n}),f.push(d))}t<c-1&&(u[t]>=0&&(d=G$({inputs:{x:d},backend:n,attrs:{axis:u[t]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const t of f)t!==d&&n.disposeIntermediateTensorInfo(t);return d}},eR=T$({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),nR={kernelName:Xt,backendName:"webgl",kernelFunc:eR},rR={kernelName:Yt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:s}=e,i=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new b$("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new g$("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},sR=E$({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:gN}),iR={kernelName:Jt,backendName:"webgl",kernelFunc:sR},aR=T$({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Mu};\n  float a1 = ${_u};\n  float a2 = ${Ou};\n  float a3 = ${Lu};\n  float a4 = ${zu};\n  float a5 = ${Pu};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),oR={kernelName:Zt,backendName:"webgl",kernelFunc:aR},lR=T$({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:bN,dtype:"float32"}),uR={kernelName:Qt,backendName:"webgl",kernelFunc:lR};function hR(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(f(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+s+1),o.splice(l,0,1),O$({inputs:{x:i},backend:r,attrs:{shape:o}})}const cR={kernelName:te,backendName:"webgl",kernelFunc:hR},dR="return exp(x) - 1.0;",pR=T$({opSnippet:dR,packedOpSnippet:dR,cpuKernelImpl:xN}),fR={kernelName:ee,backendName:"webgl",kernelFunc:pR};class mR{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let a;if("real"===t)a="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function gR(t,e,n){const r=n.texData.get(t.dataId),s=x(t.shape),i=t.shape[t.shape.length-1],a=O$({inputs:{x:t},backend:n,attrs:{shape:[s/i,i]}}),o=a.shape,l=new mR("real",o,e),u=new mR("imag",o,e),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],c=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(u,h,"float32"),p=w$({inputs:{real:c,imag:d},backend:n});n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d);const f=O$({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const bR={kernelName:ne,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return gR(r,!1,n)}};class xR{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function yR(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||M(s),"string"===i){const t=T(i,x(r));return t.fill(s),e.makeTensorInfo(r,i,t)}{const t=new xR(r,s),n=[[s]];return e.runWebGLProgram(t,[],i,n)}}const wR={kernelName:re,backendName:"webgl",kernelFunc:yR};class vR{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const kR={kernelName:se,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new vR(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},IR="return floor(x);",SR=T$({opSnippet:IR,packedOpSnippet:IR,cpuKernelImpl:yN}),CR={kernelName:ie,backendName:"webgl",kernelFunc:SR},NR=E$({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),$R={kernelName:ae,backendName:"webgl",kernelFunc:NR};class TR{constructor(t){this.variableNames=["A"];const e=AC(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class ER{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=AC(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const RR={kernelName:Jn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:i}=r,a="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[u,l],c=[u,l,i];(o||a)&&(null==AR&&(AR=document.createElement("canvas").getContext("2d")),AR.canvas.width=l,AR.canvas.height=u,AR.drawImage(s,0,0,l,u),s=AR.canvas);const d=n.makeTensorInfo(h,"int32");n.texData.get(d.dataId).usage=nC.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=X().getBool("WEBGL_PACK")?new ER(c):new TR(c),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let AR;const FR={kernelName:er,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:h,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=ua(h),g=ta(s.shape,i.shape,l,c,u,d,!1,m);let b;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(X().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])b=yE({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const t=null!=a,e=null!=o,r="leakyrelu"===p,l=p?R$(p,!1):null,u=new mE(g,t,l,e,r),h=[s,i];if(a&&h.push(a),o&&h.push(o),r){const t=n.makeTensorInfo([],"float32",$r(f,"float32"));h.push(t),x.push(t)}b=n.runWebGLProgram(u,h,"float32")}else b=xE({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const y=O$({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return x.push(b),x.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},DR={kernelName:nr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:h,dimRoundingMode:c,activation:d,leakyreluAlpha:p}=r,m=[];let g=h;null==g&&(g=[1,1]),f(la(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const b=ta(s.shape,i.shape,l,g,u,c,!0),x=X().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,y=d?R$(d,x):null,w=[s,i],v=null!=a,k=null!=o,I="leakyrelu"===d;if(v&&w.push(a),k&&w.push(o),I){const t=n.makeTensorInfo([],"float32",$r(p,"float32"));w.push(t),m.push(t)}let S;S=x?new GE(b,v,y,k,I):new VE(b,v,y,k,I);const C=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],N=n.runWebGLProgram(S,w,"float32",C);return m.forEach((t=>n.disposeIntermediateTensorInfo(t))),N}};class MR{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=jC(e.length),s=jC(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${i};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const _R={kernelName:ue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=s.shape,a=i[i.length-1],o=x(r.shape),[l,u,h,c]=Tu(r,s),d=O$({inputs:{x:s},backend:n,attrs:{shape:[u,a]}}),p=O$({inputs:{x:r},backend:n,attrs:{shape:[x(r.shape)/h,h]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const t=n.readSync(s.dataId),e=n.bufferSync(r),i=wN(t,e,r.dtype,u,a,h,c,r.shape,o);return n.makeTensorInfo(l,r.dtype,i.values)}const f=new MR(a,c,[u,h]),m=n.runWebGLProgram(f,[p,d],p.dtype),g=O$({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class OR{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=jC(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let e=0;e<t.length;e++)2===e?r.push("index"):r.push(`${n[e]}`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function LR(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:a,batchDims:o}=r,l=C(a,s.shape)[0];if(X().get("DEBUG")){const t=n.readSync(i.dataId),e=s.shape[l];for(let n=0;n<t.length;++n){const r=t[n];f(r<=e-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${e-1}]`))}}const u=gh(s,i,l,o),h=x(i.shape),c=[],d=O$({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=O$({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,h/u.batchSize]}});c.push(d),c.push(p);const m=[u.batchSize,u.outerSize,h/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const t=n.bufferSync(p),e=n.bufferSync(d),r=vN(e,t,m);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const g=new OR(d.shape,m),b=n.runWebGLProgram(g,[d,p],d.dtype);c.push(b);const y=O$({inputs:{x:b},backend:n,attrs:{shape:u.outputShape}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}const zR={kernelName:le,backendName:"webgl",kernelFunc:LR},PR=E$({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:kN,dtype:"bool"}),BR={kernelName:he,backendName:"webgl",kernelFunc:PR},UR=E$({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:IN}),WR={kernelName:ce,backendName:"webgl",kernelFunc:UR},VR={kernelName:pe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return gR(r,!0,n)}},GR=T$({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),HR={kernelName:me,backendName:"webgl",kernelFunc:GR},jR=T$({opSnippet:"return float(isinf(x));",dtype:"bool"}),qR={kernelName:ge,backendName:"webgl",kernelFunc:jR},KR=T$({opSnippet:"return float(isnan(x));",dtype:"bool"}),XR={kernelName:be,backendName:"webgl",kernelFunc:KR},YR=E$({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:SN,dtype:"bool"}),ZR={kernelName:ye,backendName:"webgl",kernelFunc:YR},JR=E$({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:CN,dtype:"bool"}),QR={kernelName:we,backendName:"webgl",kernelFunc:JR},tA={kernelName:ve,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:i}=n,a=NN(r,s,i);return e.makeTensorInfo([a.length],"float32",a)}},eA=T$({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:$N}),nA={kernelName:ke,backendName:"webgl",kernelFunc:eA},rA=T$({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),sA={kernelName:Ie,backendName:"webgl",kernelFunc:rA},iA=E$({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),aA={kernelName:Se,backendName:"webgl",kernelFunc:iA},oA=T$({opSnippet:"return float(!(x >= 1.0));"}),lA={kernelName:Ce,backendName:"webgl",kernelFunc:oA},uA=E$({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),hA={kernelName:Ne,backendName:"webgl",kernelFunc:uA};class cA{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class dA{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const pA={kernelName:$e,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=r,u=X().getBool("WEBGL_PACK_NORMALIZATION")?new dA(s.shape,i,a,o,l):new cA(s.shape,i,a,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class fA{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const mA={kernelName:Te,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:h}=r,c=new fA(s.shape,o,l,u,h);return n.runWebGLProgram(c,[s,i,a],s.dtype)}};function gA(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:a}=r,o=s.shape.length,l=C(i,s.shape);let u=l;const h=co(u,o),c=null!=h,d=n.shouldExecuteOnCPU([s]);let p=s;if(c){if(d){const t=n.texData.get(p.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=s.shape[h[t]];const r=ZN(t,s.shape,s.dtype,h,e);p=n.makeTensorInfo(e,s.dtype),n.texData.get(p.dataId).values=r}else p=V$(s,h,n);u=fo(u.length,o)}ho("max",u,o);const[f,m]=lo(p.shape,u);let g,b=f;if(a&&(b=uo(f,l)),d){const t=n.texData.get(p.dataId).values,e=TN(t,x(m),b,s.dtype);g=n.makeTensorInfo(b,s.dtype),n.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const s=x(e),i=O$({inputs:{x:t},attrs:{shape:[x(t.shape)/s,s]},backend:r}),a=B$(i,t.dtype,"max",r),o=O$({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(p,m,b,n);return c&&n.disposeIntermediateTensorInfo(p),g}const bA={kernelName:Ee,backendName:"webgl",kernelFunc:gA},xA=E$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:EN}),yA={kernelName:Re,backendName:"webgl",kernelFunc:xA},wA={kernelName:Ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;EC(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r;f(la(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=Ji(s.shape,i,a,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y(u.inShape,u.outShape))return x$({inputs:{x:s},backend:n});const h=new $T(u,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}},vA={kernelName:De,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,h=Qi(s.shape,i,a,[1,1,1],o,u,l),c=new TT(h,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}};class kA{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=s-1-t.padInfo.top,o=i-1-t.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IA{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,h=o-1-t.padInfo.front,c=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${c}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const SA={kernelName:Me,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:h}=r,c=Qi(a.shape,o,l,[1,1,1],u,h),d=new TT(c,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new IA(c),m=n.runWebGLProgram(f,[s,p],a.dtype);return n.disposeIntermediateTensorInfo(p),m}},CA={kernelName:Fe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:a}=e,o=i;EC([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:h,dimRoundingMode:c}=r,d=Ji(o.shape,l,u,1,h,c),p=new $T(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new kA(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},NA={kernelName:_e,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;f(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];f(la(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const h=Ji(r.shape,s,i,u,a),[c,d]=function(t,e,n,r){let s=new $T(n,"max",!1);const i=r.runWebGLProgram(s,[t],"float32");return s=new $T(n,"max",!0,!0,e),[i,r.runWebGLProgram(s,[t],"float32")]}(r,o,h,l);return[c,d]}},$A={kernelName:Oe,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:i}=e,a=n,o=r.shape.length,l=C(i,r.shape);let u=l;const h=co(u,o),c=null!=h,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(c){if(d){const t=a.texData.get(f.dataId).values,e=new Array(o);for(let t=0;t<e.length;t++)e[t]=r.shape[h[t]];const n=ZN(t,r.shape,r.dtype,h,e);f=a.makeTensorInfo(e,r.dtype),a.texData.get(f.dataId).values=n}else f=V$(r,h,a);p.push(f),u=fo(u.length,o)}ho("sum",u,o);const[m,g]=lo(f.shape,u);let b=m;s&&(b=uo(m,l));const y=function(t,e,n,r){const s=x(e),i=O$({inputs:{x:t},attrs:{shape:[x(t.shape)/s,s]},backend:r}),a=B$(i,"float32","mean",r),o=O$({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(f,g,b,a);for(const t of p)a.disposeIntermediateTensorInfo(t);return y}},TA={kernelName:Le,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=C(i,s.shape);let u=l;const h=co(u,o);let c=s;null!=h&&(c=j$({inputs:{x:s},backend:n,attrs:{perm:h}}),u=fo(u.length,s.shape.length)),ho("min",u,o);const[d,p]=lo(c.shape,u),f=O$({inputs:{x:c},backend:n,attrs:{shape:[-1,x(p)]}}),m=B$(f,f.dtype,"min",n);let g;return g=O$(a?{inputs:{x:m},backend:n,attrs:{shape:uo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(c),g}},EA=E$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:RN}),RA={kernelName:ze,backendName:"webgl",kernelFunc:EA};class AA{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=jC(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class FA{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=jC(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=t$("rc",r),l=t$("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,c="reflect"===n?0:1;let d="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${c};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${c};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${c}) +\n                gte * ((end - 1) * 2 - source + ${c});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${h});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${h});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const DA={kernelName:Pe,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:i}=n,a=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FA(r.shape,s,i):new AA(r.shape,s,i);return e.runWebGLProgram(a,[r],r.dtype)}},MA=E$({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),_A={kernelName:Be,backendName:"webgl",kernelFunc:MA};class OA{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const LA=E$({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),zA={kernelName:qt,backendName:"webgl",kernelFunc:LA},PA="return a - b;",BA=E$({opSnippet:PA,packedOpSnippet:PA,supportsComplex:!0,cpuKernelImpl:KN}),UA={kernelName:Bn,backendName:"webgl",kernelFunc:BA};function WA(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,a=C([i],s.shape),o=gA({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=uo(o.shape,a),u=O$({inputs:{x:o},backend:n,attrs:{shape:l}}),h=BA({inputs:{a:s,b:u},backend:n}),c=lR({inputs:{x:h},backend:n}),d=G$({inputs:{x:c},backend:n,attrs:{axis:a,keepDims:!1}}),p=O$({inputs:{x:d},backend:n,attrs:{shape:l}}),f=LA({inputs:{a:c,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const VA={kernelName:Tn,backendName:"webgl",kernelFunc:WA},GA={kernelName:Ue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:a,normalized:o}=r,l=o?s:WA({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],h=l.shape[1],c=new OA(u,h,i),d=[[a]],p=n.runWebGLProgram(c,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},HA={kernelName:Ve,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,s]=FN(t.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,e)}let s;return s=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new h$(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new o$(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},jA=Rl,qA={kernelName:He,backendName:"webgl",kernelFunc:function(t){rr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:c}=jA(u,h,a,o,l);return n.makeTensorInfo([c.length],"int32",new Int32Array(c))}},KA=Al,XA={kernelName:je,backendName:"webgl",kernelFunc:function(t){rr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,h=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=KA(h,c,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},YA=Fl,ZA={kernelName:qe,backendName:"webgl",kernelFunc:function(t){rr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,h=n.readSync(s.dataId),c=n.readSync(i.dataId),d=a,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=YA(h,c,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class JA{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const QA={kernelName:Xe,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:i,onValue:a,offValue:o}=r,l=x(s.shape),u=new JA(l,i,a,o),h=O$({inputs:{x:s},backend:n,attrs:{shape:[l]}}),c=n.runWebGLProgram(u,[h],s.dtype);n.disposeIntermediateTensorInfo(h);const d=O$({inputs:{x:c},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(c),d}};function tF(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=XT({inputs:{input:r},backend:n}),e=tF({inputs:{x:t},backend:n}),s=hE({inputs:{input:r},backend:n}),i=tF({inputs:{x:s},backend:n}),a=w$({inputs:{real:e,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return yR({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const eF={kernelName:Yn,backendName:"webgl",kernelFunc:tF},nF={kernelName:Ke,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=XT({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),i=hE({inputs:{input:s},backend:r}),a=tF({inputs:{x:i},backend:r}),o=w$({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return yR({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},rF={kernelName:Ye,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return hR({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,a=e[0].dtype;e.forEach((t=>{m(i,t.shape,"All tensors passed to stack must have matching shapes"),f(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=pE({inputs:e.map((t=>{const e=hR({inputs:{input:t},backend:n,attrs:{dim:s}});return o.push(e),e})),backend:n,attrs:{axis:s}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}};class sF{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=jC(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class iF{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=jC(r),i=e.map((t=>t[0])).join(","),a=e.map(((e,n)=>e[0]+t[n])).join(","),o=t$("rc",r),l=t$("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${l.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===r?2:4;t<e;t++)p+=`\n        ${c[t]}\n        if (${d}) {\n          result[${t}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${h});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const aF=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:a}=r;if(0===x(s.shape)){const t=i.map(((t,e)=>t[0]+s.shape[e]+t[1]));return yR({backend:n,attrs:{shape:t,value:a,dtype:s.dtype}})}const o=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iF(s.shape,i,a):new sF(s.shape,i,a),l=[[a]];return n.runWebGLProgram(o,[s],s.dtype,l)},oF={kernelName:Ze,backendName:"webgl",kernelFunc:aF},lF=E$({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),uF={kernelName:Je,backendName:"webgl",kernelFunc:lF},hF={kernelName:tn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=[],u=C(i,s.shape);let h=u;const c=co(h,o);let d,p=s;if(null!=c&&(p=j$({inputs:{x:s},backend:n,attrs:{perm:c}}),h=fo(h.length,o),l.push(p)),ho("prod",h,o),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:r,outDtype:s}=MN(p.shape,p.dtype,t,h);d=n.makeTensorInfo(r,s,e)}else{const[t,e]=lo(p.shape,h),r=x(e),i=O$({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=B$(i,ts(s.dtype),"prod",n);d=O$({inputs:{x:a},backend:n,attrs:{shape:t}}),l.push(i),l.push(a)}if(a){l.push(d);const t=uo(d.shape,u);d=O$({inputs:{x:d},backend:n,attrs:{shape:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},cF=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:i,dtype:a}=n,o=_N(r,s,i,a);return e.makeTensorInfo([o.length],a,o)},dF={kernelName:en,backendName:"webgl",kernelFunc:cF},pF=T$({opSnippet:"return 1.0 / x;"}),fF={kernelName:rn,backendName:"webgl",kernelFunc:pF},mF=T$({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),gF={kernelName:sn,backendName:"webgl",kernelFunc:mF},bF=T$({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),xF={kernelName:cn,backendName:"webgl",kernelFunc:bF};class yF{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let c;c=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/h[0]},\n          ${u[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${c};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class wF{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let c;c=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/h[0]},\n          ${u[1]/h[1]},\n          ${u[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${c};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const vF={kernelName:un,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,h=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new wF(s.shape,l,u,i,a):new yF(s.shape,l,u,i,a);return n.runWebGLProgram(h,[s],"float32")}};class kF{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,a]=t,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],h=o[1]/l[1],c=1/u,d=1/h,p=2*Math.ceil(c)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${c});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const IF={kernelName:hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r,o=new kF(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class SF{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/h[0]},\n          ${u[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class CF{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=t;this.outputShape=[i,e,n,l];const u=[r&&e>1?a-1:a,r&&n>1?o-1:o],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/h[0]},\n          ${u[1]/h[1]},\n          ${u[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const NF={kernelName:on,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,h=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new CF(s.shape,l,u,i,a):new SF(s.shape,l,u,i,a);return n.runWebGLProgram(h,[s],s.dtype)}};class $F{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,i,a]=t,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],h=o[1]/l[1],c=1/u,d=1/h,p=2*Math.ceil(c)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${c});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const TF={kernelName:ln,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:a}=r,o=new $F(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class EF{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=jC(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class RF{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=t$("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=jC(n);function o(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const AF={kernelName:dn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r,a=s.shape.length,o=C(i,s.shape);if(0===a)return x$({inputs:{x:s},backend:n});const l=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RF(s.shape,o):new EF(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class FF{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=t[1],r=t[2];this.outputShape=t;let s="";s="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const DF={kernelName:Qn,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:a}=e,o=n,l=new FF(r.shape,i),[u,h]=ku(a,r.shape[1],r.shape[2]),c=[[u,h,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,c)}},MF=T$({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),_F={kernelName:pn,backendName:"webgl",kernelFunc:MF},OF=T$({opSnippet:"return inversesqrt(x);",cpuKernelImpl:ON}),LF={kernelName:fn,backendName:"webgl",kernelFunc:OF};class zF{constructor(t,e,n,r,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=jC(s.length),l=jC(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const h=`getIndices(${u})`;let c="";1===r?c="i":2===r&&(c="i, coords[1]");const d=`getUpdates(${c})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const PF={kernelName:mn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:h,outputSize:c}=Au(0,s,a),d=[c/u,u];if(0===c)return n.makeTensorInfo(a,s.dtype);const p=O$({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=O$({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new zF(l,o,p.shape.length,f.shape.length,h,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),x=O$({inputs:{x:b},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),x}};class BF{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<e.length;r++)a.push(`${n[r]}`),r<t&&i.push(`${n[r]}`);r=i.join(),s=a.join()}const i=jC(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const UF={kernelName:gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e,a=new BF(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,i],Qr(s.dtype,i.dtype))}},WF=T$({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Fu};\n  float scale = ${Du};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),VF={kernelName:bn,backendName:"webgl",kernelFunc:WF},GF=T$({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:LN}),HF={kernelName:kn,backendName:"webgl",kernelFunc:GF},jF=T$({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),qF={kernelName:vn,backendName:"webgl",kernelFunc:jF},KF=T$({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),XF={kernelName:yn,backendName:"webgl",kernelFunc:KF},YF=T$({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),ZF={kernelName:wn,backendName:"webgl",kernelFunc:YF},JF=T$({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),QF={kernelName:In,backendName:"webgl",kernelFunc:JF},tD={kernelName:Nn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:a}=r;f(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((t,e)=>t*e)),l=[[0,0]];l.push(...a);for(let t=1+i.length;t<s.shape.length;++t)l.push([0,0]);const u=[],h=aF({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Iu(h.shape,i,o,!1),d=Su(c.length,i.length,!1),p=Cu(h.shape,i,o,!1),m=O$({inputs:{x:h},backend:n,attrs:{shape:c}}),g=j$({inputs:{x:m},backend:n,attrs:{perm:d}}),b=O$({inputs:{x:g},backend:n,attrs:{shape:p}});return u.push(h),u.push(m),u.push(g),u.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}},eD={kernelName:En,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:i,defaultValue:a}=e;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(i.dataId),h=n.readSync(a.dataId)[0],[c,d,p,f,m]=BN(o,r.shape,r.dtype,l,s.dtype,u,h);return[n.makeTensorInfo(d,r.dtype,c),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},nD={kernelName:Rn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:i}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(i.dataId)),[u,h,c]=UN(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(h,r.dtype,u),n.makeTensorInfo([c.length],i.dtype,new Int32Array(c))]}},rD={kernelName:An,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,h]=WN(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(h,r.dtype,u)}},sD={kernelName:Fn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,h]=WN(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(h,r.dtype,u)}},iD={kernelName:Dn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:h,outputSize:c}=Au(0,s,o),d=new zF(u,l,s.shape.length,i.shape.length,h,[c,1],!1),p=n.runWebGLProgram(d,[i,s,a],i.dtype),f=O$({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},aD={kernelName:$n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:a}=r,o=C(a,s.shape)[0],l=eh(s,i,o),u=s.shape.length,h=new Array(u).fill(0),c=s.shape.slice();return l.map((t=>{const e=[...c];e[o]=t;const r=WT({inputs:{x:s},backend:n,attrs:{begin:h,size:e}});return h[o]+=t,r}))}},oD="return sqrt(x);",lD=T$({opSnippet:oD,packedOpSnippet:oD,cpuKernelImpl:VN}),uD={kernelName:Sn,backendName:"webgl",kernelFunc:lD},hD={kernelName:_n,backendName:"webgl",kernelFunc:T$({opSnippet:"return x * x;"})},cD="return (a - b) * (a - b);",dD=E$({opSnippet:cD,packedOpSnippet:cD}),pD={kernelName:Mn,backendName:"webgl",kernelFunc:dD},fD={kernelName:Zn,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,i=new o$(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}};class mD{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=jC(n.length),i=jC(n.length);let a="";if(1===r)a="coords * strides + begin";else{let t=0;a=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const gD={kernelName:On,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:h,newAxisMask:c,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:w,strides:v}=Ai(s.shape,i,a,o,l,u,h,c,d);let k;if(g)k=O$({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||x){f(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const t=xi(y,w,v),e=WT({inputs:{x:s},backend:n,attrs:{begin:y,size:t}});k=O$({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(e)}else if(n.shouldExecuteOnCPU([s])){const t=n.readSync(s.dataId),e=ei(s.shape,s.dtype,t),r=GN(p,e,v,y);k=n.makeTensorInfo(m,s.dtype,r.values)}else{const t=new mD(y,v,p);k=n.runWebGLProgram(t,[s],s.dtype)}const I=O$({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),I}},bD={kernelName:Ln,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:h,dataSplits:c}=e,d=n.readSync(h.dataId),p=n.readSync(c.dataId),[f,m]=HN(d,p,s,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(c.shape,"int32",m)]}},xD={kernelName:zn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:i,delimiter:a}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),l=n.readSync(a.dataId)[0],[u,h,c]=jN(o,l,s),d=h.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",h),n.makeTensorInfo([2],"int32",new Int32Array(c))]}},yD={kernelName:Pn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:i}=e;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=qN(a,s);return n.makeTensorInfo(i.shape,"int32",o)}},wD=T$({opSnippet:"return tan(x);"}),vD={kernelName:Un,backendName:"webgl",kernelFunc:wD},kD=T$({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),ID={kernelName:Wn,backendName:"webgl",kernelFunc:kD};class SD{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=jC(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function CD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const t=n.readSync(s.dataId),e="string"===s.dtype?t.map((t=>Ar(t))):t,r=ei(s.shape,s.dtype,e),a=XN(r,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new SD(s.shape,i);return n.runWebGLProgram(a,[s],s.dtype)}const ND={kernelName:Vn,backendName:"webgl",kernelFunc:CD};class $D{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class TD{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function ED(t,e){null!==e&&t.disposeIntermediateTensorInfo(e)}function RD(t){let e=1;for(;e<t;)e*=2;return e}const AD={kernelName:Gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:i,sorted:a}=r,o=X().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=X().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,h=u[u.length-1];if(n.shouldExecuteOnCPU([s])||h<o||i>l){const t=n.readSync(s.dataId),[e,r]=YN(t,u,s.dtype,i,a);return[n.makeTensorInfo(e.shape,e.dtype,e.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===h)return[s,yR({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const c=n.texData.get(s.dataId),d=null!==c&&c.isPacked,p=d?n.unpackTensor(s):s,f=x(u)/h,m=O$({inputs:{x:p},attrs:{shape:[f,h]},backend:n});d&&ED(n,p);const g=RD(i),b=RD(h);let y=null;const w=()=>null===y?[m,m]:[m,y],v=(t,e,r)=>{const s=w(),i=new $D(r),a=[[h],[null===y?1:0],[Number.NEGATIVE_INFINITY],[t],[e]],o=y;y=n.runWebGLProgram(i,s,"int32",a),ED(n,o)};for(let t=1;t<g;t*=2){const e=2*t;for(let n=t;n>=1;n/=2)v(e,n,[f,b])}for(let t=b;t>g;t/=2){const e=w(),r=new TD([f,t/2]),s=[[h],[null===y?1:0],[g]],i=y;y=n.runWebGLProgram(r,e,"int32",s),ED(n,i);const a=g/2,o=2*a;for(let t=a;t>=1;t/=2)v(o,t,y.shape)}let k=y;y=WT({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,i]}}),ED(n,k);let I=LR({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});ED(n,m);const S=u.slice(0,-1);S.push(i),k=y,y=O$({inputs:{x:y},attrs:{shape:S},backend:n}),ED(n,k);const C=I;return I=O$({inputs:{x:I},attrs:{shape:S},backend:n}),ED(n,C),[I,y]}};class FD{constructor(t,e,n,r,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const DD={kernelName:Hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[h,c,d,p]=s.shape,[f,m]=null!=u?u:[c,d],g=new FD(c,d,a,o,l,[h,f,m,p]);return n.runWebGLProgram(g,[s,i],"float32")}},MD={kernelName:qn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:i}=e;EC(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=JN(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},_D={kernelName:Kn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,l=s.shape[i],u=new Array(o-1);let h=0;for(let t=0;t<o;t++)t!==i&&(u[h++]=a.shape[t]);const c=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let t=0;t<f.length;t++){d[i]=t;const e=WT({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),r=O$({inputs:{x:e},backend:n,attrs:{shape:u}});f[t]=r,c.push(e)}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class OD{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,i=t.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${c}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const LD=[X$,Z$,Q$,eT,sT,oT,lT,uT,mT,gT,xT,wT,kT,ST,NT,ET,RT,DT,MT,_T,zT,GT,HT,jT,ZT,tE,rE,v$,aE,fE,wE,CE,NE,$E,TE,EE,AE,DE,_E,PE,BE,WE,HE,KE,XE,ZE,QE,tR,nR,rR,iR,oR,uR,cR,fR,bR,wR,kR,CR,$R,RR,FR,DR,_R,zR,BR,WR,y$,VR,cE,HR,qR,XR,S$,ZR,QR,tA,nA,sA,aA,lA,hA,pA,mA,bA,yA,wA,vA,SA,CA,NA,$A,TA,RA,DA,_A,GA,_$,HA,qA,XA,ZA,KT,QA,nF,rF,oF,uF,$$,hF,dF,YT,zA,fF,gF,xF,L$,vF,IF,NF,TF,AF,DF,_F,LF,PF,UF,VF,HF,qF,XF,ZF,VT,VA,QF,tD,eD,nD,rD,sD,iD,aD,uD,hD,pD,fD,gD,bD,xD,yD,UA,H$,vD,ID,ND,AD,DD,q$,MD,_D,{kernelName:Xn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:a}=r,o=s.shape.length,l=[];let u=0;const h=co([u],o);let c=s;null!=h&&(c=j$({inputs:{x:s},backend:n,attrs:{perm:h}}),l.push(c),u=fo(1,o)[0]);const d=mh(c.shape,u,a),p=x([c.shape[u]]),f=O$({inputs:{x:c},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=ts(s.dtype),g=(t,e,r,s,i)=>{const a=t.shape[0],o=t.shape[1],u=fh(o,i),h=new OD({windowSize:u,inSize:o,batchSize:a,numSegments:i},e),c=n.compileAndRun(h,[t,r],s);if(l.push(c),c.shape[1]===i)return c;const d=cF({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=CD({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(c,e,p,s,i)},b=O$({inputs:{x:g(f,"unsortedSegmentSum",i,m,a)},backend:n,attrs:{shape:d}});let y=b;if(null!=h){l.push(b);const t=po(h);y=j$({inputs:{x:y},backend:n,attrs:{perm:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},eF];for(const t of LD)hr(t);module.exports=function(){return require("!!/Users/24g/Projects/530-R&D3-AR/mind-ar-js/node_modules/worker-loader/dist/workers/InlineWorker.js")('(()=>{"use strict";function t(t,e){return t<e?-1:t>e?1:0}const e=t=>{const{v1:e,v2:o}=t;let s=0;for(let t=0;t<e.length;t++){let n=(e[t]^o[t])>>>0;s+=r(n)}return s},r=t=>{var e=t-(t>>1&1431655765);return((e=((e=((e=(e>>2&858993459)+(858993459&e))>>4)+e&252645135)>>8)+e&16711935)>>16)+e&65535},o=t=>{const{keywidth:e,keyheight:r,querywidth:o,queryheight:n,matches:i}=t,h=1.2*o,l=-h,u=1.2*n,a=-u,f=12,c=1/Math.log(10),m=Math.max(e,r),g=Math.floor(e/2),w=Math.floor(r/2),p=[];for(let t=0;t<i.length;t++){const e=i[t].querypoint.scale,r=i[t].keypoint.scale;0==r&&console.log("ERROR divide zero");const o=e/r;p.push(o*m)}p.sort(((t,e)=>t-e));const d=.25*p[Math.floor(p.length/2)-(p.length%2==0?1:0)-1],y=Math.max(5,Math.ceil((h-l)/d)),M=Math.max(5,Math.ceil((u-a)/d)),b=y*M,x=b*f,E=[],S=[],v={};for(let t=0;t<i.length;t++){const e=i[t].querypoint,r=i[t].keypoint,{x:o,y:n,scale:m,angle:p}=s({querypoint:e,keypoint:r,keycenterX:g,keycenterY:w,scaleOneOverLogK:c});if(o<l||o>=h||n<a||n>=u||p<=-Math.PI||p>Math.PI||m<-1||m>=1){E[t]=!1;continue}let d=y*(o-l)/(h-l),k=M*(n-a)/(u-a),R=f*(p+Math.PI)/(2*Math.PI),T=10*(m- -1)/2;S[t]={binX:d,binY:k,binAngle:R,binScale:T};let q=Math.floor(d-.5),A=Math.floor(k-.5),I=Math.floor(T-.5),C=(Math.floor(R-.5)+f)%f;if(q<0||q+1>=y||A<0||A+1>=M||I<0||I+1>=10)E[t]=!1;else{for(let t=0;t<2;t++){let e=q+t;for(let t=0;t<2;t++){let r=A+t;for(let t=0;t<2;t++){let o=(C+t)%f;for(let t=0;t<2;t++){const s=e+r*y+o*b+(I+t)*x;void 0===v[s]&&(v[s]=0),v[s]+=1}}}}E[t]=!0}}let k=0,R=-1;if(Object.keys(v).forEach((t=>{v[t]>k&&(k=v[t],R=t)})),k<3)return[];const T=Math.floor(R%x%b%y),q=Math.floor((R-T)%x%b/y),A=Math.floor((R-T-q*y)%x/b),I=Math.floor((R-T-q*y-A*b)/x),C=[];for(let t=0;t<i.length;t++){if(!E[t])continue;const e=S[t];if(Math.abs(e.binX-(T+.5))>=1)continue;if(Math.abs(e.binY-(q+.5))>=1)continue;if(Math.abs(e.binScale-(I+.5))>=1)continue;const r=Math.abs(e.binAngle-(A+.5));Math.min(r,f-r)>=1||C.push(i[t])}return C},s=({querypoint:t,keypoint:e,keycenterX:r,keycenterY:o,scaleOneOverLogK:s})=>{let n=t.angle-e.angle;n<=-Math.PI?n+=2*Math.PI:n>Math.PI&&(n-=2*Math.PI);const i=t.scale/e.scale,h=i*Math.cos(n),l=i*Math.sin(n),u=[h,-l,l,h],a=[u[0]*e.x+u[1]*e.y,u[2]*e.x+u[3]*e.y],f=t.x-a[0],c=t.y-a[1];return{x:u[0]*r+u[1]*o+f,y:u[2]*r+u[3]*o+c,angle:n,scale:Math.log(i)*s}},n=()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:r}=t;for(let t=0;t<r;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let r=this.seed>>16&32767;r%=e.length;let o=e[t];e[t]=e[r],e[r]=o}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}}),i=(t,e,r)=>(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]),h=(t,e)=>{const r=(t=>{const e=t[4]*t[8]-t[5]*t[7],r=t[3]*t[8]-t[5]*t[6],o=t[3]*t[7]-t[4]*t[6];return t[0]*e-t[1]*r+t[2]*o})(t);if(Math.abs(r)<=e)return null;const o=1/r;return[(t[4]*t[8]-t[5]*t[7])*o,(t[2]*t[7]-t[1]*t[8])*o,(t[1]*t[5]-t[2]*t[4])*o,(t[5]*t[6]-t[3]*t[8])*o,(t[0]*t[8]-t[2]*t[6])*o,(t[2]*t[3]-t[0]*t[5])*o,(t[3]*t[7]-t[4]*t[6])*o,(t[1]*t[6]-t[0]*t[7])*o,(t[0]*t[4]-t[1]*t[3])*o]},l=(t,e)=>{const r=e[6]*t[0]+e[7]*t[1]+e[8],o=[];return o[0]=(e[0]*t[0]+e[1]*t[1]+e[2])/r,o[1]=(e[3]*t[0]+e[4]*t[1]+e[5])/r,o},u=(t,e)=>[t[0]-e[0],t[1]-e[1]],a=(t,e)=>{const r=t[0]*e[1]-t[1]*e[0];return.5*Math.abs(r)},f=Object.prototype.toString;function c(t){return f.call(t).endsWith("Array]")}const m=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!c(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,s=e.toIndex,n=void 0===s?t.length:s;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(n<=o||n>t.length||!Number.isInteger(n))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var i=t[o],h=o+1;h<n;h++)t[h]>i&&(i=t[h]);return i},g=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!c(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,o=void 0===r?0:r,s=e.toIndex,n=void 0===s?t.length:s;if(o<0||o>=t.length||!Number.isInteger(o))throw new Error("fromIndex must be a positive integer smaller than length");if(n<=o||n>t.length||!Number.isInteger(n))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var i=t[o],h=o+1;h<n;h++)t[h]<i&&(i=t[h]);return i},w=function(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!c(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!c(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var o=g(t),s=m(t);if(o===s)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var n=r.min,i=void 0===n?r.autoMinMax?o:0:n,h=r.max,l=void 0===h?r.autoMinMax?s:1:h;if(i>=l)throw new RangeError("min option must be smaller than max option");for(var u=(l-i)/(s-o),a=0;a<t.length;a++)e[a]=(t[a]-o)*u+i;return e},p=" ".repeat(2),d=" ".repeat(4);function y(t,e={}){const{maxRows:r=15,maxColumns:o=10,maxNumSize:s=8}=e;return`${t.constructor.name} {\\n${p}[\\n${d}${function(t,e,r,o){const{rows:s,columns:n}=t,i=Math.min(s,e),h=Math.min(n,r),l=[];for(let e=0;e<i;e++){let r=[];for(let s=0;s<h;s++)r.push(M(t.get(e,s),o));l.push(`${r.join(" ")}`)}return h!==n&&(l[l.length-1]+=` ... ${n-r} more columns`),i!==s&&l.push(`... ${s-e} more rows`),l.join(`\\n${d}`)}(t,r,o,s)}\\n${p}]\\n${p}rows: ${t.rows}\\n${p}columns: ${t.columns}\\n}`}function M(t,e){const r=String(t);if(r.length<=e)return r.padEnd(e," ");const o=t.toPrecision(e-2);if(o.length<=e)return o;const s=t.toExponential(e-2),n=s.indexOf("e"),i=s.slice(n);return s.slice(0,e-i.length)+i}function b(t,e,r){let o=r?t.rows:t.rows-1;if(e<0||e>o)throw new RangeError("Row index out of range")}function x(t,e,r){let o=r?t.columns:t.columns-1;if(e<0||e>o)throw new RangeError("Column index out of range")}function E(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function S(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function v(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for row indices");if(e.some((e=>e<0||e>=t.rows)))throw new RangeError("row indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function k(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for column indices");if(e.some((e=>e<0||e>=t.columns)))throw new RangeError("column indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function R(t,e,r,o,s){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(q("startRow",e),q("endRow",r),q("startColumn",o),q("endColumn",s),e>r||o>s||e<0||e>=t.rows||r<0||r>=t.rows||o<0||o>=t.columns||s<0||s>=t.columns)throw new RangeError("Submatrix indices are out of range")}function T(t,e=0){let r=[];for(let o=0;o<t;o++)r.push(e);return r}function q(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function A(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class I{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let o=new P(t,e);for(let s=0;s<t;s++)for(let t=0;t<e;t++)o.set(s,t,r[s*e+t]);return o}static rowVector(t){let e=new P(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new P(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new P(t,e)}static ones(t,e){return new P(t,e).fill(1)}static rand(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{random:o=Math.random}=r;let s=new P(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)s.set(r,t,o());return s}static randInt(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{min:o=0,max:s=1e3,random:n=Math.random}=r;if(!Number.isInteger(o))throw new TypeError("min must be an integer");if(!Number.isInteger(s))throw new TypeError("max must be an integer");if(o>=s)throw new RangeError("min must be smaller than max");let i=s-o,h=new P(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=o+Math.round(n()*i);h.set(r,t,e)}return h}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let o=Math.min(t,e),s=this.zeros(t,e);for(let t=0;t<o;t++)s.set(t,t,r);return s}static diag(t,e,r){let o=t.length;void 0===e&&(e=o),void 0===r&&(r=e);let s=Math.min(o,e,r),n=this.zeros(e,r);for(let e=0;e<s;e++)n.set(e,e,t[e]);return n}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,o=t.columns,s=new P(r,o);for(let n=0;n<r;n++)for(let r=0;r<o;r++)s.set(n,r,Math.min(t.get(n,r),e.get(n,r)));return s}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,o=t.columns,s=new this(r,o);for(let n=0;n<r;n++)for(let r=0;r<o;r++)s.set(n,r,Math.max(t.get(n,r),e.get(n,r)));return s}static checkMatrix(t){return I.isMatrix(t)?t:new P(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,r=-1,o=!0,s=!1;for(;t<this.rows&&o;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(s=!0,r=e):(o=!1,s=!0);t++}return o}isReducedEchelonForm(){let t=0,e=0,r=-1,o=!0,s=!1;for(;t<this.rows&&o;){for(e=0,s=!1;e<this.columns&&!1===s;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(s=!0,r=e):(o=!1,s=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(o=!1);t++}return o}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let o=e;for(let s=e;s<t.rows;s++)t.get(s,r)>t.get(o,r)&&(o=s);if(0===t.get(o,r))r++;else{t.swapRows(e,o);let s=t.get(e,r);for(let o=r;o<t.columns;o++)t.set(e,o,t.get(e,o)/s);for(let o=e+1;o<t.rows;o++){let s=t.get(o,r)/t.get(e,r);t.set(o,r,0);for(let n=r+1;n<t.columns;n++)t.set(o,n,t.get(o,n)-t.get(e,n)*s)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,o=r-1;for(;o>=0;)if(0===t.maxRow(o))o--;else{let s=0,n=!1;for(;s<r&&!1===n;)1===t.get(o,s)?n=!0:s++;for(let r=0;r<o;r++){let n=t.get(r,s);for(let i=s;i<e;i++){let e=t.get(r,i)-n*t.get(o,i);t.set(r,i,e)}}o--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let o=new P(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)o.setSubMatrix(this,this.rows*t,this.columns*e);return o}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){b(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return P.rowVector(this.getRow(t))}setRow(t,e){b(this,t),e=E(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){b(this,t),b(this,e);for(let r=0;r<this.columns;r++){let o=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,o)}return this}getColumn(t){x(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return P.columnVector(this.getColumn(t))}setColumn(t,e){x(this,t),e=S(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){x(this,t),x(this,e);for(let r=0;r<this.rows;r++){let o=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,o)}return this}addRowVector(t){t=E(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=E(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=E(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=E(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=S(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=S(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=S(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=S(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){b(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){x(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}maxIndex(){A(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let o=0;o<this.columns;o++)this.get(r,o)>t&&(t=this.get(r,o),e[0]=r,e[1]=o);return e}min(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}minIndex(){A(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let o=0;o<this.columns;o++)this.get(r,o)<t&&(t=this.get(r,o),e[0]=r,e[1]=o);return e}maxRow(t){if(b(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){b(this,t),A(this);let e=this.get(t,0),r=[t,0];for(let o=1;o<this.columns;o++)this.get(t,o)>e&&(e=this.get(t,o),r[1]=o);return r}minRow(t){if(b(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){b(this,t),A(this);let e=this.get(t,0),r=[t,0];for(let o=1;o<this.columns;o++)this.get(t,o)<e&&(e=this.get(t,o),r[1]=o);return r}maxColumn(t){if(x(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){x(this,t),A(this);let e=this.get(0,t),r=[0,t];for(let o=1;o<this.rows;o++)this.get(o,t)>e&&(e=this.get(o,t),r[0]=o);return r}minColumn(t){if(x(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){x(this,t),A(this);let e=this.get(0,t),r=[0,t];for(let o=1;o<this.rows;o++)this.get(o,t)<e&&(e=this.get(o,t),r[0]=o);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(t="frobenius"){let e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)e+=this.get(t,r)*this.get(t,r);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){I.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let o=0;o<e.length;o++)r+=e[o]*t[o];return r}mmul(t){t=P.checkMatrix(t);let e=this.rows,r=this.columns,o=t.columns,s=new P(e,o),n=new Float64Array(r);for(let i=0;i<o;i++){for(let e=0;e<r;e++)n[e]=t.get(e,i);for(let t=0;t<e;t++){let e=0;for(let o=0;o<r;o++)e+=this.get(t,o)*n[o];s.set(t,i,e)}}return s}strassen2x2(t){t=P.checkMatrix(t);let e=new P(2,2);const r=this.get(0,0),o=t.get(0,0),s=this.get(0,1),n=t.get(0,1),i=this.get(1,0),h=t.get(1,0),l=this.get(1,1),u=t.get(1,1),a=(r+l)*(o+u),f=(i+l)*o,c=r*(n-u),m=l*(h-o),g=(r+s)*u,w=a+m-g+(s-l)*(h+u),p=c+g,d=f+m,y=a-f+c+(i-r)*(o+n);return e.set(0,0,w),e.set(0,1,p),e.set(1,0,d),e.set(1,1,y),e}strassen3x3(t){t=P.checkMatrix(t);let e=new P(3,3);const r=this.get(0,0),o=this.get(0,1),s=this.get(0,2),n=this.get(1,0),i=this.get(1,1),h=this.get(1,2),l=this.get(2,0),u=this.get(2,1),a=this.get(2,2),f=t.get(0,0),c=t.get(0,1),m=t.get(0,2),g=t.get(1,0),w=t.get(1,1),p=t.get(1,2),d=t.get(2,0),y=t.get(2,1),M=t.get(2,2),b=(r-n)*(-c+w),x=(-r+n+i)*(f-c+w),E=(n+i)*(-f+c),S=r*f,v=(-r+l+u)*(f-m+p),k=(-r+l)*(m-p),R=(l+u)*(-f+m),T=(-s+u+a)*(w+d-y),q=(s-a)*(w-y),A=s*d,I=(u+a)*(-d+y),C=(-s+i+h)*(p+d-M),N=(s-h)*(p-M),V=(i+h)*(-d+M),j=S+A+o*g,z=(r+o+s-n-i-u-a)*w+x+E+S+T+A+I,F=S+v+R+(r+o+s-i-h-l-u)*p+A+C+V,$=b+i*(-f+c+g-w-p-d+M)+x+S+A+C+N,_=b+x+E+S+h*y,D=A+C+N+V+n*m,H=S+v+k+u*(-f+m+g-w-p-d+y)+T+q+A,U=T+q+A+I+l*c,L=S+v+k+R+a*M;return e.set(0,0,j),e.set(0,1,z),e.set(0,2,F),e.set(1,0,$),e.set(1,1,_),e.set(1,2,D),e.set(2,0,H),e.set(2,1,U),e.set(2,2,L),e}mmulStrassen(t){t=P.checkMatrix(t);let e=this.clone(),r=e.rows,o=e.columns,s=t.rows,n=t.columns;function i(t,e,r){let o=t.rows,s=t.columns;if(o===e&&s===r)return t;{let o=I.zeros(e,r);return o=o.setSubMatrix(t,0,0),o}}o!==s&&console.warn(`Multiplying ${r} x ${o} and ${s} x ${n} matrix: dimensions do not match.`);let h=Math.max(r,s),l=Math.max(o,n);return e=i(e,h,l),function t(e,r,o,s){if(o<=512||s<=512)return e.mmul(r);o%2==1&&s%2==1?(e=i(e,o+1,s+1),r=i(r,o+1,s+1)):o%2==1?(e=i(e,o+1,s),r=i(r,o+1,s)):s%2==1&&(e=i(e,o,s+1),r=i(r,o,s+1));let n=parseInt(e.rows/2,10),h=parseInt(e.columns/2,10),l=e.subMatrix(0,n-1,0,h-1),u=r.subMatrix(0,n-1,0,h-1),a=e.subMatrix(0,n-1,h,e.columns-1),f=r.subMatrix(0,n-1,h,r.columns-1),c=e.subMatrix(n,e.rows-1,0,h-1),m=r.subMatrix(n,r.rows-1,0,h-1),g=e.subMatrix(n,e.rows-1,h,e.columns-1),w=r.subMatrix(n,r.rows-1,h,r.columns-1),p=t(I.add(l,g),I.add(u,w),n,h),d=t(I.add(c,g),u,n,h),y=t(l,I.sub(f,w),n,h),M=t(g,I.sub(m,u),n,h),b=t(I.add(l,a),w,n,h),x=t(I.sub(c,l),I.add(u,f),n,h),E=t(I.sub(a,g),I.add(m,w),n,h),S=I.add(p,M);S.sub(b),S.add(E);let v=I.add(y,b),k=I.add(d,M),R=I.sub(p,d);R.add(y),R.add(x);let T=I.zeros(2*S.rows,2*S.columns);return T=T.setSubMatrix(S,0,0),T=T.setSubMatrix(v,S.rows,0),T=T.setSubMatrix(k,0,S.columns),T=T.setSubMatrix(R,S.rows,S.columns),T.subMatrix(0,o-1,0,s-1)}(e,t=i(t,h,l),h,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let o=new P(this.rows,this.columns);for(let t=0;t<this.rows;t++){const s=this.getRow(t);s.length>0&&w(s,{min:e,max:r,output:s}),o.setRow(t,s)}return o}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let o=new P(this.rows,this.columns);for(let t=0;t<this.columns;t++){const s=this.getColumn(t);s.length&&w(s,{min:e,max:r,output:s}),o.setColumn(t,s)}return o}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),o=this.get(e,this.columns-1-r);this.set(e,r,o),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),o=this.get(this.rows-1-r,e);this.set(r,e,o),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=P.checkMatrix(t);let e=this.rows,r=this.columns,o=t.rows,s=t.columns,n=new P(e*o,r*s);for(let i=0;i<e;i++)for(let e=0;e<r;e++)for(let r=0;r<o;r++)for(let h=0;h<s;h++)n.set(o*i+r,s*e+h,this.get(i,e)*t.get(r,h));return n}transpose(){let t=new P(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(t=C){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=C){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,o){R(this,t,e,r,o);let s=new P(e-t+1,o-r+1);for(let n=t;n<=e;n++)for(let e=r;e<=o;e++)s.set(n-t,e-r,this.get(n,e));return s}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let o=new P(t.length,r-e+1);for(let s=0;s<t.length;s++)for(let n=e;n<=r;n++){if(t[s]<0||t[s]>=this.rows)throw new RangeError(`Row index out of range: ${t[s]}`);o.set(s,n-e,this.get(t[s],n))}return o}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let o=new P(r-e+1,t.length);for(let s=0;s<t.length;s++)for(let n=e;n<=r;n++){if(t[s]<0||t[s]>=this.columns)throw new RangeError(`Column index out of range: ${t[s]}`);o.set(n-e,s,this.get(n,t[s]))}return o}setSubMatrix(t,e,r){if((t=P.checkMatrix(t)).isEmpty())return this;R(this,e,e+t.rows-1,r,r+t.columns-1);for(let o=0;o<t.rows;o++)for(let s=0;s<t.columns;s++)this.set(e+o,r+s,t.get(o,s));return this}selection(t,e){let r=function(t,e,r){return{row:v(t,e),column:k(t,r)}}(this,t,e),o=new P(t.length,e.length);for(let t=0;t<r.row.length;t++){let e=r.row[t];for(let s=0;s<r.column.length;s++){let n=r.column[s];o.set(t,s,this.get(e,n))}}return o}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){let t=new P(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(e,r,this.get(e,r));return t}sum(t){switch(t){case"row":return function(t){let e=T(t.rows);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[r]+=t.get(r,o);return e}(this);case"column":return function(t){let e=T(t.columns);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[o]+=t.get(r,o);return e}(this);case void 0:return function(t){let e=0;for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)e+=t.get(r,o);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=T(t.rows,1);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[r]*=t.get(r,o);return e}(this);case"column":return function(t){let e=T(t.columns,1);for(let r=0;r<t.rows;++r)for(let o=0;o<t.columns;++o)e[o]*=t.get(r,o);return e}(this);case void 0:return function(t){let e=1;for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)e*=t.get(r,o);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:o=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!Array.isArray(o))throw new TypeError("mean must be an array");return function(t,e,r){const o=t.rows,s=t.columns,n=[];for(let i=0;i<o;i++){let o=0,h=0,l=0;for(let e=0;e<s;e++)l=t.get(i,e)-r[i],o+=l,h+=l*l;e?n.push((h-o*o/s)/(s-1)):n.push((h-o*o/s)/s)}return n}(this,r,o);case"column":if(!Array.isArray(o))throw new TypeError("mean must be an array");return function(t,e,r){const o=t.rows,s=t.columns,n=[];for(let i=0;i<s;i++){let s=0,h=0,l=0;for(let e=0;e<o;e++)l=t.get(e,i)-r[i],s+=l,h+=l*l;e?n.push((h-s*s/o)/(o-1)):n.push((h-s*s/o)/o)}return n}(this,r,o);case void 0:if("number"!=typeof o)throw new TypeError("mean must be a number");return function(t,e,r){const o=t.rows,s=t.columns,n=o*s;let i=0,h=0,l=0;for(let e=0;e<o;e++)for(let o=0;o<s;o++)l=t.get(e,o)-r,i+=l,h+=l*l;return e?(h-i*i/n)/(n-1):(h-i*i/n)/n}(this,r,o);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e[r])}(this,r),this;case"column":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e[o])}(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)-e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.rows;r++){let o=0;for(let e=0;e<t.columns;e++)o+=Math.pow(t.get(r,e),2)/(t.columns-1);e.push(Math.sqrt(o))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e[r])}(this,r),this;case"column":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.columns;r++){let o=0;for(let e=0;e<t.rows;e++)o+=Math.pow(t.get(e,r),2)/(t.rows-1);e.push(Math.sqrt(o))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e[o])}(this,r),this;case void 0:if(void 0===r)r=function(t){const e=t.size-1;let r=0;for(let o=0;o<t.columns;o++)for(let s=0;s<t.rows;s++)r+=Math.pow(t.get(s,o),2)/e;return Math.sqrt(r)}(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let o=0;o<t.columns;o++)t.set(r,o,t.get(r,o)/e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return y(this,t)}}function C(t,e){return t-e}I.prototype.klass="Matrix","undefined"!=typeof Symbol&&(I.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return y(this)}),I.random=I.rand,I.randomInt=I.randInt,I.diagonal=I.diag,I.prototype.diagonal=I.prototype.diag,I.identity=I.eye,I.prototype.negate=I.prototype.neg,I.prototype.tensorProduct=I.prototype.kroneckerProduct;class P extends I{constructor(t,e){if(super(),P.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e))}else{if(!Array.isArray(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let o=0;o<t;o++){if(r[o].length!==e)throw new RangeError("Inconsistent array dimensions");this.data.push(Float64Array.from(r[o]))}}}this.rows=t,this.columns=e}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return b(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),b(this,t,!0),e=Float64Array.from(E(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){x(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let o=0;o<t;o++)r[o]=this.data[e][o];for(let o=t+1;o<this.columns;o++)r[o-1]=this.data[e][o];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),x(this,t,!0),e=S(this,e);for(let r=0;r<this.rows;r++){const o=new Float64Array(this.columns+1);let s=0;for(;s<t;s++)o[s]=this.data[r][s];for(o[s++]=e[r];s<this.columns+1;s++)o[s]=this.data[r][s-1];this.data[r]=o}return this.columns+=1,this}}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t.get(e,r)));return this}}(I,P);class N extends I{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}class V{constructor(t){let e,r,o,s,n,i,h,l,u,a=(t=N.checkMatrix(t)).clone(),f=a.rows,c=a.columns,m=new Float64Array(f),g=1;for(e=0;e<f;e++)m[e]=e;for(l=new Float64Array(f),r=0;r<c;r++){for(e=0;e<f;e++)l[e]=a.get(e,r);for(e=0;e<f;e++){for(u=Math.min(e,r),n=0,o=0;o<u;o++)n+=a.get(e,o)*l[o];l[e]-=n,a.set(e,r,l[e])}for(s=r,e=r+1;e<f;e++)Math.abs(l[e])>Math.abs(l[s])&&(s=e);if(s!==r){for(o=0;o<c;o++)i=a.get(s,o),a.set(s,o,a.get(r,o)),a.set(r,o,i);h=m[s],m[s]=m[r],m[r]=h,g=-g}if(r<f&&0!==a.get(r,r))for(e=r+1;e<f;e++)a.set(e,r,a.get(e,r)/a.get(r,r))}this.LU=a,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=P.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,o,s,n=t.columns,i=t.subMatrixRow(this.pivotVector,0,n-1),h=e.columns;for(s=0;s<h;s++)for(r=s+1;r<h;r++)for(o=0;o<n;o++)i.set(r,o,i.get(r,o)-i.get(s,o)*e.get(r,s));for(s=h-1;s>=0;s--){for(o=0;o<n;o++)i.set(s,o,i.get(s,o)/e.get(s,s));for(r=0;r<s;r++)for(o=0;o<n;o++)i.set(r,o,i.get(r,o)-i.get(s,o)*e.get(r,s))}return i}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let o=0;o<r;o++)e*=t.get(o,o);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,o=new P(e,r);for(let s=0;s<e;s++)for(let e=0;e<r;e++)s>e?o.set(s,e,t.get(s,e)):s===e?o.set(s,e,1):o.set(s,e,0);return o}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,o=new P(e,r);for(let s=0;s<e;s++)for(let e=0;e<r;e++)s<=e?o.set(s,e,t.get(s,e)):o.set(s,e,0);return o}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function j(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class z{constructor(t){let e,r,o,s,n=(t=N.checkMatrix(t)).clone(),i=t.rows,h=t.columns,l=new Float64Array(h);for(o=0;o<h;o++){let t=0;for(e=o;e<i;e++)t=j(t,n.get(e,o));if(0!==t){for(n.get(o,o)<0&&(t=-t),e=o;e<i;e++)n.set(e,o,n.get(e,o)/t);for(n.set(o,o,n.get(o,o)+1),r=o+1;r<h;r++){for(s=0,e=o;e<i;e++)s+=n.get(e,o)*n.get(e,r);for(s=-s/n.get(o,o),e=o;e<i;e++)n.set(e,r,n.get(e,r)+s*n.get(e,o))}}l[o]=-t}this.QR=n,this.Rdiag=l}solve(t){t=P.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let o,s,n,i,h=t.columns,l=t.clone(),u=e.columns;for(n=0;n<u;n++)for(s=0;s<h;s++){for(i=0,o=n;o<r;o++)i+=e.get(o,n)*l.get(o,s);for(i=-i/e.get(n,n),o=n;o<r;o++)l.set(o,s,l.get(o,s)+i*e.get(o,n))}for(n=u-1;n>=0;n--){for(s=0;s<h;s++)l.set(n,s,l.get(n,s)/this.Rdiag[n]);for(o=0;o<n;o++)for(s=0;s<h;s++)l.set(o,s,l.get(o,s)-l.get(n,s)*e.get(o,n))}return l.subMatrix(0,u-1,0,h-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,o=r.columns,s=new P(o,o);for(t=0;t<o;t++)for(e=0;e<o;e++)t<e?s.set(t,e,r.get(t,e)):t===e?s.set(t,e,this.Rdiag[t]):s.set(t,e,0);return s}get orthogonalMatrix(){let t,e,r,o,s=this.QR,n=s.rows,i=s.columns,h=new P(n,i);for(r=i-1;r>=0;r--){for(t=0;t<n;t++)h.set(t,r,0);for(h.set(r,r,1),e=r;e<i;e++)if(0!==s.get(r,r)){for(o=0,t=r;t<n;t++)o+=s.get(t,r)*h.get(t,e);for(o=-o/s.get(r,r),t=r;t<n;t++)h.set(t,e,h.get(t,e)+o*s.get(t,r))}}return h}}class F{constructor(t,e={}){if((t=N.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,o=t.columns;const{computeLeftSingularVectors:s=!0,computeRightSingularVectors:n=!0,autoTranspose:i=!1}=e;let h,l=Boolean(s),u=Boolean(n),a=!1;if(r<o)if(i){h=t.transpose(),r=h.rows,o=h.columns,a=!0;let e=l;l=u,u=e}else h=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else h=t.clone();let f=Math.min(r,o),c=Math.min(r+1,o),m=new Float64Array(c),g=new P(r,f),w=new P(o,o),p=new Float64Array(o),d=new Float64Array(r),y=new Float64Array(c);for(let t=0;t<c;t++)y[t]=t;let M=Math.min(r-1,o),b=Math.max(0,Math.min(o-2,r)),x=Math.max(M,b);for(let t=0;t<x;t++){if(t<M){m[t]=0;for(let e=t;e<r;e++)m[t]=j(m[t],h.get(e,t));if(0!==m[t]){h.get(t,t)<0&&(m[t]=-m[t]);for(let e=t;e<r;e++)h.set(e,t,h.get(e,t)/m[t]);h.set(t,t,h.get(t,t)+1)}m[t]=-m[t]}for(let e=t+1;e<o;e++){if(t<M&&0!==m[t]){let o=0;for(let s=t;s<r;s++)o+=h.get(s,t)*h.get(s,e);o=-o/h.get(t,t);for(let s=t;s<r;s++)h.set(s,e,h.get(s,e)+o*h.get(s,t))}p[e]=h.get(t,e)}if(l&&t<M)for(let e=t;e<r;e++)g.set(e,t,h.get(e,t));if(t<b){p[t]=0;for(let e=t+1;e<o;e++)p[t]=j(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<o;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)d[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<o;r++)d[e]+=p[r]*h.get(e,r);for(let e=t+1;e<o;e++){let o=-p[e]/p[t+1];for(let s=t+1;s<r;s++)h.set(s,e,h.get(s,e)+o*d[s])}}if(u)for(let e=t+1;e<o;e++)w.set(e,t,p[e])}}let E=Math.min(o,r+1);if(M<o&&(m[M]=h.get(M,M)),r<E&&(m[E-1]=0),b+1<E&&(p[b]=h.get(b,E-1)),p[E-1]=0,l){for(let t=M;t<f;t++){for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}for(let t=M-1;t>=0;t--)if(0!==m[t]){for(let e=t+1;e<f;e++){let o=0;for(let s=t;s<r;s++)o+=g.get(s,t)*g.get(s,e);o=-o/g.get(t,t);for(let s=t;s<r;s++)g.set(s,e,g.get(s,e)+o*g.get(s,t))}for(let e=t;e<r;e++)g.set(e,t,-g.get(e,t));g.set(t,t,1+g.get(t,t));for(let e=0;e<t-1;e++)g.set(e,t,0)}else{for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}}if(u)for(let t=o-1;t>=0;t--){if(t<b&&0!==p[t])for(let e=t+1;e<o;e++){let r=0;for(let s=t+1;s<o;s++)r+=w.get(s,t)*w.get(s,e);r=-r/w.get(t+1,t);for(let s=t+1;s<o;s++)w.set(s,e,w.get(s,e)+r*w.get(s,t))}for(let e=0;e<o;e++)w.set(e,t,0);w.set(t,t,1)}let S=E-1,v=0,k=Number.EPSILON;for(;E>0;){let t,e;for(t=E-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+k*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===E-2)e=4;else{let r;for(r=E-1;r>=t&&r!==t;r--){let e=(r!==E?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(m[r])<=k*e){m[r]=0;break}}r===t?e=3:r===E-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[E-2];p[E-2]=0;for(let r=E-2;r>=t;r--){let s=j(m[r],e),n=m[r]/s,i=e/s;if(m[r]=s,r!==t&&(e=-i*p[r-1],p[r-1]=n*p[r-1]),u)for(let t=0;t<o;t++)s=n*w.get(t,r)+i*w.get(t,E-1),w.set(t,E-1,-i*w.get(t,r)+n*w.get(t,E-1)),w.set(t,r,s)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let o=t;o<E;o++){let s=j(m[o],e),n=m[o]/s,i=e/s;if(m[o]=s,e=-i*p[o],p[o]=n*p[o],l)for(let e=0;e<r;e++)s=n*g.get(e,o)+i*g.get(e,t-1),g.set(e,t-1,-i*g.get(e,o)+n*g.get(e,t-1)),g.set(e,o,s)}break}case 3:{const e=Math.max(Math.abs(m[E-1]),Math.abs(m[E-2]),Math.abs(p[E-2]),Math.abs(m[t]),Math.abs(p[t])),s=m[E-1]/e,n=m[E-2]/e,i=p[E-2]/e,h=m[t]/e,a=p[t]/e,f=((n+s)*(n-s)+i*i)/2,c=s*i*(s*i);let d=0;0===f&&0===c||(d=f<0?0-Math.sqrt(f*f+c):Math.sqrt(f*f+c),d=c/(f+d));let y=(h+s)*(h-s)+d,M=h*a;for(let e=t;e<E-1;e++){let s=j(y,M);0===s&&(s=Number.MIN_VALUE);let n=y/s,i=M/s;if(e!==t&&(p[e-1]=s),y=n*m[e]+i*p[e],p[e]=n*p[e]-i*m[e],M=i*m[e+1],m[e+1]=n*m[e+1],u)for(let t=0;t<o;t++)s=n*w.get(t,e)+i*w.get(t,e+1),w.set(t,e+1,-i*w.get(t,e)+n*w.get(t,e+1)),w.set(t,e,s);if(s=j(y,M),0===s&&(s=Number.MIN_VALUE),n=y/s,i=M/s,m[e]=s,y=n*p[e]+i*m[e+1],m[e+1]=-i*p[e]+n*m[e+1],M=i*p[e+1],p[e+1]=n*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)s=n*g.get(t,e)+i*g.get(t,e+1),g.set(t,e+1,-i*g.get(t,e)+n*g.get(t,e+1)),g.set(t,e,s)}p[E-2]=y,v+=1;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,u))for(let e=0;e<=S;e++)w.set(e,t,-w.get(e,t));for(;t<S&&!(m[t]>=m[t+1]);){let e=m[t];if(m[t]=m[t+1],m[t+1]=e,u&&t<o-1)for(let r=0;r<o;r++)e=w.get(r,t+1),w.set(r,t+1,w.get(r,t)),w.set(r,t,e);if(l&&t<r-1)for(let o=0;o<r;o++)e=g.get(o,t+1),g.set(o,t+1,g.get(o,t)),g.set(o,t,e);t++}v=0,E--}}if(a){let t=w;w=g,g=t}this.m=r,this.n=o,this.s=m,this.U=g,this.V=w}solve(t){let e=t,r=this.threshold,o=this.s.length,s=P.zeros(o,o);for(let t=0;t<o;t++)Math.abs(this.s[t])<=r?s.set(t,t,0):s.set(t,t,1/this.s[t]);let n=this.U,i=this.rightSingularVectors,h=i.mmul(s),l=i.rows,u=n.rows,a=P.zeros(l,u);for(let t=0;t<l;t++)for(let e=0;e<u;e++){let r=0;for(let s=0;s<o;s++)r+=h.get(t,s)*n.get(e,s);a.set(t,e,r)}return a.mmul(e)}solveForDiagonal(t){return this.solve(P.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,o=t.columns,s=new P(r,this.s.length);for(let n=0;n<r;n++)for(let r=0;r<o;r++)Math.abs(this.s[r])>e&&s.set(n,r,t.get(n,r)/this.s[r]);let n=this.U,i=n.rows,h=n.columns,l=new P(r,i);for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=0;for(let o=0;o<h;o++)r+=s.get(t,o)*n.get(e,o);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let o=0,s=r.length;o<s;o++)r[o]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return P.diag(this.s)}}function $(t,e=!1){return t=N.checkMatrix(t),e?new F(t).inverse():function(t,e,r=!1){return t=N.checkMatrix(t),e=N.checkMatrix(e),r?new F(t).solve(e):t.isSquare()?new V(t).solve(e):new z(t).solve(e)}(t,P.eye(t.rows))}const _=(t,e)=>{const{normPoints:r,param:o}=D(t),{normPoints:s,param:n}=D(e),i=s.length,h=[],l=[];for(let t=0;t<i;t++){const e=[r[t][0],r[t][1],1,0,0,0,-r[t][0]*s[t][0],-r[t][1]*s[t][0]],o=[0,0,0,r[t][0],r[t][1],1,-r[t][0]*s[t][1],-r[t][1]*s[t][1]];h.push(e),h.push(o),l.push([s[t][0]]),l.push([s[t][1]])}try{const t=new P(h),e=new P(l),r=t.transpose(),s=r.mmul(t),i=r.mmul(e),u=$(s).mmul(i).to1DArray();return H(u,o,n)}catch(t){return null}},D=t=>{let e=0,r=0;for(let o=0;o<t.length;o++)e+=t[o][0],r+=t[o][1];let o=e/t.length,s=r/t.length,n=0;for(let e=0;e<t.length;e++){const r=t[e][0]-o,i=t[e][1]-s;n+=Math.sqrt(r*r+i*i)}let i=Math.sqrt(2)*t.length/n;const h=[];for(let e=0;e<t.length;e++)h.push([(t[e][0]-o)*i,(t[e][1]-s)*i]);return{normPoints:h,param:{meanX:o,meanY:s,s:i}}},H=(t,e,r)=>{const o=r.s*r.meanX,s=r.s*r.meanY,n=[t[0]+o*t[6],t[1]+o*t[7],(t[0]+o*t[6])*-e.meanX+(t[1]+o*t[7])*-e.meanY+(t[2]+o)/e.s,t[3]+s*t[6],t[4]+s*t[7],(t[3]+s*t[6])*-e.meanX+(t[4]+s*t[7])*-e.meanY+(t[5]+s)/e.s,r.s*t[6],r.s*t[7],r.s*t[6]*-e.meanX+r.s*t[7]*-e.meanY+r.s/e.s];for(let t=0;t<9;t++)n[t]=n[t]/n[8];return n},U=t=>{const{srcPoints:e,dstPoints:r,keyframe:o,quickMode:s}=t,h=[[0,0],[o.width,0],[o.width,o.height],[0,o.height]];if(e.length<4)return null;const l=Math.min(10,e.length),u=n(),a=[];for(let t=0;t<e.length;t++)a[t]=t;u.arrayShuffle({arr:a,sampleSize:a.length});const f=s?10:20,c=2*f;let m=0;const g=[];for(;m<c&&g.length<f;){if(m+=1,u.arrayShuffle({arr:a,sampleSize:4}),w=e[a[0]],p=e[a[1]],d=e[a[2]],y=e[a[3]],M=r[a[0]],b=r[a[1]],x=r[a[2]],E=r[a[3]],i(w,p,d)>0!=i(M,b,x)>0||i(p,d,y)>0!=i(b,x,E)>0||i(d,y,w)>0!=i(x,E,M)>0||i(y,w,p)>0!=i(E,M,b)>0)continue;const t=_([e[a[0]],e[a[1]],e[a[2]],e[a[3]]],[r[a[0]],r[a[1]],r[a[2]],r[a[3]]]);null!==t&&Y({H:t,testPoints:h})&&g.push(t)}var w,p,d,y,M,b,x,E;if(0===g.length)return null;const S=[];for(let t=0;t<g.length;t++)S.push({H:g[t],cost:0});let v=l;for(let t=0;t<e.length&&S.length>2;t+=v){v=Math.min(l,e.length-t);let o=t+v;for(let s=0;s<S.length;s++)for(let n=t;n<o;n++){const t=O({H:S[s].H,srcPoint:e[n],dstPoint:r[n],oneOverScale2:1e4});S[s].cost+=t}S.sort(((t,e)=>t.cost-e.cost)),S.splice(-Math.floor((S.length+1)/2))}let k=null;for(let t=0;t<S.length;t++){const e=X({inH:S[t].H});if(L({H:e,testPoints:h,keyframe:o})){k=e;break}}return k},L=({H:t,testPoints:e,keyframe:r})=>{const o=h(t,1e-5);if(null===o)return!1;const s=[];for(let t=0;t<e.length;t++)s.push(l(e[t],o));return!(((t,e,r,o)=>{const s=u(e,t),n=u(r,t),i=u(o,t),h=u(e,r),l=u(o,r),f=a(s,n),c=a(n,i),m=a(s,i),g=a(h,l);return Math.min(Math.min(Math.min(f,c),m),g)})(s[0],s[1],s[2],s[3])<r.width*r.height*1e-4||!((t,e,r,o)=>{const s=i(t,e,r)<=0;return i(e,r,o)<=0===s&&i(r,o,t)<=0===s&&i(o,t,e)<=0===s})(s[0],s[1],s[2],s[3]))},X=({inH:t})=>{const e=1/t[8],r=[];for(let o=0;o<8;o++)r[o]=t[o]*e;return r[8]=1,r},O=({H:t,srcPoint:e,dstPoint:r,oneOverScale2:o})=>{const s=l(e,t),n=[s[0]-r[0],s[1]-r[1]];return Math.log(1+(n[0]*n[0]+n[1]*n[1])*o)},Y=({H:t,testPoints:e})=>{const r=[];for(let o=0;o<e.length;o++)r[o]=l(e[o],t);for(let t=0;t<e.length;t++){const l=t,f=(t+1)%e.length,c=(t+2)%e.length;if(o=e[l],s=e[f],n=e[c],h=r[l],u=r[f],a=r[c],i(o,s,n)>0!=i(h,u,a)>0)return!1}var o,s,n,h,u,a;return!0},G=class{constructor(e=[],r=t){if(this.data=e,this.length=this.data.length,this.compare=r,this.length>0)for(let t=(this.length>>1)-1;t>=0;t--)this._down(t)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:e,compare:r}=this,o=e[t];for(;t>0;){const s=t-1>>1,n=e[s];if(r(o,n)>=0)break;e[t]=n,t=s}e[t]=o}_down(t){const{data:e,compare:r}=this,o=this.length>>1,s=e[t];for(;t<o;){let o=1+(t<<1),n=e[o];const i=o+1;if(i<this.length&&r(e[i],n)<0&&(o=i,n=e[i]),r(n,s)>=0)break;e[t]=n,t=o}e[t]=s}}.default,Q=({keyframe:t,querypoints:r,querywidth:s,queryheight:n,debugMode:i})=>{let u={};const a=[];for(let o=0;o<r.length;o++){const s=r[o],n=s.maxima?t.maximaPoints:t.minimaPoints;if(0===n.length)continue;const i=s.maxima?t.maximaPointsCluster.rootNode:t.minimaPointsCluster.rootNode,h=[],l=new G([],((t,e)=>t.d-e.d));W({node:i,keypoints:n,querypoint:s,queue:l,keypointIndexes:h,numPop:0});let u=-1,f=Number.MAX_SAFE_INTEGER,c=Number.MAX_SAFE_INTEGER;for(let t=0;t<h.length;t++){const r=n[h[t]],o=e({v1:r.descriptors,v2:s.descriptors});o<f?(c=f,f=o,u=h[t]):o<c&&(c=o)}-1!==u&&(c===Number.MAX_SAFE_INTEGER||1*f/c<.7)&&a.push({querypoint:s,keypoint:n[u]})}if(i&&(u.matches=a),a.length<6)return{debugExtra:u};const f=o({keywidth:t.width,keyheight:t.height,querywidth:s,queryheight:n,matches:a});i&&(u.houghMatches=f);const c=U({srcPoints:f.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:f.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===c)return{debugExtra:u};const m=J({H:c,matches:f,threshold:3});if(i&&(u.inlierMatches=m),m.length<6)return{debugExtra:u};const g=h(c,1e-5),w=[];for(let o=0;o<r.length;o++){const s=r[o],n=l([s.x,s.y],g);let i=-1,h=Number.MAX_SAFE_INTEGER,u=Number.MAX_SAFE_INTEGER;const a=s.maxima?t.maximaPoints:t.minimaPoints;for(let t=0;t<a.length;t++){const r=a[t];if((r.x-n[0])*(r.x-n[0])+(r.y-n[1])*(r.y-n[1])>100)continue;const o=e({v1:r.descriptors,v2:s.descriptors});o<h?(u=h,h=o,i=t):o<u&&(u=o)}-1!==i&&(u===Number.MAX_SAFE_INTEGER||1*h/u<.7)&&w.push({querypoint:s,keypoint:a[i]})}i&&(u.matches2=w);const p=o({keywidth:t.width,keyheight:t.height,querywidth:s,queryheight:n,matches:w});i&&(u.houghMatches2=p);const d=U({srcPoints:p.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:p.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===d)return{debugExtra:u};const y=J({H:d,matches:p,threshold:3});return i&&(u.inlierMatches2=y),{H:d,matches:y,debugExtra:u}},W=({node:t,keypoints:r,querypoint:o,queue:s,keypointIndexes:n,numPop:i})=>{if(t.leaf){for(let e=0;e<t.pointIndexes.length;e++)n.push(t.pointIndexes[e]);return}const h=[];for(let s=0;s<t.children.length;s++){const n=t.children[s].centerPointIndex,i=e({v1:r[n].descriptors,v2:o.descriptors});h.push(i)}let l=Number.MAX_SAFE_INTEGER;for(let e=0;e<t.children.length;e++)l=Math.min(l,h[e]);for(let e=0;e<t.children.length;e++)h[e]!==l&&s.push({node:t.children[e],d:h[e]});for(let e=0;e<t.children.length;e++)h[e]===l&&W({node:t.children[e],keypoints:r,querypoint:o,queue:s,keypointIndexes:n,numPop:i});if(i<8&&s.length>0){const{node:t,d:e}=s.pop();W({node:t,keypoints:r,querypoint:o,queue:s,keypointIndexes:n,numPop:i+=1})}},J=t=>{const{H:e,matches:r,threshold:o}=t,s=o*o,n=[];for(let t=0;t<r.length;t++){const o=r[t].querypoint,i=r[t].keypoint,h=l([i.x,i.y],e);(h[0]-o.x)*(h[0]-o.x)+(h[1]-o.y)*(h[1]-o.y)<=s&&n.push(r[t])}return n};class B{constructor(t,e,r=!1){this.queryWidth=t,this.queryHeight=e,this.debugMode=r}matchDetection(t,e){let r={frames:[]},o=null;for(let s=0;s<t.length;s++){const{H:n,matches:i,debugExtra:h}=Q({keyframe:t[s],querypoints:e,querywidth:this.queryWidth,queryheight:this.queryHeight,debugMode:this.debugMode});r.frames.push(h),n&&(null===o||o.matches.length<i.length)&&(o={keyframeIndex:s,H:n,matches:i})}if(null===o)return{keyframeIndex:-1,debugExtra:r};const s=[],n=[],i=t[o.keyframeIndex];for(let t=0;t<o.matches.length;t++){const e=o.matches[t].querypoint,r=o.matches[t].keypoint;s.push({x:e.x,y:e.y}),n.push({x:(r.x+.5)/i.scale,y:(r.y+.5)/i.scale,z:0})}return{screenCoords:s,worldCoords:n,keyframeIndex:o.keyframeIndex,debugExtra:r}}}const K=(t,e,r,o)=>({x:t[0][0]*e+t[0][1]*r+t[0][3],y:t[1][0]*e+t[1][1]*r+t[1][3],z:t[2][0]*e+t[2][1]*r+t[2][3]}),Z={buildModelViewProjectionTransform:(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],applyModelViewProjectionTransform:K,computeScreenCoordiate:(t,e,r,o)=>{const{x:s,y:n,z:i}=K(t,e,r);return{x:s/i,y:n/i}}},{normalizePoints:tt,applyModelViewProjectionTransform:et,buildModelViewProjectionTransform:rt,computeScreenCoordiate:ot}=Z;let st=[[],[],[]],nt=[[],[]],it=[[],[],[]];const ht=({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:o,inlierProb:s})=>{const n=s<1;let i=t,h=0,l=0,u=new Array(r.length),a=new Array(r.length),f=new Array(r.length),c=new Array(r.length);for(let t=0;t<=10;t++){const m=rt(e,i);for(let t=0;t<r.length;t++){const e=ot(m,r[t].x,r[t].y,r[t].z),s=o[t].x-e.x,n=o[t].y-e.y;f[t]=s,c[t]=n,u[t]=s*s+n*n}let g;if(l=0,n){const t=Math.max(3,Math.floor(r.length*s)-1);for(let t=0;t<r.length;t++)a[t]=u[t];a.sort(((t,e)=>t-e)),g=Math.max(4*a[t],16);for(let t=0;t<r.length;t++)a[t]>g?l+=g/6:l+=g/6*(1-(1-a[t]/g)*(1-a[t]/g)*(1-a[t]/g))}else for(let t=0;t<r.length;t++)l+=u[t];if(l/=r.length,l<.1)break;if(t>0&&l/h>.99)break;if(10===t)break;h=l;const w=[],p=[];for(let t=0;t<r.length;t++){if(n&&u[t]>g)continue;const o=at({modelViewProjectionTransform:m,modelViewTransform:i,projectionTransform:e,worldCoord:r[t]});if(n){const e=(1-u[t]/g)*(1-u[t]/g);for(let t=0;t<2;t++)for(let r=0;r<6;r++)o[t][r]*=e;w.push([f[t]*e]),w.push([c[t]*e])}else w.push([f[t]]),w.push([c[t]]);for(let t=0;t<o.length;t++)p.push(o[t])}const d=ut({dU:w,J_U_S:p});if(null===d)break;i=lt({modelViewTransform:i,dS:d})}return{modelViewTransform:i,err:l}},lt=({modelViewTransform:t,dS:e})=>{let r,o,s,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];n<1e-6?(r=1,o=0,s=0,n=0):(n=Math.sqrt(n),r=e[0]/n,o=e[1]/n,s=e[2]/n);const i=Math.cos(n),h=Math.sin(n),l=1-i;st[0][0]=r*r*l+i,st[0][1]=r*o*l-s*h,st[0][2]=r*s*l+o*h,st[0][3]=e[3],st[1][0]=o*r*l+s*h,st[1][1]=o*o*l+i,st[1][2]=o*s*l-r*h,st[1][3]=e[4],st[2][0]=s*r*l-o*h,st[2][1]=s*o*l+r*h,st[2][2]=s*s*l+i,st[2][3]=e[5];const u=[[],[],[]];for(let e=0;e<3;e++){for(let r=0;r<4;r++)u[e][r]=t[e][0]*st[0][r]+t[e][1]*st[1][r]+t[e][2]*st[2][r];u[e][3]+=t[e][3]}return u},ut=({dU:t,J_U_S:e})=>{const r=new P(e),o=new P(t),s=r.transpose(),n=s.mmul(r),i=s.mmul(o);let h;try{h=$(n)}catch(t){return null}return h.mmul(i).to1DArray()},at=({modelViewProjectionTransform:t,modelViewTransform:e,projectionTransform:r,worldCoord:o})=>{const s=e,{x:n,y:i,z:h}=o,l=et(t,n,i,h),u=l.z*l.z;nt[0][0]=r[0][0]*l.z/u,nt[0][1]=r[0][1]*l.z/u,nt[0][2]=(r[0][2]*l.z-r[2][2]*l.x)/u,nt[1][0]=r[1][0]*l.z/u,nt[1][1]=r[1][1]*l.z/u,nt[1][2]=(r[1][2]*l.z-r[2][2]*l.y)/u,it[0][0]=s[0][2]*i,it[0][1]=-s[0][2]*n,it[0][2]=s[0][1]*n-s[0][0]*i,it[0][3]=s[0][0],it[0][4]=s[0][1],it[0][5]=s[0][2],it[1][0]=s[1][2]*i,it[1][1]=-s[1][2]*n,it[1][2]=s[1][1]*n-s[1][0]*i,it[1][3]=s[1][0],it[1][4]=s[1][1],it[1][5]=s[1][2],it[2][0]=s[2][2]*i,it[2][1]=-s[2][2]*n,it[2][2]=s[2][1]*n-s[2][0]*i,it[2][3]=s[2][0],it[2][4]=s[2][1],it[2][5]=s[2][2];const a=[[],[]];for(let t=0;t<2;t++)for(let e=0;e<6;e++){a[t][e]=0;for(let r=0;r<3;r++)a[t][e]+=nt[t][r]*it[r][e]}return a};class ft{constructor(t){this.projectionTransform=t}estimate({screenCoords:t,worldCoords:e}){return(({screenCoords:t,worldCoords:e,projectionTransform:r})=>{const o=_(e.map((t=>[t.x,t.y])),t.map((t=>[t.x,t.y]))),s=new P([[o[0],o[1],o[2]],[o[3],o[4],o[5]],[o[6],o[7],o[8]]]),n=$(new P(r)).mmul(s).to1DArray(),i=Math.sqrt(n[0]*n[0]+n[3]*n[3]+n[6]*n[6]),h=Math.sqrt(n[1]*n[1]+n[4]*n[4]+n[7]*n[7]),l=(i+h)/2,u=[];u[0]=n[0]/i,u[3]=n[3]/i,u[6]=n[6]/i,u[1]=n[1]/h,u[4]=n[4]/h,u[7]=n[7]/h,u[2]=u[3]*u[7]-u[6]*u[4],u[5]=u[6]*u[1]-u[0]*u[7],u[8]=u[0]*u[4]-u[1]*u[3];const a=Math.sqrt(u[2]*u[2]+u[5]*u[5]+u[8]*u[8]);u[2]/=a,u[5]/=a,u[8]/=a;const f=[];return f[0]=n[2]/l,f[1]=n[5]/l,f[2]=n[8]/l,[[u[0],u[1],u[2],f[0]],[u[3],u[4],u[5],f[1]],[u[6],u[7],u[8],f[2]]]})({screenCoords:t,worldCoords:e,projectionTransform:this.projectionTransform})}refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r}){return(({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:o})=>{let s=0,n=0;for(let t=0;t<r.length;t++)s+=r[t].x,n+=r[t].y;s/=r.length,n/=r.length;const i=[];for(let t=0;t<r.length;t++)i.push({x:r[t].x-s,y:r[t].y-n,z:r[t].z});const h=[[],[],[]];for(let e=0;e<3;e++)for(let r=0;r<3;r++)h[e][r]=t[e][r];h[0][3]=t[0][0]*s+t[0][1]*n+t[0][3],h[1][3]=t[1][0]*s+t[1][1]*n+t[1][3],h[2][3]=t[2][0]*s+t[2][1]*n+t[2][3];const l=[1,.8,.6,.4,0];let u=h,a=null;for(let t=0;t<l.length;t++){const r=ht({initialModelViewTransform:u,projectionTransform:e,worldCoords:i,screenCoords:o,inlierProb:l[t]});if(u=r.modelViewTransform,r.err<5){a=u;break}}return null===a?null:(a[0][3]=a[0][3]-a[0][0]*s-a[0][1]*n,a[1][3]=a[1][3]-a[1][0]*s-a[1][1]*n,a[2][3]=a[2][3]-a[2][0]*s-a[2][1]*n,a)})({initialModelViewTransform:t,worldCoords:e,screenCoords:r,projectionTransform:this.projectionTransform})}}let ct=null,mt=null,gt=!1,wt=null,pt=null;onmessage=t=>{const{data:e}=t;if("setup"===e.type)ct=e.projectionTransform,mt=e.matchingDataList,gt=e.debugMode,wt=new B(e.inputWidth,e.inputHeight,gt),pt=new ft(e.projectionTransform);else if("match"===e.type){const t=e.targetIndexes;let r=-1,o=null,s=null;for(let n=0;n<t.length;n++){const i=t[n],{keyframeIndex:h,screenCoords:l,worldCoords:u,debugExtra:a}=wt.matchDetection(mt[i],e.featurePoints);if(s=a,-1!==h){const t=pt.estimate({screenCoords:l,worldCoords:u});t&&(r=i,o=t);break}}postMessage({type:"matchDone",targetIndex:r,modelViewTransform:o,debugExtra:s})}else if("trackUpdate"===e.type){const{modelViewTransform:t,worldCoords:r,screenCoords:o}=e,s=pt.refineEstimate({initialModelViewTransform:t,worldCoords:r,screenCoords:o});postMessage({type:"trackUpdateDone",modelViewTransform:s})}}})();',n.p+"controller.worker.prod.js")};const zD=(t,e,n,r)=>{const{x:s,y:i,z:a}=((t,e,n,r)=>({x:t[0][0]*e+t[0][1]*n+t[0][3],y:t[1][0]*e+t[1][1]*n+t[1][3],z:t[2][0]*e+t[2][1]*n+t[2][3]}))(t,e,n);return{x:s/a,y:i/a}};class PD{constructor(t,e,n,r,s,i=!1){this.markerDimensions=t,this.trackingDataList=e,this.projectionTransform=n,this.debugMode=i,this.trackingKeyframeList=[];for(let t=0;t<e.length;t++)this.trackingKeyframeList.push(e[t][1]);let a=0;for(let t=0;t<this.trackingKeyframeList.length;t++)a=Math.max(a,this.trackingKeyframeList[t].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let t=0;t<this.trackingKeyframeList.length;t++){const{featurePoints:e,imagePixels:n,imageProperties:r}=this._prebuild(this.trackingKeyframeList[t],a);this.featurePointsListT[t]=e,this.imagePixelsListT[t]=n,this.imagePropertiesListT[t]=r}this.kernelCaches={}}dummyRun(t){let e=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(t,e,n)}track(t,e,n){let r={};const s=(x=this.projectionTransform,y=e,[[x[0][0]*y[0][0]+x[0][2]*y[2][0],x[0][0]*y[0][1]+x[0][2]*y[2][1],x[0][0]*y[0][2]+x[0][2]*y[2][2],x[0][0]*y[0][3]+x[0][2]*y[2][3]],[x[1][1]*y[1][0]+x[1][2]*y[2][0],x[1][1]*y[1][1]+x[1][2]*y[2][1],x[1][1]*y[1][2]+x[1][2]*y[2][2],x[1][1]*y[1][3]+x[1][2]*y[2][3]],[y[2][0],y[2][1],y[2][2],y[2][3]]]),i=this._buildAdjustedModelViewTransform(s),a=(this.markerDimensions[n][0],this.markerDimensions[n][1],this.trackingKeyframeList[n].width,this.trackingKeyframeList[n].height,this.featurePointsListT[n]),o=this.imagePixelsListT[n],l=this.imagePropertiesListT[n],u=this._computeProjection(i,t,n),{matchingPointsT:h,simT:c}=this._computeMatching(a,o,l,u),d=h.arraySync(),p=c.arraySync(),f=this.trackingKeyframeList[n],m=[],g=[],b=[];var x,y;for(let t=0;t<d.length;t++)if(p[t]>.8&&t<f.points.length){b.push(t);const e=zD(s,d[t][0],d[t][1]);g.push(e),m.push({x:f.points[t].x/f.scale,y:f.points[t].y/f.scale,z:0})}return this.debugMode&&(r={projectedImage:u.arraySync(),matchingPoints:h.arraySync(),goodTrack:b,trackedPoints:g}),i.dispose(),u.dispose(),h.dispose(),c.dispose(),{worldCoords:m,screenCoords:g,debugExtra:r}}_computeMatching(t,e,n,r){const s=r.shape[0],i=r.shape[1],a=t.shape[0];if(!this.kernelCaches.computeMatching){const t={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[a,441],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t    int searchOffsetY = searchOffsetIndex / 21 * 1;\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - 10;\n\t    int sy = sCenterY + searchOffsetY - 10;\n\n\t    if (sx < 6 || sx >= (${i} - 6) || sy < 6 || sy >= (${s} - 6)) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < 13; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < 13; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - 6;\n\t\t  int fy2 = sCenterY + templateOffsetY - 6;\n\n\t\t  int sx2 = sx + templateOffsetX - 6;\n\t\t  int sy2 = sy + templateOffsetY - 6;\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(13 * 13);\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},e={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[a,2],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / 441;\n\t    int searchOffsetIndex = imod(maxIndex, 441);\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - 10) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / 21 * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - 10) / markerScale);\n\t    }\n\t  }\n\t"},n={variableNames:["sims","maxIndex"],outputShape:[a],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"};this.kernelCaches.computeMatching=[t,e,n]}return zi((()=>{const s=this.kernelCaches.computeMatching,i=this._compileAndRun(s[0],[t,e,n,r]),a=i.argMax(1);return{matchingPointsT:this._compileAndRun(s[1],[t,n,a]),simT:this._compileAndRun(s[2],[i,a])}}))}_computeProjection(t,e,n){const r=this.trackingKeyframeList[n].width,s=this.trackingKeyframeList[n].height,i=this.trackingKeyframeList[n].scale,a=r+"-"+s+"-"+i;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[a]){const t={variableNames:["M","pixel"],outputShape:[s,r],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${i});\n\t      float x = float(coords[1]) / float(${i});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`};this.kernelCaches.computeProjection[a]=t}return zi((()=>{const n=this.kernelCaches.computeProjection[a];return this._compileAndRun(n,[t,e])}))}_buildAdjustedModelViewTransform(t){return zi((()=>{let e=[];for(let n=0;n<t.length;n++){e.push([]);for(let r=0;r<t[n].length;r++)e[n].push(t[n][r]/1e3)}return ks(e,[3,4])}))}_prebuild(t,e){return zi((()=>{const n=t.scale,r=[];for(let s=0;s<e;s++)s<t.points.length?r.push([t.points[s].x/n,t.points[s].y/n]):r.push([-1,-1]);const s=ks(t.data,[t.width*t.height]),i=ks([t.width,t.height,t.scale],[3]);return{featurePoints:ks(r,[r.length,2],"float32"),imagePixels:s,imageProperties:i}}))}_compileAndRun(t,e){const n=Wi().compileAndRun(t,e);return Oi().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}}const BD=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],UD=[];for(let t=0;t<BD.length;t++){const e=BD[t].sigma;for(let n=0;n<BD[t].points.length;n++){const r=BD[t].points[n];UD.push([e,r[0],r[1]])}}const WD=(UD.length-1)*UD.length/2;class VD{constructor(t,e,n=!1){this.debugMode=n,this.width=t,this.height=e;let r=0;for(;t>=8&&e>=8&&(t/=2,e/=2,r++,5!==r););this.numOctaves=r,this.tensorCaches={},this.kernelCaches={}}detectImageData(t){const e=new Uint8ClampedArray(4*t.length);for(let n=0;n<t.length;n++)e[4*n]=t[n],e[4*n+1]=t[n],e[4*n+2]=t[n],e[4*n+3]=255;const n=new ImageData(e,this.width,this.height);return this.detect(n)}detect(t){let e=null;const n=[];for(let e=0;e<this.numOctaves;e++){let r,s;r=0===e?this._applyFilter(t):this._downsampleBilinear(n[e-1][n[e-1].length-1]),s=this._applyFilter(r),n.push([r,s])}const r=[];for(let t=0;t<this.numOctaves;t++){let e=this._differenceImageBinomial(n[t][0],n[t][1]);r.push(e)}const s=[];for(let t=1;t<this.numOctaves-1;t++){const e=this._buildExtremas(r[t-1],r[t],r[t+1]);s.push(e)}const i=this._applyPrune(s),a=this._computeLocalization(i,r),o=this._computeOrientationHistograms(a,n),l=this._smoothHistograms(o),u=this._computeExtremaAngles(l),h=this._computeExtremaFreak(n,a,u),c=this._computeFreakDescriptors(h),d=a.arraySync(),p=u.arraySync(),f=c.arraySync();this.debugMode&&(e={pyramidImages:n.map((t=>t.map((t=>t.arraySync())))),dogPyramidImages:r.map((t=>t?t.arraySync():null)),extremasResults:s.map((t=>t.arraySync())),extremaAngles:u.arraySync(),prunedExtremas:i,localizedExtremas:a.arraySync()}),n.forEach((t=>t.forEach((t=>t.dispose())))),r.forEach((t=>t&&t.dispose())),s.forEach((t=>t.dispose())),a.dispose(),o.dispose(),l.dispose(),u.dispose(),h.dispose(),c.dispose();const m=[];for(let t=0;t<d.length;t++){if(0==d[t][0])continue;const e=[];for(let n=0;n<f[t].length;n+=4){let r=16777216*f[t][n]+65536*f[t][n+1]+256*f[t][n+2]+f[t][n+3];e.push(r)}const n=d[t][1],r=d[t][2],s=d[t][3]*Math.pow(2,n)+Math.pow(2,n-1)-.5,i=r*Math.pow(2,n)+Math.pow(2,n-1)-.5,a=Math.pow(2,n);m.push({maxima:d[t][0]>0,x:s,y:i,scale:a,angle:p[t],descriptors:e})}return{featurePoints:m,debugExtra:e}}_computeFreakDescriptors(t){if(!this.tensorCaches.computeFreakDescriptors){const e=[],n=[];for(let r=0;r<t.shape[1];r++)for(let s=r+1;s<t.shape[1];s++)e.push(r),n.push(s);const r=ks(e,[e.length]).cast("int32"),s=ks(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:Bi(Ho([r,s],1))}}const{positionT:e}=this.tensorCaches.computeFreakDescriptors,n=Math.ceil(WD/8);if(!this.kernelCaches.computeFreakDescriptors){const e={variableNames:["freak","p"],outputShape:[t.shape[0],n],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int descIndex = coords[1] * 8;\n\n\t    int sum = 0;\n\t    for (int i = 0; i < 8; i++) {\n\t      if (descIndex + i >= ${WD}) {\n\t\tcontinue;\n\t      }\n\n\t      int p1 = int(getP(descIndex + i, 0));\n\t      int p2 = int(getP(descIndex + i, 1));\n\n\t      float v1 = getFreak(featureIndex, p1);\n\t      float v2 = getFreak(featureIndex, p2);\n\n\t      if (v1 < v2 + 0.01) {\n\t        sum += int(pow(2.0, float(7 - i)));\n\t      }\n\t    }\n\t    setOutput(float(sum));\n\t  }\n\t`};this.kernelCaches.computeFreakDescriptors=[e]}return zi((()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(n,[t,e],"int32")}))}_computeExtremaFreak(t,e,n){this.tensorCaches._computeExtremaFreak||zi((()=>{const t=ks(UD);this.tensorCaches._computeExtremaFreak={freakPointsT:Bi(t)}}));const{freakPointsT:r}=this.tensorCaches._computeExtremaFreak,s=[];for(let e=1;e<t.length;e++)s.push(t[e][1]);if(!this.kernelCaches._computeExtremaFreak){const n=[];for(let e=1;e<t.length;e++)n.push("image"+e);let r="float getPixel(int octave, int y, int x) {";for(let e=1;e<t.length;e++)r+=`\n\t  if (octave == ${e}) {\n\t    return getImage${e}(y, x);\n\t  }\n\t`;r+="}";const s={variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[e.shape[0],UD.length],userCode:`\n\t  ${r}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int freakIndex = coords[1];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    float inputY = getExtrema(featureIndex, 2);\n\t    float inputX = getExtrema(featureIndex, 3);\n\t    float inputAngle = getAngles(featureIndex);\n            float cos = 7. * cos(inputAngle);\n            float sin = 7. * sin(inputAngle);\n\n\t    float yp = inputY + freakX * sin + freakY * cos;\n\t    float xp = inputX + freakX * cos + freakY * -sin;\n\n\t    int x0 = int(floor(xp));\n\t    int x1 = x0 + 1;\n\t    int y0 = int(floor(yp));\n\t    int y1 = y0 + 1;\n\n\t    float f1 = getPixel(octave, y0, x0);\n\t    float f2 = getPixel(octave, y0, x1);\n\t    float f3 = getPixel(octave, y1, x0);\n\t    float f4 = getPixel(octave, y1, x1);\n\n\t    float x1f = float(x1);\n\t    float y1f = float(y1);\n\t    float x0f = float(x0);\n\t    float y0f = float(y0);\n\n\t    // ratio for interpolation between four neighbouring points\n\t    float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t    setOutput(value);\n\t  }\n\t`};this.kernelCaches._computeExtremaFreak=[s]}return zi((()=>{const[t]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(t,[...s,e,n,r])}))}_computeExtremaAngles(t){if(!this.kernelCaches.computeExtremaAngles){const e={variableNames:["histogram"],outputShape:[t.shape[0]],userCode:`\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n\t    setOutput(an);\n\t  }\n\t`};this.kernelCaches.computeExtremaAngles=e}return zi((()=>{const e=this.kernelCaches.computeExtremaAngles;return this._compileAndRun(e,[t])}))}_computeOrientationHistograms(t,e){const n=[];for(let t=1;t<e.length;t++)n.push(e[t][1]);this.tensorCaches.orientationHistograms||zi((()=>{const t=Math.ceil(4.5),e=[];for(let n=-t;n<=t;n++)for(let r=-t;r<=t;r++){const t=r*r+n*n;if(t<=20.25){const s=-.05555555555555555*t;let i=.0013888888*(720+s*(720+s*(360+s*(120+s*(30+s*(6+s))))));e.push([n,r,i])}}this.tensorCaches.orientationHistograms={radialPropertiesT:Bi(ks(e,[e.length,3]))}}));const{radialPropertiesT:r}=this.tensorCaches.orientationHistograms;if(!this.kernelCaches.computeOrientationHistograms){const n=[];for(let t=1;t<e.length;t++)n.push("image"+t);let s="float getPixel(int octave, int y, int x) {";for(let t=1;t<e.length;t++)s+=`\n\t  if (octave == ${t}) {\n\t    return getImage${t}(y, x);\n\t  }\n\t`;s+="}";const i={variableNames:[...n,"extrema","radial"],outputShape:[t.shape[0],r.shape[0],2],userCode:`\n\t  ${s}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int radialIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t      \n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * 0.159154943091895;\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`},a={variableNames:["fbinMag"],outputShape:[t.shape[0],36],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${r.shape[0]}; i++) {\n\t      float fbin = getFbinMag(featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`};this.kernelCaches.computeOrientationHistograms=[i,a]}return zi((()=>{const[e,s]=this.kernelCaches.computeOrientationHistograms,i=this._compileAndRun(e,[...n,t,r]);return this._compileAndRun(s,[i])}))}_smoothHistograms(t){if(!this.kernelCaches.smoothHistograms){const e={variableNames:["histogram"],outputShape:[t.shape[0],36],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"};this.kernelCaches.smoothHistograms=e}return zi((()=>{const e=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)t=this._compileAndRun(e,[t]);return t}))}_computeLocalization(t,e){if(!this.kernelCaches.computeLocalization){const n=[];let r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e.length;t++)n.push("image"+t),r+=`\n\t  if (octave == ${t}) {\n\t    return getImage${t}(y, x);\n\t  }\n \t`;r+="}";const s={variableNames:[...n,"extrema"],outputShape:[t.length,3,3],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    float score = getExtrema(featureIndex, 0);\n\t    if (score == 0.0) {\n\t      return;\n\t    }\n\n\t    int dy = coords[1]-1;\n\t    int dx = coords[2]-1;\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\t    setOutput(getPixel(octave, y+dy, x+dx));\n\t  }\n\t`};this.kernelCaches.computeLocalization=[s]}return zi((()=>{const n=this.kernelCaches.computeLocalization[0],r=ks(t,[t.length,t[0].length],"int32"),s=this._compileAndRun(n,[...e.slice(1),r]).arraySync(),i=[];for(let t=0;t<s.length;t++){i.push([]);for(let e=0;e<s[t].length;e++)i[t].push([])}const a=[];for(let e=0;e<t.length;e++)a[e]=[t[e][0],t[e][1],t[e][2],t[e][3]];for(let t=0;t<a.length;t++){if(0===a[t][0])continue;const e=s[t],n=.5*(e[1][2]-e[1][0]),r=.5*(e[2][1]-e[0][1]),i=e[1][2]+e[1][0]-2*e[1][1],o=e[2][1]+e[0][1]-2*e[1][1],l=.25*(e[0][0]+e[2][2]-e[0][2]-e[2][0]),u=i*o-l*l,h=(o*-n+-l*-r)/u,c=(-l*-n+i*-r)/u,d=a[t][2]+c,p=a[t][3]+h;Math.abs(u)<1e-4||(a[t][2]=d,a[t][3]=p)}return ks(a,[a.length,a[0].length],"float32")}))}_applyPrune(t){if(!this.kernelCaches.applyPrune){const e=[];for(let n=0;n<t.length;n++){const r=t[n].shape[0],s=t[n].shape[1],i={variableNames:["extrema"],outputShape:[Math.floor(r/2),Math.floor(s/2)],userCode:"\n\t    void main() {\n\t      ivec2 coords = getOutputCoords();\n\t      int y = coords[0] * 2;\n\t      int x = coords[1] * 2;\n\n\t      float location = 0.0;\n\t      float values = getExtrema(y, x);\n\n\t      if (getExtrema(y+1, x) != 0.0) {\n\t        location = 1.0;\n\t\tvalues = getExtrema(y+1, x);\n\t      }\n\t      else if (getExtrema(y, x+1) != 0.0) {\n\t        location = 2.0;\n\t\tvalues = getExtrema(y, x+1);\n\t      }\n\t      else if (getExtrema(y+1, x+1) != 0.0) {\n\t        location = 3.0;\n\t\tvalues = getExtrema(y+1, x+1);\n\t      }\n\n\t      if (values < 0.0) {\n\t        setOutput(location * -1000.0 + values);\n\t      } else {\n\t        setOutput(location * 1000.0 + values);\n\t      }\n\t    }\n\t  "};e.push(i)}this.kernelCaches.applyPrune={reductionKernels:e}}const e=[],n=[];for(let t=0;t<100;t++){n.push([]),e.push([]);for(let r=0;r<5;r++)n[t].push([0,0,0,0]),e[t].push(0)}zi((()=>{const{reductionKernels:r}=this.kernelCaches.applyPrune;for(let s=0;s<t.length;s++){const i=r[s],a=this._compileAndRun(i,[t[s]]),o=s+1,l=a.arraySync(),u=a.shape[0],h=a.shape[1],c=2*h/10,d=2*u/10;for(let t=0;t<u;t++)for(let r=0;r<h;r++){const s=l[t][r];if(0==s)continue;const i=s%1e3,a=Math.floor(Math.abs(s)/1e3),u=2*r+(2===a||3===a?1:0),h=2*t+(1===a||3===a?1:0),p=Math.floor(u/c),f=10*Math.floor(h/d)+p,m=Math.abs(i);let g=5;for(;g>=1&&m>e[f][g-1];)g-=1;if(g<5){for(let t=4;t>=g+1;t--)e[f][t]=e[f][t-1],n[f][t][0]=n[f][t-1][0],n[f][t][1]=n[f][t-1][1],n[f][t][2]=n[f][t-1][2],n[f][t][3]=n[f][t-1][3];e[f][g]=m,n[f][g][0]=i,n[f][g][1]=o,n[f][g][2]=h,n[f][g][3]=u}}}}));const r=[];for(let t=0;t<100;t++)for(let e=0;e<5;e++)r.push(n[t][e]);return r}_buildExtremas(t,e,n){const r=e.shape[0],s=e.shape[1],i="w"+s;if(this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),!this.kernelCaches.buildExtremas[i]){const t={variableNames:["image0","image1","image2"],outputShape:[r,s],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    float value = getImage1(y, x);\n\n\t    // Step 1: find local maxima/minima\n\t    if (value * value < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (y < 7 || y > ${r-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (x < 7 || x > ${s-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    bool isMin = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        float value0 = getImage0(y+dy, x+dx);\n\t        float value1 = getImage1(y+dy, x+dx);\n\t        float value2 = getImage2(y+dy, x+dx);\n\n\t\tif (value < value0 || value < value1 || value < value2) {\n\t\t  isMax = false;\n\t\t}\n\t\tif (value > value0 || value > value1 || value > value2) {\n\t\t  isMin = false;\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score and reject based on threshold\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    setOutput(getImage1(y,x));\n\t  }\n\t`};this.kernelCaches.buildExtremas[i]=t}return zi((()=>{const r=this.kernelCaches.buildExtremas[i];return t=this._downsampleBilinear(t),n=this._upsampleBilinear(n,e),this._compileAndRun(r,[t,e,n])}))}_differenceImageBinomial(t,e){return zi((()=>t.sub(e)))}_applyFilter(t){const e=t.shape[0],n=t.shape[1],r="w"+n;if(this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),!this.kernelCaches.applyFilter[r]){const t={variableNames:["p"],outputShape:[e,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], coords[1]-2);\n\t    sum += getP(coords[0], coords[1]-1) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], coords[1]+1) * 4.;\n\t    sum += getP(coords[0], coords[1]+2);\n\t    setOutput(sum);\n\t  }\n\t"},s={variableNames:["p"],outputShape:[e,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0]-2, coords[1]);\n\t    sum += getP(coords[0]-1, coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0]+1, coords[1]) * 4.;\n\t    sum += getP(coords[0]+2, coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.applyFilter[r]=[t,s]}return zi((()=>{const[e,n]=this.kernelCaches.applyFilter[r],s=this._compileAndRun(e,[t]);return this._compileAndRun(n,[s])}))}_upsampleBilinear(t,e){t.shape[0];const n="w"+t.shape[1];if(this.kernelCaches.upsampleBilinear||(this.kernelCaches.upsampleBilinear={}),!this.kernelCaches.upsampleBilinear[n]){const t={variableNames:["p"],outputShape:[e.shape[0],e.shape[1]],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int j = coords[0];\n\t    int i = coords[1];\n\n\t    float sj = 0.5 * float(j) - 0.25; \n\t    float si = 0.5 * float(i) - 0.25;\n\n\t    float sj0 = floor(sj);\n\t    float sj1 = ceil(sj);\n\t    float si0 = floor(si);\n\t    float si1 = ceil(si);\n\n\t    int sj0I = int(sj0);\n\t    int sj1I = int(sj1);\n\t    int si0I = int(si0);\n\t    int si1I = int(si1);\n\n\t    float sum = 0.0;\n\t    sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n\t    sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n\t    sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n\t    sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.upsampleBilinear[n]=t}return zi((()=>{const e=this.kernelCaches.upsampleBilinear[n];return this._compileAndRun(e,[t])}))}_downsampleBilinear(t){const e=t.shape[0],n=t.shape[1],r="w"+n;if(this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),!this.kernelCaches.downsampleBilinear[r]){const t={variableNames:["p"],outputShape:[Math.floor(e/2),Math.floor(n/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\n\t    float sum = getP(y, x) * 0.25;\n\t    sum += getP(y+1,x) * 0.25; \n\t    sum += getP(y, x+1) * 0.25; \n\t    sum += getP(y+1,x+1) * 0.25;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.downsampleBilinear[r]=t}return zi((()=>{const e=this.kernelCaches.downsampleBilinear[r];return this._compileAndRun(e,[t])}))}_compileAndRun(t,e){const n=Wi().compileAndRun(t,e);return Oi().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(t,e,n){const r=Wi().runWebGLProgram(t,e,n);return Oi().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}}class GD{constructor(t,e,n=!1){this.debugMode=n,this.width=t,this.height=e;let r=Math.min(t,e)/2,s=Math.pow(2,Math.round(Math.log(r)/Math.log(2)));this.cropSize=s,this.detector=new VD(s,s,n),this.kernelCaches={},this.lastRandomIndex=4}detect(t){const e=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),r=this._detect(t,n,e);return this.debugMode&&(r.debugExtra.crop={startX:n,startY:e,cropSize:this.cropSize}),r}detectMoving(t){const e=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let r=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),s=Math.floor(this.width/2-this.cropSize+e*this.cropSize/2);return s<0&&(s=0),r<0&&(r=0),s>=this.width-this.cropSize&&(s=this.width-this.cropSize-1),r>=this.height-this.cropSize&&(r=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(t,s,r)}_detect(t,e,n){const r=t.slice([n,e],[this.cropSize,this.cropSize]),{featurePoints:s,debugExtra:i}=this.detector.detect(r);return s.forEach((t=>{t.x+=e,t.y+=n})),this.debugMode&&(i.projectedImage=r.arraySync()),r.dispose(),{featurePoints:s,debugExtra:i}}}module.exports=function(){return require("!!/Users/24g/Projects/530-R&D3-AR/mind-ar-js/node_modules/worker-loader/dist/workers/InlineWorker.js")('(()=>{"use strict";class t{constructor(t,e,r){this.cumsum=[];for(let t=0;t<r;t++){this.cumsum.push([]);for(let r=0;r<e;r++)this.cumsum[t].push(0)}this.cumsum[0][0]=t[0];for(let r=1;r<e;r++)this.cumsum[0][r]=this.cumsum[0][r-1]+t[r];for(let a=1;a<r;a++)this.cumsum[a][0]=this.cumsum[a-1][0]+t[a*e];for(let a=1;a<r;a++)for(let r=1;r<e;r++)this.cumsum[a][r]=t[a*e+r]+this.cumsum[a-1][r]+this.cumsum[a][r-1]-this.cumsum[a-1][r-1]}query(t,e,r,a){let s=this.cumsum[a][r];return e>0&&(s-=this.cumsum[e-1][r]),t>0&&(s-=this.cumsum[a][t-1]),t>0&&e>0&&(s+=this.cumsum[e-1][t-1]),s}}const e=e=>{const{data:i,width:u,height:l,scale:h}=e,o=[u*l];for(let t=0;t<o.length;t++)o[t]=!1;const m=new Float32Array(i.length);for(let t=0;t<u;t++)m[t]=-1,m[u*(l-1)+t]=-1;for(let t=0;t<l;t++)m[t*u]=-1,m[t*u+u-1]=-1;for(let t=1;t<u-1;t++)for(let e=1;e<l-1;e++){let r=t+u*e,a=0,s=0;for(let t=-1;t<=1;t++)a+=i[r+u*t+1]-i[r+u*t-1],s+=i[r+u+t]-i[r-u+t];a/=768,s/=768,m[r]=Math.sqrt((a*a+s*s)/2)}const n=new Uint32Array(1e3);for(let t=0;t<1e3;t++)n[t]=0;const c=[-1,1,-u,u];let f=0;for(let t=1;t<u-1;t++)for(let e=1;e<l-1;e++){let r=t+u*e,a=!0;for(let t=0;t<c.length;t++)if(m[r]<=m[r+c[t]]){a=!1;break}if(a){let t=Math.floor(1e3*m[r]);t>999&&(t=999),t<0&&(t=0),n[t]+=1,f+=1,o[r]=!0}}const g=.02*u*l;let d=999,y=0;for(;d>=0&&(y+=n[d],!(y>g));)d--;for(let t=0;t<o.length;t++)o[t]&&1e3*m[t]<d&&(o[t]=!1);const p=[];for(let t=0;t<i.length;t++)p[t]=i[t]*i[t];const M=new t(i,u,l),w=new t(p,u,l),q=new Float32Array(i.length);for(let t=0;t<u;t++)for(let r=0;r<l;r++){const i=r*u+t;if(!o[i]){q[i]=1;continue}const l=a({image:e,cx:t,cy:r,sdThresh:5,imageDataCumsum:M,imageDataSqrCumsum:w});if(null===l){q[i]=1;continue}let h=-1;for(let a=-10;a<=10;a++){for(let i=-10;i<=10;i++){if(i*i+a*a<=4)continue;const u=s({image:e,cx:t+i,cy:r+a,vlen:l,tx:t,ty:r,imageDataCumsum:M,imageDataSqrCumsum:w});if(null!==u&&u>h&&(h=u,h>.95))break}if(h>.95)break}q[i]=h}return r({image:e,featureMap:q,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:M,imageDataSqrCumsum:w})},r=t=>{let{image:e,featureMap:r,templateSize:i,searchSize:u,occSize:l,maxSimThresh:h,minSimThresh:o,sdThresh:m,imageDataCumsum:n,imageDataSqrCumsum:c}=t;const{data:f,width:g,height:d,scale:y}=e;l=Math.floor(Math.min(e.width,e.height)/10);const p=3*(2*i+1),M=Math.floor(g/p),w=Math.floor(d/p);let q=Math.floor(g/l)*Math.floor(d/l)+M*w;const S=[],D=new Float32Array(f.length);for(let t=0;t<D.length;t++)D[t]=r[t];let C=0;for(;C<q;){let t=h,r=-1,f=-1;for(let e=0;e<d;e++)for(let a=0;a<g;a++)D[e*g+a]<t&&(t=D[e*g+a],r=a,f=e);if(-1===r)break;const y=a({image:e,cx:r,cy:f,sdThresh:0,imageDataCumsum:n,imageDataSqrCumsum:c});if(null===y){D[f*g+r]=1;continue}if(y/(2*i+1)<m){D[f*g+r]=1;continue}let p=1,M=-1;for(let a=-u;a<=u;a++){for(let i=-u;i<=u;i++){if(i*i+a*a>u*u)continue;if(0===i&&0===a)continue;const l=s({image:e,vlen:y,cx:r+i,cy:f+a,tx:r,ty:f,imageDataCumsum:n,imageDataSqrCumsum:c});if(null!==l){if(l<p&&(p=l,p<o&&p<t))break;if(l>M&&(M=l,M>.99))break}}if(p<o&&p<t||M>.99)break}if(p<o&&p<t||M>.99)D[f*g+r]=1;else{S.push({x:r,y:f}),C+=1;for(let t=-l;t<=l;t++)for(let e=-l;e<=l;e++)f+t<0||f+t>=d||r+e<0||r+e>=g||(D[(f+t)*g+(r+e)]=1)}}return S},a=({image:t,cx:e,cy:r,sdThresh:a,imageDataCumsum:s,imageDataSqrCumsum:i})=>{if(e-6<0||e+6>=t.width)return null;if(r-6<0||r+6>=t.height)return null;let u=s.query(e-6,r-6,e+6,r+6);u/=169;let l=i.query(e-6,r-6,e+6,r+6);return l-=2*u*s.query(e-6,r-6,e+6,r+6),l+=169*u*u,l/169<a*a?null:(l=Math.sqrt(l),l)},s=t=>{const{image:e,cx:r,cy:a,vlen:s,tx:i,ty:u,imageDataCumsum:l,imageDataSqrCumsum:h}=t,{data:o,width:m,height:n}=e;if(r-6<0||r+6>=m)return null;if(a-6<0||a+6>=n)return null;let c=l.query(r-6,a-6,r+6,a+6),f=h.query(r-6,a-6,r+6,a+6),g=0,d=(a-6)*m+(r-6),y=(u-6)*m+(i-6),p=m-13;for(let t=0;t<13;t++){for(let t=0;t<13;t++)g+=o[d]*o[y],d+=1,y+=1;d+=p,y+=p}let M=l.query(i-6,u-6,i+6,u+6);M/=169,g-=M*c;let w=f-c*c/169;return 0==w?null:(w=Math.sqrt(w),1*g/(s*w))},i=({image:t,ratio:e})=>{const r=Math.round(t.width*e),a=Math.round(t.height*e),s=new Uint8Array(r*a);for(let i=0;i<r;i++){let u=Math.round(1*i/e),l=Math.round(1*(i+1)/e)-1;l>=t.width&&(l=t.width-1);for(let h=0;h<a;h++){let a=Math.round(1*h/e),o=Math.round(1*(h+1)/e)-1;o>=t.height&&(o=t.height-1);let m=0,n=0;for(let e=u;e<=l;e++)for(let r=a;r<=o;r++)m+=1*t.data[r*t.width+e],n+=1;s[h*r+i]=Math.floor(m/n)}}return{data:s,width:r,height:a}},u=t=>{const e=Math.min(t.width,t.height),r=[],a=[];r.push(256/e),r.push(128/e);for(let e=0;e<r.length;e++)a.push(Object.assign(i({image:t,ratio:r[e]}),{scale:r[e]}));return a};onmessage=t=>{const{data:e}=t;if("compile"===e.type){const{targetImages:t}=e,r=50/t.length;let a=0;const s=[];for(let e=0;e<t.length;e++){const i=t[e],h=u(i),o=r/h.length,m=l(h,(t=>{a+=o,postMessage({type:"progress",percent:a})}));s.push(m)}postMessage({type:"compileDone",list:s})}};const l=(t,r)=>{const a=[];for(let s=0;s<t.length;s++){const i=t[s],u=e(i),l={data:i.data,scale:i.scale,width:i.width,height:i.height,points:u};a.push(l),r(s)}return a}})();',n.p+"compiler.worker.prod.js")};const HD=({image:t,ratio:e})=>{const n=Math.round(t.width*e),r=Math.round(t.height*e),s=new Uint8Array(n*r);for(let i=0;i<n;i++){let a=Math.round(1*i/e),o=Math.round(1*(i+1)/e)-1;o>=t.width&&(o=t.width-1);for(let l=0;l<r;l++){let r=Math.round(1*l/e),u=Math.round(1*(l+1)/e)-1;u>=t.height&&(u=t.height-1);let h=0,c=0;for(let e=a;e<=o;e++)for(let n=r;n<=u;n++)h+=1*t.data[n*t.width+e],c+=1;s[l*n+i]=Math.floor(h/c)}}return{data:s,width:n,height:r}},jD=t=>{const e=[];let n=100/Math.min(t.width,t.height);for(;;)if(e.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}e.push(n),e.reverse();const r=[];for(let n=0;n<e.length;n++)t.width,e[n],t.height,e[n],r.push(Object.assign(HD({image:t,ratio:e[n]}),{scale:e[n]}));return r},qD=t=>{const e=Math.min(t.width,t.height),n=[],r=[];n.push(256/e),n.push(128/e);for(let e=0;e<n.length;e++)r.push(Object.assign(HD({image:t,ratio:n[e]}),{scale:n[e]}));return r},KD=t=>{const{v1:e,v2:n}=t;let r=0;for(let t=0;t<e.length;t++){let s=(e[t]^n[t])>>>0;r+=XD(s)}return r},XD=t=>{var e=t-(t>>1&1431655765);return((e=((e=((e=(e>>2&858993459)+(858993459&e))>>4)+e&252645135)>>8)+e&16711935)>>16)+e&65535},YD=()=>{const t={seed:1234,arrayShuffle(t){const{arr:e,sampleSize:n}=t;for(let t=0;t<n;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let n=this.seed>>16&32767;n%=e.length;let r=e[t];e[t]=e[n],e[n]=r}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}};return t},ZD=({points:t})=>{const e=[];for(let n=0;n<t.length;n++)e.push(n);const n=YD();return{rootNode:JD({points:t,pointIndexes:e,centerPointIndex:null,randomizer:n})}},JD=t=>{const{points:e,pointIndexes:n,centerPointIndex:r,randomizer:s}=t;let i=!1;(n.length<=8||n.length<=16)&&(i=!0);const a={};if(!i){const t=(t=>{const{points:e,pointIndexes:n,randomizer:r}=t,s=[];for(let t=0;t<n.length;t++)s.push(t);let i=Number.MAX_SAFE_INTEGER,a=-1;const o=[];for(let t=0;t<128;t++){r.arrayShuffle({arr:s,sampleSize:8});let l=0;const u=[];for(let t=0;t<n.length;t++){let r=Number.MAX_SAFE_INTEGER;for(let i=0;i<8;i++){const a=n[s[i]],o=KD({v1:e[n[t]].descriptors,v2:e[a].descriptors});o<r&&(u[t]=s[i],r=o)}l+=r}o.push(u),l<i&&(i=l,a=t)}return o[a]})({points:e,pointIndexes:n,randomizer:s});for(let e=0;e<t.length;e++)void 0===a[n[t[e]]]&&(a[n[t[e]]]=[]),a[n[t[e]]].push(n[e])}1===Object.keys(a).length&&(i=!0);const o={centerPointIndex:r};if(i){o.leaf=!0,o.pointIndexes=[];for(let t=0;t<n.length;t++)o.pointIndexes.push(n[t]);return o}return o.leaf=!1,o.children=[],Object.keys(a).forEach((t=>{o.children.push(JD({points:e,pointIndexes:a[t],centerPointIndex:t,randomizer:s}))})),o};var QD=n(113);class tM{constructor(){this.data=null}compileImageTargets(t,e){return new Promise((async(n,r)=>{const s=[];for(let e=0;e<t.length;e++){const n=t[e],r=document.createElement("canvas");r.width=n.width,r.height=n.height;const i=r.getContext("2d");i.drawImage(n,0,0,n.width,n.height);const a=i.getImageData(0,0,n.width,n.height),o=new Uint8Array(n.width*n.height);for(let t=0;t<o.length;t++){const e=4*t;o[t]=Math.floor((a.data[e]+a.data[e+1]+a.data[e+2])/3)}const l={data:o,height:n.height,width:n.width};s.push(l)}const i=50/s.length;let o=0;this.data=[];for(let t=0;t<s.length;t++){const n=s[t],r=jD(n),a=i/r.length,l=await eM(r,(()=>{o+=a,e(o)}));this.data.push({targetImage:n,imageList:r,matchingData:l})}for(let t=0;t<s.length;t++){const e=qD(s[t]);this.data[t].trackingImageList=e}const l=await new Promise(((t,n)=>{const r=new a;r.onmessage=n=>{"progress"===n.data.type?e(50+n.data.percent):"compileDone"===n.data.type&&t(n.data.list)},r.postMessage({type:"compile",targetImages:s})}));for(let t=0;t<s.length;t++)this.data[t].trackingData=l[t];n(this.data)}))}exportData(){const t=[];for(let e=0;e<this.data.length;e++)t.push({targetImage:{width:this.data[e].targetImage.width,height:this.data[e].targetImage.height},trackingData:this.data[e].trackingData,matchingData:this.data[e].matchingData});return QD.encode({v:2,dataList:t})}importData(t){const e=QD.decode(new Uint8Array(t));if(!e.v||2!==e.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=e;this.data=[];for(let t=0;t<n.length;t++)this.data.push({targetImage:n[t].targetImage,trackingData:n[t].trackingData,matchingData:n[t].matchingData});return this.data}}const eM=async(t,e)=>{const n=[];for(let r=0;r<t.length;r++){const s=t[r],i=new VD(s.width,s.height);await bu(),zi((()=>{const t=ks(s.data,[s.data.length],"float32").reshape([s.height,s.width]),{featurePoints:a}=i.detect(t),o=a.filter((t=>t.maxima)),l=a.filter((t=>!t.maxima)),u=ZD({points:o}),h=ZD({points:l});n.push({maximaPoints:o,minimaPoints:l,maximaPointsCluster:u,minimaPointsCluster:h,width:s.width,height:s.height,scale:s.scale}),e(r)}))}return n};class nM{constructor(t,e){this.width=t,this.height=e,this.texShape=[e,t];const n=document.createElement("canvas").getContext("2d");n.canvas.width=t,n.canvas.height=e,this.context=n,this.program=this.buildProgram(t,e);const r=Wi();this.tempPixelHandle=r.makeTensorInfo(this.texShape,"float32"),r.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(t){return zi((()=>{let e=mi(t);return e=e.mean(2),e}))}loadInput(t){this.context.drawImage(t,0,0,this.width,this.height);const e=Wi();return e.gpgpu.uploadPixelDataToTexture(e.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(t,e){const n=2===X().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${t}.0, ${e}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(t,e){const n=Wi().compileAndRun(t,e);return Oi().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(t,e,n){const r=Wi().runWebGLProgram(t,e,n);return Oi().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}}const rM=(t,e)=>{const n=2*Math.PI*e*t;return n/(n+1)},sM=(t,e,n)=>t*e+(1-t)*n;class iM{constructor({minCutOff:t,beta:e}){this.minCutOff=t,this.beta=e,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(t,e){if(!this.initialized)return this.initialized=!0,this.xPrev=e,this.dxPrev=e.map((()=>0)),this.tPrev=t,e;const{xPrev:n,tPrev:r,dxPrev:s}=this,i=t-r,a=rM(i,this.dCutOff),o=[],l=[],u=[];for(let t=0;t<e.length;t++){o[t]=(e[t]-n[t])/i,l[t]=sM(a,o[t],s[t]);const r=this.minCutOff+this.beta*Math.abs(l[t]),h=rM(i,r);u[t]=sM(h,e[t],n[t])}return this.xPrev=u,this.dxPrev=l,this.tPrev=t,u}}var aM=n(379),oM=n.n(aM),lM=n(485);oM()(lM.Z,{insert:"head",singleton:!1}),lM.Z.locals;const uM='<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '.default,hM='<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '.default,cM='<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '.default;const dM={Controller:class{constructor({inputWidth:t,inputHeight:e,onUpdate:n=null,debugMode:r=!1,maxTrack:s=1,warmupTolerance:a=null,missTolerance:o=null,filterMinCF:l=null,filterBeta:u=null}){this.inputWidth=t,this.inputHeight=e,this.maxTrack=s,this.filterMinCF=null===l?.001:l,this.filterBeta=null===u?1e3:u,this.warmupTolerance=null===a?5:a,this.missTolerance=null===o?5:o,this.cropDetector=new GD(this.inputWidth,this.inputHeight,r),this.inputLoader=new nM(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=n,this.debugMode=r,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const h=45*Math.PI/180,c=this.inputHeight/2/Math.tan(h/2);this.projectionTransform=[[c,0,this.inputWidth/2],[0,c,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new i,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=t=>{"matchDone"===t.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(t.data),"trackUpdateDone"===t.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(t.data)}}showTFStats(){console.log(Li().numTensors),console.table(Li())}addImageTargets(t){return new Promise((async(e,n)=>{const r=await fetch(t),s=await r.arrayBuffer();e(this.addImageTargetsFromBuffer(s))}))}addImageTargetsFromBuffer(t){const e=(new tM).importData(t),n=[],r=[],s=[];for(let t=0;t<e.length;t++)r.push(e[t].matchingData),n.push(e[t].trackingData),s.push([e[t].targetImage.width,e[t].targetImage.height]);return this.tracker=new PD(s,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:r}),this.markerDimensions=s,{dimensions:s,matchingDataList:r,trackingDataList:n}}dummyRun(t){const e=this.inputLoader.loadInput(t);this.cropDetector.detect(e),this.tracker.dummyRun(e),e.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(t,e){return this._glModelViewMatrix(t,e)}async _detectAndMatch(t,e){const{featurePoints:n}=this.cropDetector.detectMoving(t),{targetIndex:r,modelViewTransform:s}=await this._workerMatch(n,e);return{targetIndex:r,modelViewTransform:s}}async _trackAndUpdate(t,e,n){const{worldCoords:r,screenCoords:s}=this.tracker.track(t,e,n);return r.length<4?null:await this._workerTrackUpdate(e,{worldCoords:r,screenCoords:s})}processVideo(t){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let t=0;t<this.markerDimensions.length;t++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new iM({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const e=this.inputLoader.loadInput(t);if(this.trackingStates.reduce(((t,e)=>t+(e.isTracking?1:0)),0)<this.maxTrack){const t=[];for(let e=0;e<this.trackingStates.length;e++)!0!==this.trackingStates[e].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==e||t.push(e));const{targetIndex:n,modelViewTransform:r}=await this._detectAndMatch(e,t);-1!==n&&(this.trackingStates[n].isTracking=!0,this.trackingStates[n].currentModelViewTransform=r)}for(let t=0;t<this.trackingStates.length;t++){const n=this.trackingStates[t];if(n.isTracking){let r=await this._trackAndUpdate(e,n.currentModelViewTransform,t);null===r?n.isTracking=!1:n.currentModelViewTransform=r}if(n.showing||n.isTracking&&(n.trackMiss=0,n.trackCount+=1,n.trackCount>this.warmupTolerance&&(n.showing=!0,n.trackingMatrix=null,n.filter.reset())),n.showing&&(n.isTracking?n.trackMiss=0:(n.trackCount=0,n.trackMiss+=1,n.trackMiss>this.missTolerance&&(n.showing=!1,n.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:t,worldMatrix:null})))),n.showing){const e=this._glModelViewMatrix(n.currentModelViewTransform,t);n.trackingMatrix=n.filter.filter(Date.now(),e);const r=[];for(let t=0;t<n.trackingMatrix.length;t++)r[t]=n.trackingMatrix[t];this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:t,worldMatrix:r})}}e.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await bu()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(t){const e=this.inputLoader.loadInput(t),{featurePoints:n,debugExtra:r}=await this.cropDetector.detect(e);return e.dispose(),{featurePoints:n,debugExtra:r}}async match(t,e){const{modelViewTransform:n,debugExtra:r}=await this._workerMatch(t,[e]);return{modelViewTransform:n,debugExtra:r}}async track(t,e,n){const r=this.inputLoader.loadInput(t),s=this.tracker.track(r,e,n);return r.dispose(),s}async trackUpdate(t,e){return e.worldCoords.length<4?null:await this._workerTrackUpdate(t,e)}_workerMatch(t,e){return new Promise((async(n,r)=>{this.workerMatchDone=t=>{n({targetIndex:t.targetIndex,modelViewTransform:t.modelViewTransform,debugExtra:t.debugExtra})},this.worker.postMessage({type:"match",featurePoints:t,targetIndexes:e})}))}_workerTrackUpdate(t,e){return new Promise((async(n,r)=>{this.workerTrackDone=t=>{n(t.modelViewTransform)};const{worldCoords:s,screenCoords:i}=e;this.worker.postMessage({type:"trackUpdate",modelViewTransform:t,worldCoords:s,screenCoords:i})}))}_glModelViewMatrix(t,e){const n=this.markerDimensions[e][1];return[t[0][0],-t[1][0],-t[2][0],0,-t[0][1],t[1][1],t[2][1],0,-t[0][2],t[1][2],t[2][2],0,t[0][1]*n+t[0][3],-(t[1][1]*n+t[1][3]),-(t[2][1]*n+t[2][3]),1]}_glProjectionMatrix({projectionTransform:t,width:e,height:n,near:r,far:s}){const i=[[2*t[0][0]/e,0,-(2*t[0][2]/e-1),0],[0,2*t[1][1]/n,-(2*t[1][2]/n-1),0],[0,0,-(s+r)/(s-r),-2*s*r/(s-r)],[0,0,-1,0]],a=[];for(let t=0;t<4;t++)for(let e=0;e<4;e++)a.push(i[e][t]);return a}},Compiler:tM,UI:class{constructor({uiLoading:t,uiScanning:e,uiError:n}){"yes"===t?this.loadingModal=this._loadHTML(uM):"no"!==t&&(this.loadingModal=document.querySelector(t)),"yes"===n?this.compatibilityModal=this._loadHTML(hM):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===e?this.scanningMask=this._loadHTML(cM):"no"!==e&&(this.scanningMask=document.querySelector(e)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(t){const e=document.createElement("template");e.innerHTML=t.trim();const n=e.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}};window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE=dM})()})();